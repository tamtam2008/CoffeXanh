import { NavigationContainer } from '@react-navigation/native';import { createStackNavigator } from '@react-navigation/stack';import * as React from 'react';import { useCallback } from 'react';import { Platform, StatusBar, StyleSheet, View } from 'react-native';import FlashMessage from 'react-native-flash-message';import 'react-native-gesture-handler';import { SafeAreaProvider } from 'react-native-safe-area-context';import Colors from './constants/Colors';import { normalize } from './constants/Layout';import './languages/i18n.config';import i18n from './languages/i18n.config';import SplashScreen from './screens/Splash.screen';import SessionUtils from './session/SessionUtils';import useRootNavigation from './utils/useRootNavigation';import inAppMessaging from '@react-native-firebase/in-app-messaging';import RootScreen from './screens/root/Root.screen';import AuthScreen from './screens/auth/Auth.screen';import { Provider } from 'react-redux';import store from './redux/store';const Stack = createStackNavigator();export default function App() {  const [isLoadingComplete, setLoadingComplete] = React.useState(false);  const { navigationRef, isMountedRef } = useRootNavigation();  const loadResourcesAndDataAsync = useCallback(async () => {    await inAppMessaging().setMessagesDisplaySuppressed(true);    await SessionUtils.init();    await i18n.changeLanguage(SessionUtils.config().language);    setLoadingComplete(true);    const session = SessionUtils.session();    const toScreen =      session?.isLogin || !session?.isNew || !!session?.userId        ? 'Root'        : 'Auth';    navigationRef.current?.navigate(toScreen);  }, [navigationRef]);  React.useEffect(() => {    if (!isLoadingComplete) {      loadResourcesAndDataAsync();    }    isMountedRef.current = true;    return () => {      isMountedRef.current = false;    };  }, [isLoadingComplete, isMountedRef, loadResourcesAndDataAsync]);  return (    <SafeAreaProvider>      <Provider store={store}>        <View style={styles.container}>          {Platform.OS === 'ios' && <StatusBar barStyle="default" />}          <NavigationContainer ref={navigationRef}>            <Stack.Navigator initialRouteName={'Splash'}>              <Stack.Screen                name={'Splash'}                component={SplashScreen}                options={{ headerShown: false }}              />              <Stack.Screen                name="Auth"                component={AuthScreen}                options={{ headerShown: false }}              />              <Stack.Screen                name="Root"                component={RootScreen}                options={{ headerShown: false }}              />            </Stack.Navigator>          </NavigationContainer>          {/* GLOBAL FLASH MESSAGE COMPONENT INSTANCE */}          <FlashMessage position="top" duration={3000} />        </View>      </Provider>    </SafeAreaProvider>  );}const styles = StyleSheet.create({  container: {    flex: 1,    backgroundColor: Colors.backgroundColor,    color: Colors.gray,    fontWeight: '400',    fontSize: normalize(14),    fontFamily: 'Roboto',  },});