{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = RootScreen;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _BottomTabNavigator = _interopRequireDefault(require(\"../../navigation/BottomTabNavigator\"));\n\nvar _routes = require(\"../routes\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _BaseStyles = require(\"../../constants/BaseStyles\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _FirebaseUtil = _interopRequireDefault(require(\"../../session/FirebaseUtil\"));\n\nvar _inAppMessaging = _interopRequireDefault(require(\"@react-native-firebase/in-app-messaging\"));\n\nvar _Layout = _interopRequireDefault(require(\"../../constants/Layout\"));\n\nvar _messaging = _interopRequireDefault(require(\"@react-native-firebase/messaging\"));\n\nvar _NoticeUtils = _interopRequireDefault(require(\"../../session/NoticeUtils\"));\n\nvar _Splash = _interopRequireDefault(require(\"../Splash.screen\"));\n\nvar _UserService = _interopRequireDefault(require(\"../../services/UserService\"));\n\nvar _SessionUtils = _interopRequireDefault(require(\"../../session/SessionUtils\"));\n\nvar _Container = _interopRequireDefault(require(\"../../components/layout/Container\"));\n\nvar _TopNotifyUtils = _interopRequireDefault(require(\"../../utils/TopNotifyUtils\"));\n\nvar _rxjs = require(\"rxjs\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nrequire(\"moment/locale/vi\");\n\nvar _i18next = _interopRequireDefault(require(\"i18next\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\Root.screen.js\";\n\n_moment.default.locale(_i18next.default.language);\n\n(0, _messaging.default)().setBackgroundMessageHandler(function _callee(remoteMessage) {\n  return _regenerator.default.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.log('Message handled in the background!', remoteMessage);\n\n          _NoticeUtils.default.addNotice(remoteMessage);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n});\nvar Root = (0, _stack.createStackNavigator)();\n\nfunction RootScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState({\n    value: false,\n    msgErr: ''\n  }),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isFail = _React$useState2[0],\n      setFail = _React$useState2[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var userId = _SessionUtils.default.session().userId;\n\n  React.useEffect(function () {\n    (0, _inAppMessaging.default)().setMessagesDisplaySuppressed(false);\n  });\n  React.useEffect(function () {\n    return _FirebaseUtil.default.handleToken();\n  }, [userId]);\n  React.useEffect(_FirebaseUtil.default.onMessage, []);\n  React.useEffect(function () {\n    var loadingActions = function loadingActions() {\n      return _regenerator.default.async(function loadingActions$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regenerator.default.awrap(_NoticeUtils.default.init());\n\n            case 2:\n              _context2.next = 4;\n              return _regenerator.default.awrap(_FirebaseUtil.default.init());\n\n            case 4:\n              if (_SessionUtils.default.session().isLogin) {\n                onLoadCommonConfig();\n              } else {\n                navigation.navigate('bottomTabs');\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    loadingActions().then();\n  }, [navigation, onLoadCommonConfig]);\n  var onLoadCommonConfig = React.useCallback(function () {\n    (0, _rxjs.forkJoin)({\n      config: _UserService.default.getCommon(userId),\n      profile: _UserService.default.getUserInfo(userId)\n    }).subscribe(function (data) {\n      var _data$config$response = data.config.response,\n          configStatus = _data$config$response.status,\n          hotline = _data$config$response.hotline,\n          rank = _data$config$response.data,\n          rankInfo = _data$config$response.notes;\n      var _data$profile$respons = data.profile.response,\n          profile = _data$profile$respons.data,\n          profileStatus = _data$profile$respons.status,\n          pathHelpLink = _data$profile$respons.pathHelpLink;\n\n      if (configStatus === 200 && profileStatus === 200) {\n        _SessionUtils.default.setConfig({\n          hotline: hotline,\n          rank: rank,\n          rankInfo: rankInfo,\n          pathHelpLink: pathHelpLink\n        });\n\n        _SessionUtils.default.updateUserInfo(profile);\n      } else {\n        var failMsg = configStatus === 500 || configStatus === 0 || profileStatus === 500 || profileStatus === 0 ? \"notify.code.\" + (configStatus === 500 || profileStatus === 500 ? 500 : 0) : 'notify.failMsg';\n        setFail({\n          value: true,\n          msgErr: failMsg\n        });\n\n        _TopNotifyUtils.default.fail(failMsg);\n      }\n\n      navigation.navigate('bottomTabs');\n    });\n  }, [navigation, userId]);\n  return React.createElement(_Container.default, {\n    onRefresh: onLoadCommonConfig,\n    scrollEnabled: false,\n    isFail: isFail.value,\n    failMsg: isFail.msgErr,\n    noBackground: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, React.createElement(Root.Navigator, {\n    initialRouteName: 'Splash',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, React.createElement(Root.Screen, {\n    name: 'Splash',\n    component: _Splash.default,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), React.createElement(Root.Screen, {\n    name: \"bottomTabs\",\n    component: _BottomTabNavigator.default,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), _routes.routes.screens.map(function (val, idx) {\n    return React.createElement(Root.Screen, {\n      key: idx,\n      name: val.name,\n      component: val.component,\n      options: val.title ? {\n        headerTitle: function headerTitle(props) {\n          return React.createElement(_reactNative.Text, (0, _extends2.default)({}, props, {\n            style: _reactNative.StyleSheet.flatten([_BaseStyles.BaseFontStyles.headline, {\n              width: _Layout.default.window.width * 0.7,\n              textAlign: 'center',\n              paddingRight: 15\n            }]),\n            numberOfLines: 1,\n            lineBreakMode: 'tail',\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 25\n            }\n          }), t(val.title));\n        }\n      } : {},\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/Root.screen.js"],"names":["moment","locale","i18next","language","setBackgroundMessageHandler","remoteMessage","console","log","NoticeUtils","addNotice","Root","RootScreen","navigation","route","React","useState","value","msgErr","isFail","setFail","t","userId","SessionUtils","session","useEffect","setMessagesDisplaySuppressed","FirebaseUtil","handleToken","onMessage","loadingActions","init","isLogin","onLoadCommonConfig","navigate","then","useCallback","config","UserService","getCommon","profile","getUserInfo","subscribe","data","response","configStatus","status","hotline","rank","rankInfo","notes","profileStatus","pathHelpLink","setConfig","updateUserInfo","failMsg","TopNotifyUtils","fail","SplashScreen","headerShown","BottomTabNavigator","routes","screens","map","val","idx","name","component","title","headerTitle","props","StyleSheet","flatten","BaseFontStyles","headline","width","Layout","window","textAlign","paddingRight"],"mappings":"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","sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\r\nimport * as React from 'react';\r\nimport BottomTabNavigator from '../../navigation/BottomTabNavigator';\r\nimport { routes } from '../routes';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { BaseFontStyles } from '../../constants/BaseStyles';\r\nimport { StyleSheet, Text } from 'react-native';\r\nimport FirebaseUtil from '../../session/FirebaseUtil';\r\nimport inAppMessaging from '@react-native-firebase/in-app-messaging';\r\nimport Layout from '../../constants/Layout';\r\nimport messaging from '@react-native-firebase/messaging';\r\nimport NoticeUtils from '../../session/NoticeUtils';\r\nimport SplashScreen from '../Splash.screen';\r\nimport UserService from '../../services/UserService';\r\nimport SessionUtils from '../../session/SessionUtils';\r\nimport Container from '../../components/layout/Container';\r\nimport TopNotifyUtils from '../../utils/TopNotifyUtils';\r\nimport { forkJoin } from 'rxjs';\r\nimport moment from 'moment';\r\nimport 'moment/locale/vi';\r\nimport i18next from 'i18next';\r\n\r\nmoment.locale(i18next.language);\r\n// Register background handler\r\nmessaging().setBackgroundMessageHandler(async (remoteMessage) => {\r\n  console.log('Message handled in the background!', remoteMessage);\r\n  NoticeUtils.addNotice(remoteMessage);\r\n});\r\nconst Root = createStackNavigator();\r\nexport default function RootScreen({ navigation, route }) {\r\n  const [isFail, setFail] = React.useState({ value: false, msgErr: '' });\r\n  const { t } = useTranslation();\r\n  const userId = SessionUtils.session().userId;\r\n  React.useEffect(() => {\r\n    inAppMessaging().setMessagesDisplaySuppressed(false);\r\n  });\r\n  React.useEffect(() => FirebaseUtil.handleToken(), [userId]);\r\n  // receive msg\r\n  React.useEffect(FirebaseUtil.onMessage, []);\r\n  React.useEffect(() => {\r\n    const loadingActions = async () => {\r\n      await NoticeUtils.init();\r\n      await FirebaseUtil.init();\r\n      if (SessionUtils.session().isLogin) {\r\n        onLoadCommonConfig();\r\n      } else {\r\n        navigation.navigate('bottomTabs');\r\n      }\r\n    };\r\n    loadingActions().then();\r\n  }, [navigation, onLoadCommonConfig]);\r\n  const onLoadCommonConfig = React.useCallback(() => {\r\n    forkJoin({\r\n      config: UserService.getCommon(userId),\r\n      profile: UserService.getUserInfo(userId),\r\n    }).subscribe((data) => {\r\n      const {\r\n        status: configStatus,\r\n        hotline,\r\n        data: rank,\r\n        notes: rankInfo,\r\n      } = data.config.response;\r\n      const {\r\n        data: profile,\r\n        status: profileStatus,\r\n        pathHelpLink,\r\n      } = data.profile.response;\r\n      if (configStatus === 200 && profileStatus === 200) {\r\n        SessionUtils.setConfig({ hotline, rank, rankInfo, pathHelpLink });\r\n        SessionUtils.updateUserInfo(profile);\r\n      } else {\r\n        const failMsg =\r\n          configStatus === 500 ||\r\n          configStatus === 0 ||\r\n          profileStatus === 500 ||\r\n          profileStatus === 0\r\n            ? `notify.code.${\r\n                configStatus === 500 || profileStatus === 500 ? 500 : 0\r\n              }`\r\n            : 'notify.failMsg';\r\n        setFail({ value: true, msgErr: failMsg });\r\n        TopNotifyUtils.fail(failMsg);\r\n      }\r\n      // console.log('Root', JSON.stringify(data));\r\n      navigation.navigate('bottomTabs');\r\n    });\r\n  }, [navigation, userId]);\r\n  return (\r\n    <Container\r\n      onRefresh={onLoadCommonConfig}\r\n      scrollEnabled={false}\r\n      isFail={isFail.value}\r\n      failMsg={isFail.msgErr}\r\n      noBackground={true}>\r\n      <Root.Navigator initialRouteName={'Splash'}>\r\n        <Root.Screen\r\n          name={'Splash'}\r\n          component={SplashScreen}\r\n          options={{ headerShown: false }}\r\n        />\r\n        <Root.Screen\r\n          name=\"bottomTabs\"\r\n          component={BottomTabNavigator}\r\n          options={{ headerShown: false }}\r\n        />\r\n        {routes.screens.map((val, idx) => {\r\n          return (\r\n            <Root.Screen\r\n              key={idx}\r\n              name={val.name}\r\n              component={val.component}\r\n              options={\r\n                val.title\r\n                  ? {\r\n                      headerTitle: (props) => (\r\n                        <Text\r\n                          {...props}\r\n                          style={StyleSheet.flatten([\r\n                            BaseFontStyles.headline,\r\n                            {\r\n                              width: Layout.window.width * 0.7,\r\n                              textAlign: 'center',\r\n                              paddingRight: 15,\r\n                            },\r\n                          ])}\r\n                          numberOfLines={1}\r\n                          lineBreakMode={'tail'}>\r\n                          {t(val.title)}\r\n                        </Text>\r\n                      ),\r\n                    }\r\n                  : {}\r\n              }\r\n            />\r\n          );\r\n        })}\r\n      </Root.Navigator>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}