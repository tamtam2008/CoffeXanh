{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _CustomIcon = _interopRequireDefault(require(\"../../../../components/CustomIcon\"));\n\nvar _BaseStyles = require(\"../../../../constants/BaseStyles\");\n\nvar _Colors = _interopRequireDefault(require(\"../../../../constants/Colors\"));\n\nvar _Icon = require(\"../../../../constants/Icon\");\n\nvar _XIconButton = _interopRequireDefault(require(\"../../../../components/XIconButton\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\settingMenu\\\\components\\\\SettingHeader.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar SettingHeader = function SettingHeader(_ref) {\n  var userInfo = _ref.userInfo,\n      phone = _ref.phone,\n      isNew = _ref.isNew;\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.flexRow, _BaseStyles.BaseStyles.alignItemsCenter],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [styles.avatarContainer, _BaseStyles.BaseStyles.boxWithShadow],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, (userInfo == null ? void 0 : userInfo.avatar) ? _react.default.createElement(_reactNativeSvg.Image, {\n    style: styles.avatar,\n    source: {\n      url: userInfo == null ? void 0 : userInfo.avatar\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }) : _react.default.createElement(_CustomIcon.default, {\n    type: _Icon.IconType.FONTAWESOME,\n    size: 64,\n    name: \"user-circle\",\n    focused: true,\n    other: _Icon.FontAwesomeType.SOLID,\n    custom: {\n      style: _BaseStyles.BaseStyles.textShadow\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: styles.userInfoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: _BaseStyles.BaseStyles.flexRow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.title, _BaseStyles.BaseStyles.greenColor],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, (userInfo == null ? void 0 : userInfo.name) || phone)), _react.default.createElement(_reactNative.Text, {\n    style: _BaseStyles.BaseFontStyles.caption,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, t((userInfo == null ? void 0 : userInfo.role) ? \"role.\" + (userInfo == null ? void 0 : userInfo.role) : 'role.staff')))), _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_XIconButton.default, {\n    icon: {\n      name: 'bell',\n      iconType: _Icon.IconType.FONTAWESOME,\n      size: 24,\n      other: _Icon.FontAwesomeType.SOLID\n    },\n    color: isNew > 0 ? _Colors.default.tintColor : _Colors.default.gray,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), isNew > 0 && _react.default.createElement(_reactNativeElements.Badge, {\n    value: isNew,\n    status: 'error',\n    containerStyle: styles.notify,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var auth = state.auth,\n      notify = state.notify;\n  return {\n    phone: auth == null ? void 0 : auth.phone,\n    isNew: notify == null ? void 0 : notify.isNew\n  };\n};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, null)(SettingHeader);\n\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: _objectSpread(_objectSpread({\n    height: 80,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  }, _BaseStyles.BaseStyles.baseContainerWithoutTopBottomPadding), {}, {\n    paddingTop: 10,\n    paddingBottom: 10\n  }),\n  avatarContainer: {\n    width: 64,\n    height: 64,\n    color: _Colors.default.tintColor,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  avatar: {\n    height: '100%',\n    width: '100%'\n  },\n  userInfoContainer: {\n    marginLeft: 10,\n    flexDirection: 'column'\n  },\n  point: {\n    alignItems: 'center'\n  },\n  loginBtn: {\n    width: 150\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/settingMenu/components/SettingHeader.js"],"names":["SettingHeader","userInfo","phone","isNew","t","styles","container","BaseStyles","flexRow","alignItemsCenter","avatarContainer","boxWithShadow","avatar","url","IconType","FONTAWESOME","FontAwesomeType","SOLID","style","textShadow","userInfoContainer","BaseFontStyles","title","greenColor","name","caption","role","iconType","size","other","Colors","tintColor","gray","notify","mapStateToProps","state","auth","StyleSheet","create","height","flexDirection","alignItems","justifyContent","baseContainerWithoutTopBottomPadding","paddingTop","paddingBottom","width","color","marginLeft","point","loginBtn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Image } from 'react-native-svg';\r\nimport { connect } from 'react-redux';\r\nimport CustomIcon from '../../../../components/CustomIcon';\r\nimport { BaseFontStyles, BaseStyles } from '../../../../constants/BaseStyles';\r\nimport Colors from '../../../../constants/Colors';\r\nimport { FontAwesomeType, IconType } from '../../../../constants/Icon';\r\nimport XIconButton from '../../../../components/XIconButton';\r\nimport { Badge } from 'react-native-elements';\r\n\r\nconst SettingHeader = ({ userInfo, phone, isNew }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={[BaseStyles.flexRow, BaseStyles.alignItemsCenter]}>\r\n        <View style={[styles.avatarContainer, BaseStyles.boxWithShadow]}>\r\n          {userInfo?.avatar ? (\r\n            <Image style={styles.avatar} source={{ url: userInfo?.avatar }} />\r\n          ) : (\r\n            <CustomIcon\r\n              type={IconType.FONTAWESOME}\r\n              size={64}\r\n              name=\"user-circle\"\r\n              focused={true}\r\n              other={FontAwesomeType.SOLID}\r\n              custom={{ style: BaseStyles.textShadow }}\r\n            />\r\n          )}\r\n        </View>\r\n        <View style={styles.userInfoContainer}>\r\n          <View style={BaseStyles.flexRow}>\r\n            <Text style={[BaseFontStyles.title, BaseStyles.greenColor]}>\r\n              {userInfo?.name || phone}\r\n            </Text>\r\n          </View>\r\n          <Text style={BaseFontStyles.caption}>\r\n            {t(userInfo?.role ? `role.${userInfo?.role}` : 'role.staff')}\r\n          </Text>\r\n        </View>\r\n      </View>\r\n      <View>\r\n        <XIconButton\r\n          icon={{\r\n            name: 'bell',\r\n            iconType: IconType.FONTAWESOME,\r\n            size: 24,\r\n            other: FontAwesomeType.SOLID,\r\n          }}\r\n          color={isNew > 0 ? Colors.tintColor : Colors.gray}\r\n        />\r\n        {isNew > 0 && (\r\n          <Badge\r\n            value={isNew}\r\n            status={'error'}\r\n            containerStyle={styles.notify}\r\n          />\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { auth, notify } = state;\r\n  return {\r\n    phone: auth?.phone,\r\n    isNew: notify?.isNew,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(SettingHeader);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    height: 80,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    ...BaseStyles.baseContainerWithoutTopBottomPadding,\r\n    paddingTop: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  avatarContainer: {\r\n    width: 64,\r\n    height: 64,\r\n    color: Colors.tintColor,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  avatar: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  userInfoContainer: {\r\n    marginLeft: 10,\r\n    flexDirection: 'column',\r\n  },\r\n  point: {\r\n    alignItems: 'center',\r\n  },\r\n  loginBtn: {\r\n    width: 150,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}