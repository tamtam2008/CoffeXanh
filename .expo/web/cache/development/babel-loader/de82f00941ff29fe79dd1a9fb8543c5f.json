{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeSimpleRadioButton = require(\"react-native-simple-radio-button\");\n\nvar _Colors = _interopRequireDefault(require(\"../../../../../../../constants/Colors\"));\n\nvar _BaseStyles = require(\"../../../../../../../constants/BaseStyles\");\n\nvar _Layout = _interopRequireDefault(require(\"../../../../../../../constants/Layout\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\menu\\\\components\\\\productModal\\\\chooseProductModal\\\\components\\\\RadioChooseOptions.js\";\n\nvar RenderRadioChoose = function RenderRadioChoose(props) {\n  var isSelected = props.isSelected || false;\n  return _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.flexRow, styles.radioRow],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeSimpleRadioButton.RadioButtonInput, {\n    index: props.index,\n    isSelected: isSelected,\n    buttonColor: isSelected ? _Colors.default.tintColor : _Colors.default.gray,\n    buttonSize: 10,\n    buttonOuterSize: 22,\n    obj: props.obj,\n    onPress: props.onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.flexRow, _BaseStyles.BaseStyles.ml_10, styles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1, isSelected ? _reactNative.StyleSheet.flatten({\n      color: _Colors.default.tintColor\n    }) : {}],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, props.label), !!props.label2 && _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1, isSelected ? _reactNative.StyleSheet.flatten({\n      color: _Colors.default.tintColor\n    }) : {}],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, '+' + props.label2)));\n};\n\nvar RadioChooseOptions = function RadioChooseOptions(_ref) {\n  var data = _ref.data,\n      selectedIdx = _ref.selectedIdx,\n      _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function (val, idx) {} : _ref$onPress;\n\n  var _useState = (0, _react.useState)(selectedIdx),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      seleted = _useState2[0],\n      setSeleted = _useState2[1];\n\n  return _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.flexColumn],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, data.map(function (val, idx) {\n    return _react.default.createElement(RenderRadioChoose, (0, _extends2.default)({\n      index: idx,\n      label: val.label,\n      label2: val.label2,\n      isSelected: idx === seleted,\n      obj: val,\n      onPress: function onPress(value, index) {\n        setSeleted(index);\n\n        _onPress(value, index);\n      }\n    }, {\n      key: idx,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }));\n  }));\n};\n\nvar _default = RadioChooseOptions;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  label: {\n    justifyContent: 'space-between',\n    alignSelf: 'center',\n    width: _Layout.default.window.width * 0.9 - 32 - 24 - 10\n  },\n  container: {},\n  radioRow: {\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/menu/components/productModal/chooseProductModal/components/RadioChooseOptions.js"],"names":["RenderRadioChoose","props","isSelected","BaseStyles","flexRow","styles","radioRow","index","Colors","tintColor","gray","obj","onPress","ml_10","label","BaseFontStyles","body1","StyleSheet","flatten","color","label2","RadioChooseOptions","data","selectedIdx","val","idx","seleted","setSeleted","flexColumn","map","value","create","justifyContent","alignSelf","width","Layout","window","container","marginBottom"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { RadioButtonInput } from 'react-native-simple-radio-button';\r\nimport Colors from '../../../../../../../constants/Colors';\r\nimport {\r\n  BaseStyles,\r\n  BaseFontStyles,\r\n} from '../../../../../../../constants/BaseStyles';\r\nimport Layout from '../../../../../../../constants/Layout';\r\n\r\nconst RenderRadioChoose = props => {\r\n  const isSelected = props.isSelected || false;\r\n  return (\r\n    <View style={[BaseStyles.flexRow, styles.radioRow]}>\r\n      <RadioButtonInput\r\n        index={props.index}\r\n        isSelected={isSelected}\r\n        buttonColor={isSelected ? Colors.tintColor : Colors.gray}\r\n        buttonSize={10}\r\n        buttonOuterSize={22}\r\n        obj={props.obj}\r\n        onPress={props.onPress}\r\n      />\r\n      <View style={[BaseStyles.flexRow, BaseStyles.ml_10, styles.label]}>\r\n        <Text\r\n          style={[\r\n            BaseFontStyles.body1,\r\n            isSelected ? StyleSheet.flatten({ color: Colors.tintColor }) : {},\r\n          ]}>\r\n          {props.label}\r\n        </Text>\r\n        {!!props.label2 && (\r\n          <Text\r\n            style={[\r\n              BaseFontStyles.body1,\r\n              isSelected ? StyleSheet.flatten({ color: Colors.tintColor }) : {},\r\n            ]}>\r\n            {'+' + props.label2}\r\n          </Text>\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst RadioChooseOptions = ({\r\n  data,\r\n  selectedIdx,\r\n  onPress = (val, idx) => {},\r\n}) => {\r\n  const [seleted, setSeleted] = useState(selectedIdx);\r\n  return (\r\n    <View style={[BaseStyles.flexColumn]}>\r\n      {data.map((val, idx) => (\r\n        <RenderRadioChoose\r\n          {...{\r\n            index: idx,\r\n            label: val.label,\r\n            label2: val.label2,\r\n            isSelected: idx === seleted,\r\n            obj: val,\r\n            onPress: (value, index) => {\r\n              setSeleted(index);\r\n              onPress(value, index);\r\n              // console.log(value, index);\r\n            },\r\n          }}\r\n          key={idx}\r\n        />\r\n      ))}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default RadioChooseOptions;\r\n\r\nconst styles = StyleSheet.create({\r\n  label: {\r\n    justifyContent: 'space-between',\r\n    alignSelf: 'center',\r\n    width: Layout.window.width * 0.9 - 32 - 24 - 10,\r\n  },\r\n  container: {},\r\n  radioRow: {\r\n    marginBottom: 10,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}