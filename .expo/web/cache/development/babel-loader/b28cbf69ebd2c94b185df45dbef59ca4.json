{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpringScrollView = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar TextInputState = _interopRequireWildcard(require(\"react-native/Libraries/Components/TextInput/TextInputState\"));\n\nvar _LoadingFooter = require(\"./LoadingFooter\");\n\nvar _NormalHeader = require(\"./NormalHeader\");\n\nvar _NormalFooter = require(\"./NormalFooter\");\n\nvar _idx = require(\"./idx\");\n\nvar _styles = require(\"./styles\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\node_modules\\\\react-native-spring-scrollview\\\\SpringScrollView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar SpringScrollView = function (_React$PureComponent) {\n  (0, _inherits2.default)(SpringScrollView, _React$PureComponent);\n\n  var _super = _createSuper(SpringScrollView);\n\n  function SpringScrollView(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, SpringScrollView);\n    _this = _super.call(this, props);\n    _this._offsetYValue = 0;\n    _this._indicatorOpacity = new _reactNative.Animated.Value(1);\n    _this._refreshStatus = \"waiting\";\n    _this._loadingStatus = \"waiting\";\n\n    _this._onKeyboardWillShow = function (evt) {\n      _this.props.textInputRefs.every(function (input) {\n        if ((0, _idx.idx)(function () {\n          return input.current.isFocused();\n        })) {\n          input.current.measure(function (x, y, w, h, l, t) {\n            _this._keyboardHeight = t + h - evt.endCoordinates.screenY + _this.props.inputToolBarHeight;\n            _this._keyboardHeight > 0 && _this.scroll({\n              x: 0,\n              y: _this._keyboardHeight\n            });\n          });\n          return false;\n        }\n\n        return true;\n      });\n    };\n\n    _this._onKeyboardWillHide = function () {\n      if (_this._keyboardHeight > 0) {\n        _this.scroll({\n          x: 0,\n          y: -_this._keyboardHeight\n        });\n\n        _this._keyboardHeight = 0;\n      }\n    };\n\n    _this._onScroll = function (e) {\n      var _e$nativeEvent = e.nativeEvent,\n          _e$nativeEvent$conten = _e$nativeEvent.contentOffset,\n          x = _e$nativeEvent$conten.x,\n          y = _e$nativeEvent$conten.y,\n          refreshStatus = _e$nativeEvent.refreshStatus,\n          loadingStatus = _e$nativeEvent.loadingStatus;\n      _this._offsetYValue = y;\n\n      if (_this._refreshStatus !== refreshStatus) {\n        _this._toRefreshStatus(refreshStatus);\n\n        _this.props.onRefresh && refreshStatus === \"refreshing\" && _this.props.onRefresh();\n      }\n\n      if (_this._loadingStatus !== loadingStatus) {\n        _this._toLoadingStatus(loadingStatus);\n\n        _this.props.onLoading && loadingStatus === \"loading\" && _this.props.onLoading();\n      }\n\n      _this.props.onScroll && _this.props.onScroll(e);\n\n      if (!_this._indicatorAnimation) {\n        _this._indicatorOpacity.setValue(1);\n      }\n    };\n\n    _this._onWrapperLayoutChange = function (_ref) {\n      var _ref$nativeEvent$layo = _ref.nativeEvent.layout,\n          x = _ref$nativeEvent$layo.x,\n          y = _ref$nativeEvent$layo.y,\n          width = _ref$nativeEvent$layo.width,\n          height = _ref$nativeEvent$layo.height;\n\n      if (_this._height !== height || _this._width !== width) {\n        _this.props.onSizeChange && _this.props.onSizeChange({\n          width: width,\n          height: height\n        });\n        _this._height = height;\n        _this._width = width;\n        if (!_this._contentHeight) return;\n        if (_this._contentHeight < _this._height) _this._contentHeight = height;\n        if (_this._offsetYValue > _this._contentHeight - _this._height) _this.scrollToEnd();\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this._onContentLayoutChange = function (_ref2) {\n      var _ref2$nativeEvent$lay = _ref2.nativeEvent.layout,\n          x = _ref2$nativeEvent$lay.x,\n          y = _ref2$nativeEvent$lay.y,\n          width = _ref2$nativeEvent$lay.width,\n          height = _ref2$nativeEvent$lay.height;\n\n      if (_this._contentHeight !== height || _this._contentWidth !== width) {\n        _this.props.onContentSizeChange && _this.props.onContentSizeChange({\n          width: width,\n          height: height\n        });\n        _this._contentHeight = height;\n        _this._contentWidth = width;\n        if (!_this._height) return;\n        if (_this._contentHeight < _this._height) _this._contentHeight = _this._height;\n        if (_this._offsetYValue > _this._contentHeight - _this._height) _this.scrollToEnd(false);\n\n        _this.forceUpdate();\n      }\n    };\n\n    _this._onTouchBegin = function () {\n      if (TextInputState.currentlyFocusedInput()) TextInputState.blurTextInput(TextInputState.currentlyFocusedInput());\n      _this.props.tapToHideKeyboard && _reactNative.Keyboard.dismiss();\n      _this.props.onTouchBegin && _this.props.onTouchBegin();\n    };\n\n    _this._onMomentumScrollEnd = function () {\n      _this._beginIndicatorDismissAnimation();\n\n      _this.props.onMomentumScrollEnd && _this.props.onMomentumScrollEnd();\n    };\n\n    _this.obtainScrollEvent(props);\n\n    _this._offsetX.setValue(props.initialContentOffset.x);\n\n    _this._offsetY.setValue(props.initialContentOffset.y);\n\n    return _this;\n  }\n\n  (0, _createClass2.default)(SpringScrollView, [{\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (nextProps.onNativeContentOffsetExtract !== this.props.onNativeContentOffsetExtract) {\n        this.obtainScrollEvent(nextProps);\n      }\n    }\n  }, {\n    key: \"obtainScrollEvent\",\n    value: function obtainScrollEvent(props) {\n      if (!props) props = {};\n      this._nativeOffset = _objectSpread({\n        x: new _reactNative.Animated.Value(0),\n        y: new _reactNative.Animated.Value(0)\n      }, props.onNativeContentOffsetExtract);\n      this._offsetY = this._nativeOffset.y;\n      this._offsetX = this._nativeOffset.x;\n      this._event = _reactNative.Animated.event([{\n        nativeEvent: {\n          contentOffset: this._nativeOffset\n        }\n      }], {\n        useNativeDriver: true,\n        listener: this._onScroll\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          style = _this$props.style,\n          inverted = _this$props.inverted,\n          children = _this$props.children,\n          onRefresh = _this$props.onRefresh,\n          onLoading = _this$props.onLoading,\n          Refresh = _this$props.refreshHeader,\n          Loading = _this$props.loadingFooter;\n\n      var wStyle = _reactNative.StyleSheet.flatten([_styles.styles.wrapperStyle, style, {\n        transform: inverted ? [{\n          scaleY: -1\n        }] : []\n      }]);\n\n      var elements = React.createElement(SpringScrollViewNative, (0, _extends2.default)({}, this.props, {\n        ref: function ref(_ref3) {\n          return _this2._scrollView = _ref3;\n        },\n        style: _reactNative.Platform.OS === \"android\" ? wStyle : {\n          flex: 1\n        },\n        onScroll: this._event,\n        refreshHeaderHeight: onRefresh ? Refresh.height : 0,\n        loadingFooterHeight: onLoading ? Loading.height : 0,\n        onLayout: this._onWrapperLayoutChange,\n        onTouchBegin: _reactNative.Platform.OS === \"android\" && this._onTouchBegin,\n        onTouchStart: _reactNative.Platform.OS === \"ios\" && this._onTouchBegin,\n        onMomentumScrollEnd: this._onMomentumScrollEnd,\n        scrollEventThrottle: 1,\n        onNativeContentOffsetExtract: this._nativeOffset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }), React.createElement(SpringScrollContentViewNative, {\n        style: this.props.contentStyle,\n        collapsable: false,\n        onLayout: this._onContentLayoutChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }\n      }, this._renderRefreshHeader(), this._renderLoadingFooter(), children), this._renderHorizontalIndicator(), this._renderVerticalIndicator());\n      if (_reactNative.Platform.OS === \"android\") return elements;\n      return React.createElement(_reactNative.ScrollView, {\n        style: wStyle,\n        contentContainerStyle: {\n          flex: 1\n        },\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,\n        keyboardDismissMode: this.props.keyboardDismissMode,\n        scrollEnabled: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 7\n        }\n      }, elements);\n    }\n  }, {\n    key: \"_renderRefreshHeader\",\n    value: function _renderRefreshHeader() {\n      var _this3 = this;\n\n      var _this$props2 = this.props,\n          onRefresh = _this$props2.onRefresh,\n          Refresh = _this$props2.refreshHeader;\n      var measured = this._height !== undefined && this._contentHeight !== undefined;\n      if (!measured) return null;\n      return onRefresh && React.createElement(_reactNative.Animated.View, {\n        style: this._getRefreshHeaderStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, React.createElement(Refresh, {\n        ref: function ref(_ref4) {\n          return _this3._refreshHeader = _ref4;\n        },\n        offset: this._offsetY,\n        maxHeight: Refresh.height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"_renderLoadingFooter\",\n    value: function _renderLoadingFooter() {\n      var _this4 = this;\n\n      var _this$props3 = this.props,\n          onLoading = _this$props3.onLoading,\n          Footer = _this$props3.loadingFooter;\n      var measured = this._height !== undefined && this._contentHeight !== undefined;\n      if (!measured) return null;\n      return onLoading && React.createElement(_reactNative.Animated.View, {\n        style: this._getLoadingFooterStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, React.createElement(Footer, {\n        ref: function ref(_ref5) {\n          return _this4._loadingFooter = _ref5;\n        },\n        offset: this._offsetY,\n        maxHeight: Footer.height,\n        bottomOffset: this._contentHeight - this._height,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }));\n    }\n  }, {\n    key: \"_renderVerticalIndicator\",\n    value: function _renderVerticalIndicator() {\n      if (_reactNative.Platform.OS === \"ios\") return null;\n      var showsVerticalScrollIndicator = this.props.showsVerticalScrollIndicator;\n      var measured = this._height !== undefined && this._contentHeight !== undefined;\n      if (!measured) return null;\n      return showsVerticalScrollIndicator && this._contentHeight > this._height && React.createElement(_reactNative.Animated.View, {\n        style: this._getVerticalIndicatorStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      });\n    }\n  }, {\n    key: \"_renderHorizontalIndicator\",\n    value: function _renderHorizontalIndicator() {\n      if (_reactNative.Platform.OS === \"ios\") return null;\n      var showsHorizontalScrollIndicator = this.props.showsHorizontalScrollIndicator;\n      var measured = this._height !== undefined && this._contentHeight !== undefined;\n      if (!measured) return null;\n      return showsHorizontalScrollIndicator && this._contentWidth > this._width && React.createElement(_reactNative.Animated.View, {\n        style: this._getHorizontalIndicatorStyle(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._beginIndicatorDismissAnimation();\n\n      this._keyboardShowSub = _reactNative.Keyboard.addListener(_reactNative.Platform.OS === \"ios\" ? \"keyboardWillShow\" : \"keyboardDidShow\", this._onKeyboardWillShow);\n      this._keyboardHideSub = _reactNative.Keyboard.addListener(_reactNative.Platform.OS === \"ios\" ? \"keyboardWillHide\" : \"keyboardDidHide\", this._onKeyboardWillHide);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this._beginIndicatorDismissAnimation();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._keyboardShowSub.remove();\n\n      this._keyboardHideSub.remove();\n    }\n  }, {\n    key: \"scrollTo\",\n    value: function scrollTo(offset) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      if (_reactNative.Platform.OS === \"ios\") {\n        _reactNative.NativeModules.SpringScrollView.scrollTo((0, _reactNative.findNodeHandle)(this._scrollView), offset.x, offset.y, animated);\n      } else if (_reactNative.Platform.OS === \"android\") {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this._scrollView), 10002, [offset.x, offset.y, animated]);\n      }\n\n      return new Promise(function (resolve, reject) {\n        if (animated) setTimeout(resolve, 500);else resolve();\n      });\n    }\n  }, {\n    key: \"scroll\",\n    value: function scroll(offset) {\n      var animated = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      return this.scrollTo({\n        x: offset.x,\n        y: offset.y + this._offsetYValue\n      }, animated);\n    }\n  }, {\n    key: \"scrollToBegin\",\n    value: function scrollToBegin(animated) {\n      return this.scrollTo({\n        x: 0,\n        y: 0\n      }, animated);\n    }\n  }, {\n    key: \"scrollToEnd\",\n    value: function scrollToEnd() {\n      var animated = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var toOffsetY = this._contentHeight - this._height;\n      if (toOffsetY < 0) toOffsetY = 0;\n      return this.scrollTo({\n        x: 0,\n        y: toOffsetY\n      }, animated);\n    }\n  }, {\n    key: \"endRefresh\",\n    value: function endRefresh() {\n      if (_reactNative.Platform.OS === \"ios\") {\n        _reactNative.NativeModules.SpringScrollView.endRefresh((0, _reactNative.findNodeHandle)(this._scrollView));\n      } else if (_reactNative.Platform.OS === \"android\") {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this._scrollView), 10000, []);\n      }\n    }\n  }, {\n    key: \"endLoading\",\n    value: function endLoading() {\n      if (_reactNative.Platform.OS === \"ios\") {\n        _reactNative.NativeModules.SpringScrollView.endLoading((0, _reactNative.findNodeHandle)(this._scrollView));\n      } else if (_reactNative.Platform.OS === \"android\") {\n        _reactNative.UIManager.dispatchViewManagerCommand((0, _reactNative.findNodeHandle)(this._scrollView), 10001, []);\n      }\n    }\n  }, {\n    key: \"_beginIndicatorDismissAnimation\",\n    value: function _beginIndicatorDismissAnimation() {\n      var _this5 = this;\n\n      this._indicatorOpacity.setValue(1);\n\n      this._indicatorAnimation && this._indicatorAnimation.stop();\n      this._indicatorAnimation = _reactNative.Animated.timing(this._indicatorOpacity, {\n        toValue: 0,\n        delay: 500,\n        duration: 500,\n        useNativeDriver: true\n      });\n\n      this._indicatorAnimation.start(function (_ref6) {\n        var finished = _ref6.finished;\n\n        if (!finished) {\n          _this5._indicatorOpacity.setValue(1);\n        }\n\n        _this5._indicatorAnimation = null;\n      });\n    }\n  }, {\n    key: \"_toRefreshStatus\",\n    value: function _toRefreshStatus(status) {\n      var _this6 = this;\n\n      this._refreshStatus = status;\n      (0, _idx.idx)(function () {\n        return _this6._refreshHeader.changeToState(status);\n      });\n    }\n  }, {\n    key: \"_toLoadingStatus\",\n    value: function _toLoadingStatus(status) {\n      var _this7 = this;\n\n      this._loadingStatus = status;\n      (0, _idx.idx)(function () {\n        return _this7._loadingFooter.changeToState(status);\n      });\n    }\n  }, {\n    key: \"_getVerticalIndicatorStyle\",\n    value: function _getVerticalIndicatorStyle() {\n      var indicatorHeight = this._height / this._contentHeight * this._height;\n      return {\n        position: \"absolute\",\n        top: 0,\n        right: 2,\n        height: indicatorHeight,\n        width: 3,\n        borderRadius: 3,\n        opacity: this._indicatorOpacity,\n        backgroundColor: \"#A8A8A8\",\n        transform: [{\n          translateY: _reactNative.Animated.multiply(this._offsetY, this._height / this._contentHeight)\n        }]\n      };\n    }\n  }, {\n    key: \"_getHorizontalIndicatorStyle\",\n    value: function _getHorizontalIndicatorStyle() {\n      var indicatorWidth = this._width / this._contentWidth * this._width;\n      return {\n        position: \"absolute\",\n        bottom: 2,\n        left: 0,\n        height: 3,\n        width: indicatorWidth,\n        borderRadius: 3,\n        opacity: this._indicatorOpacity,\n        backgroundColor: \"#A8A8A8\",\n        transform: [{\n          translateX: _reactNative.Animated.multiply(this._offsetX, this._width / this._contentWidth)\n        }]\n      };\n    }\n  }, {\n    key: \"_getRefreshHeaderStyle\",\n    value: function _getRefreshHeaderStyle() {\n      var rHeight = this.props.refreshHeader.height;\n      var style = this.props.refreshHeader.style;\n      var transform = [];\n\n      if (style === \"topping\") {\n        transform = [{\n          translateY: this._offsetY.interpolate({\n            inputRange: [-rHeight - 1, -rHeight, 0, 1],\n            outputRange: [-1, 0, rHeight, rHeight]\n          })\n        }];\n      } else if (style === \"stickyScrollView\") {\n        transform = [{\n          translateY: this._offsetY.interpolate({\n            inputRange: [-rHeight - 1, -rHeight, 0, 1],\n            outputRange: [-1, 0, 0, 0]\n          })\n        }];\n      } else if (style !== \"stickyContent\") {\n        console.warn(\"unsupported value: '\", style, \"' in SpringScrollView, \" + \"select one in 'topping','stickyScrollView','stickyContent' please\");\n      }\n\n      if (this.props.inverted) transform.push({\n        scaleY: -1\n      });\n      return {\n        position: \"absolute\",\n        top: -rHeight,\n        right: 0,\n        height: rHeight,\n        left: 0,\n        transform: transform\n      };\n    }\n  }, {\n    key: \"_getLoadingFooterStyle\",\n    value: function _getLoadingFooterStyle() {\n      var fHeight = this.props.loadingFooter.height;\n      var maxOffset = this._contentHeight - this._height;\n      var style = this.props.loadingFooter.style;\n      var transform = [];\n\n      if (style === \"bottoming\") {\n        transform = [{\n          translateY: this._offsetY.interpolate({\n            inputRange: [maxOffset - 1, maxOffset, maxOffset + fHeight, maxOffset + fHeight + 1],\n            outputRange: [-fHeight, -fHeight, 0, 1]\n          })\n        }];\n      } else if (style === \"stickyScrollView\") {\n        transform = [{\n          translateY: this._offsetY.interpolate({\n            inputRange: [maxOffset - 1, maxOffset, maxOffset + fHeight, maxOffset + fHeight + 1],\n            outputRange: [0, 0, 0, 1]\n          })\n        }];\n      } else if (style !== \"stickyContent\") {\n        console.warn(\"unsupported value: '\", style, \"' in SpringScrollView, \" + \"select one in 'bottoming','stickyScrollView','stickyContent' please\");\n      }\n\n      if (this.props.inverted) transform.push({\n        scaleY: -1\n      });\n      return {\n        position: \"absolute\",\n        right: 0,\n        top: this._height > this._contentHeight ? this._height : this._contentHeight,\n        height: fHeight,\n        left: 0,\n        transform: transform\n      };\n    }\n  }]);\n  return SpringScrollView;\n}(React.PureComponent);\n\nexports.SpringScrollView = SpringScrollView;\nSpringScrollView.defaultProps = {\n  bounces: true,\n  scrollEnabled: true,\n  refreshHeader: _NormalHeader.NormalHeader,\n  loadingFooter: _NormalFooter.NormalFooter,\n  textInputRefs: [],\n  inputToolBarHeight: 44,\n  tapToHideKeyboard: true,\n  initOffset: {\n    x: 0,\n    y: 0\n  },\n  keyboardShouldPersistTaps: \"always\",\n  showsVerticalScrollIndicator: true,\n  showsHorizontalScrollIndicator: true,\n  initialContentOffset: {\n    x: 0,\n    y: 0\n  },\n  alwaysBounceVertical: true\n};\n\nvar SpringScrollViewNative = _reactNative.Animated.createAnimatedComponent((0, _reactNative.requireNativeComponent)(\"SpringScrollView\", SpringScrollView));\n\nvar SpringScrollContentViewNative = _reactNative.Platform.OS === \"ios\" ? (0, _reactNative.requireNativeComponent)(\"SpringScrollContentView\") : _reactNative.View;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/node_modules/react-native-spring-scrollview/SpringScrollView.js"],"names":["SpringScrollView","props","_offsetYValue","_indicatorOpacity","Animated","Value","_refreshStatus","_loadingStatus","_onKeyboardWillShow","evt","textInputRefs","every","input","current","isFocused","measure","x","y","w","h","l","t","_keyboardHeight","endCoordinates","screenY","inputToolBarHeight","scroll","_onKeyboardWillHide","_onScroll","e","nativeEvent","contentOffset","refreshStatus","loadingStatus","_toRefreshStatus","onRefresh","_toLoadingStatus","onLoading","onScroll","_indicatorAnimation","setValue","_onWrapperLayoutChange","layout","width","height","_height","_width","onSizeChange","_contentHeight","scrollToEnd","forceUpdate","_onContentLayoutChange","_contentWidth","onContentSizeChange","_onTouchBegin","TextInputState","currentlyFocusedInput","blurTextInput","tapToHideKeyboard","Keyboard","dismiss","onTouchBegin","_onMomentumScrollEnd","_beginIndicatorDismissAnimation","onMomentumScrollEnd","obtainScrollEvent","_offsetX","initialContentOffset","_offsetY","nextProps","onNativeContentOffsetExtract","_nativeOffset","_event","event","useNativeDriver","listener","style","inverted","children","Refresh","refreshHeader","Loading","loadingFooter","wStyle","StyleSheet","flatten","styles","wrapperStyle","transform","scaleY","elements","ref","_scrollView","Platform","OS","flex","contentStyle","_renderRefreshHeader","_renderLoadingFooter","_renderHorizontalIndicator","_renderVerticalIndicator","keyboardShouldPersistTaps","keyboardDismissMode","measured","undefined","_getRefreshHeaderStyle","_refreshHeader","Footer","_getLoadingFooterStyle","_loadingFooter","showsVerticalScrollIndicator","_getVerticalIndicatorStyle","showsHorizontalScrollIndicator","_getHorizontalIndicatorStyle","_keyboardShowSub","addListener","_keyboardHideSub","remove","offset","animated","NativeModules","scrollTo","UIManager","dispatchViewManagerCommand","Promise","resolve","reject","setTimeout","toOffsetY","endRefresh","endLoading","stop","timing","toValue","delay","duration","start","finished","status","changeToState","indicatorHeight","position","top","right","borderRadius","opacity","backgroundColor","translateY","multiply","indicatorWidth","bottom","left","translateX","rHeight","interpolate","inputRange","outputRange","console","warn","push","fHeight","maxOffset","React","PureComponent","defaultProps","bounces","scrollEnabled","NormalHeader","NormalFooter","initOffset","alwaysBounceVertical","SpringScrollViewNative","createAnimatedComponent","SpringScrollContentViewNative","View"],"mappings":"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","sourcesContent":["/**\n * Author: Shi(bolan0000@icloud.com)\n * Date: 2019/1/17\n * Copyright (c) 2018, AoTang, Inc.\n *\n * Description:\n */\n\nimport * as React from \"react\";\nimport {\n  Animated,\n  requireNativeComponent,\n  View,\n  findNodeHandle,\n  UIManager,\n  Keyboard,\n  Platform,\n  NativeModules,\n  StyleSheet,\n  ViewProps,\n  ViewStyle,\n  ScrollView\n} from \"react-native\";\nimport * as TextInputState from \"react-native/Libraries/Components/TextInput/TextInputState\";\r\nimport { FooterStatus } from \"./LoadingFooter\";\nimport { NormalHeader } from \"./NormalHeader\";\nimport { NormalFooter } from \"./NormalFooter\";\nimport type { HeaderStatus } from \"./RefreshHeader\";\nimport { idx } from \"./idx\";\nimport type { Offset, SpringScrollViewPropType } from \"./Types\";\nimport { styles } from \"./styles\";\n\nexport class SpringScrollView extends React.PureComponent<SpringScrollViewPropType> {\n  _offsetY: Animated.Value;\n  _offsetX: Animated.Value;\n  _offsetYValue: number = 0;\n  _event;\n  _keyboardHeight: number;\n  _refreshHeader;\n  _loadingFooter;\n  _width: number;\n  _height: number;\n  _scrollView: View;\n  _indicatorOpacity: Animated.Value = new Animated.Value(1);\n  _contentHeight: number;\n  _contentWidth: number;\n  _refreshStatus: HeaderStatus = \"waiting\";\n  _loadingStatus: FooterStatus = \"waiting\";\n  _indicatorAnimation;\n  _nativeOffset;\n\n  constructor(props: SpringScrollViewPropType) {\n    super(props);\n    this.obtainScrollEvent(props);\n    this._offsetX.setValue(props.initialContentOffset.x);\n    this._offsetY.setValue(props.initialContentOffset.y);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: SpringScrollViewPropType) {\n    if (nextProps.onNativeContentOffsetExtract !== this.props.onNativeContentOffsetExtract) {\n      this.obtainScrollEvent(nextProps);\n    }\n  }\n\n  obtainScrollEvent(props: SpringScrollViewPropType) {\n    if (!props) props = {};\n    this._nativeOffset = {\n      x: new Animated.Value(0),\n      y: new Animated.Value(0),\n      ...props.onNativeContentOffsetExtract\n    };\n    this._offsetY = this._nativeOffset.y;\n    this._offsetX = this._nativeOffset.x;\n    this._event = Animated.event(\n      [\n        {\n          nativeEvent: {\n            contentOffset: this._nativeOffset\n          }\n        }\n      ],\n      {\n        useNativeDriver: true,\n        listener: this._onScroll\n      }\n    );\n  }\n\n  render() {\n    const {\n      style,\n      inverted,\n      children,\n      onRefresh,\n      onLoading,\n      refreshHeader: Refresh,\n      loadingFooter: Loading\n    } = this.props;\n    const wStyle = StyleSheet.flatten([\n      styles.wrapperStyle,\n      style,\n      { transform: inverted ? [{ scaleY: -1 }] : [] }\n    ]);\n    const elements = (\n      <SpringScrollViewNative\n        {...this.props}\n        ref={ref => (this._scrollView = ref)}\n        style={Platform.OS === \"android\" ? wStyle : { flex: 1 }}\n        onScroll={this._event}\n        refreshHeaderHeight={onRefresh ? Refresh.height : 0}\n        loadingFooterHeight={onLoading ? Loading.height : 0}\n        onLayout={this._onWrapperLayoutChange}\n        onTouchBegin={Platform.OS === \"android\" && this._onTouchBegin}\n        onTouchStart={Platform.OS === \"ios\" && this._onTouchBegin}\n        onMomentumScrollEnd={this._onMomentumScrollEnd}\n        scrollEventThrottle={1}\n        onNativeContentOffsetExtract={this._nativeOffset}\n      >\n        <SpringScrollContentViewNative\n          style={this.props.contentStyle}\n          collapsable={false}\n          onLayout={this._onContentLayoutChange}\n        >\n          {this._renderRefreshHeader()}\n          {this._renderLoadingFooter()}\n          {children}\n        </SpringScrollContentViewNative>\n        {this._renderHorizontalIndicator()}\n        {this._renderVerticalIndicator()}\n      </SpringScrollViewNative>\n    );\n    if (Platform.OS === \"android\") return elements;\n    return (\n      <ScrollView\n        style={wStyle}\n        contentContainerStyle={{ flex: 1 }}\n        keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps}\n        keyboardDismissMode={this.props.keyboardDismissMode}\n        scrollEnabled={false}\n      >\n        {elements}\n      </ScrollView>\n    );\n  }\n\n  _renderRefreshHeader() {\n    const { onRefresh, refreshHeader: Refresh } = this.props;\n    const measured = this._height !== undefined && this._contentHeight !== undefined;\n    if (!measured) return null;\n    return (\n      onRefresh && (\n        <Animated.View style={this._getRefreshHeaderStyle()}>\n          <Refresh\n            ref={ref => (this._refreshHeader = ref)}\n            offset={this._offsetY}\n            maxHeight={Refresh.height}\n          />\n        </Animated.View>\n      )\n    );\n  }\n\n  _renderLoadingFooter() {\n    const { onLoading, loadingFooter: Footer } = this.props;\n    const measured = this._height !== undefined && this._contentHeight !== undefined;\n    if (!measured) return null;\n    return (\n      onLoading && (\n        <Animated.View style={this._getLoadingFooterStyle()}>\n          <Footer\n            ref={ref => (this._loadingFooter = ref)}\n            offset={this._offsetY}\n            maxHeight={Footer.height}\n            bottomOffset={this._contentHeight - this._height}\n          />\n        </Animated.View>\n      )\n    );\n  }\n\n  _renderVerticalIndicator() {\n    if (Platform.OS === \"ios\") return null;\n    const { showsVerticalScrollIndicator } = this.props;\n    const measured = this._height !== undefined && this._contentHeight !== undefined;\n    if (!measured) return null;\n    return (\n      showsVerticalScrollIndicator &&\n      this._contentHeight > this._height && (\n        <Animated.View style={this._getVerticalIndicatorStyle()} />\n      )\n    );\n  }\n\n  _renderHorizontalIndicator() {\n    if (Platform.OS === \"ios\") return null;\n    const { showsHorizontalScrollIndicator } = this.props;\n    const measured = this._height !== undefined && this._contentHeight !== undefined;\n    if (!measured) return null;\n    return (\n      showsHorizontalScrollIndicator &&\n      this._contentWidth > this._width && (\n        <Animated.View style={this._getHorizontalIndicatorStyle()} />\n      )\n    );\n  }\n\n  componentDidMount() {\n    this._beginIndicatorDismissAnimation();\n    this._keyboardShowSub = Keyboard.addListener(\n      Platform.OS === \"ios\" ? \"keyboardWillShow\" : \"keyboardDidShow\",\n      this._onKeyboardWillShow\n    );\n    this._keyboardHideSub = Keyboard.addListener(\n      Platform.OS === \"ios\" ? \"keyboardWillHide\" : \"keyboardDidHide\",\n      this._onKeyboardWillHide\n    );\n  }\n\n  componentDidUpdate() {\n    this._beginIndicatorDismissAnimation();\n  }\n\n  componentWillUnmount() {\n    this._keyboardShowSub.remove();\n    this._keyboardHideSub.remove();\n  }\n\n  scrollTo(offset: Offset, animated: boolean = true) {\n    if (Platform.OS === \"ios\") {\n      NativeModules.SpringScrollView.scrollTo(\n        findNodeHandle(this._scrollView),\n        offset.x,\n        offset.y,\n        animated\n      );\n    } else if (Platform.OS === \"android\") {\n      UIManager.dispatchViewManagerCommand(findNodeHandle(this._scrollView), 10002, [\n        offset.x,\n        offset.y,\n        animated\n      ]);\n    }\n    return new Promise((resolve, reject) => {\n      if (animated) setTimeout(resolve, 500);\n      else resolve();\n    });\n  }\n\n  scroll(offset: Offset, animated: boolean = true) {\n    return this.scrollTo({ x: offset.x, y: offset.y + this._offsetYValue }, animated);\n  }\n\n  scrollToBegin(animated: boolean) {\n    return this.scrollTo({ x: 0, y: 0 }, animated);\n  }\n\n  scrollToEnd(animated: boolean = true) {\n    let toOffsetY = this._contentHeight - this._height;\n    if (toOffsetY < 0) toOffsetY = 0;\n    return this.scrollTo({ x: 0, y: toOffsetY }, animated);\n  }\n\n  endRefresh() {\n    if (Platform.OS === \"ios\") {\n      NativeModules.SpringScrollView.endRefresh(findNodeHandle(this._scrollView));\n    } else if (Platform.OS === \"android\") {\n      UIManager.dispatchViewManagerCommand(findNodeHandle(this._scrollView), 10000, []);\n    }\n  }\n\n  endLoading() {\n    if (Platform.OS === \"ios\") {\n      NativeModules.SpringScrollView.endLoading(findNodeHandle(this._scrollView));\n    } else if (Platform.OS === \"android\") {\n      UIManager.dispatchViewManagerCommand(findNodeHandle(this._scrollView), 10001, []);\n    }\n  }\n\n  _onKeyboardWillShow = evt => {\n    this.props.textInputRefs.every(input => {\n      if (idx(() => input.current.isFocused())) {\n        input.current.measure((x, y, w, h, l, t) => {\n          this._keyboardHeight = t + h - evt.endCoordinates.screenY + this.props.inputToolBarHeight;\n          this._keyboardHeight > 0 && this.scroll({ x: 0, y: this._keyboardHeight });\n        });\n        return false;\n      }\n      return true;\n    });\n  };\n\n  _onKeyboardWillHide = () => {\n    if (this._keyboardHeight > 0) {\n      this.scroll({ x: 0, y: -this._keyboardHeight });\n      this._keyboardHeight = 0;\n    }\n  };\n\n  _beginIndicatorDismissAnimation() {\n    this._indicatorOpacity.setValue(1);\n    this._indicatorAnimation && this._indicatorAnimation.stop();\n    this._indicatorAnimation = Animated.timing(this._indicatorOpacity, {\n      toValue: 0,\n      delay: 500,\n      duration: 500,\n      useNativeDriver: true\n    });\n    this._indicatorAnimation.start(({ finished }) => {\n      if (!finished) {\n        this._indicatorOpacity.setValue(1);\n      }\n      this._indicatorAnimation = null;\n    });\n  }\n\n  _onScroll = e => {\n    const {\n      contentOffset: { x, y },\n      refreshStatus,\n      loadingStatus\n    } = e.nativeEvent;\n    this._offsetYValue = y;\n    if (this._refreshStatus !== refreshStatus) {\n      this._toRefreshStatus(refreshStatus);\n      this.props.onRefresh && refreshStatus === \"refreshing\" && this.props.onRefresh();\n    }\n    if (this._loadingStatus !== loadingStatus) {\n      this._toLoadingStatus(loadingStatus);\n      this.props.onLoading && loadingStatus === \"loading\" && this.props.onLoading();\n    }\n    this.props.onScroll && this.props.onScroll(e);\n    if (!this._indicatorAnimation) {\n      this._indicatorOpacity.setValue(1);\n    }\n  };\n\n  _toRefreshStatus(status: HeaderStatus) {\n    this._refreshStatus = status;\n    idx(() => this._refreshHeader.changeToState(status));\n  }\n\n  _toLoadingStatus(status: FooterStatus) {\n    this._loadingStatus = status;\n    idx(() => this._loadingFooter.changeToState(status));\n  }\n\n  _getVerticalIndicatorStyle() {\n    const indicatorHeight = this._height / this._contentHeight * this._height;\n    return {\n      position: \"absolute\",\n      top: 0,\n      right: 2,\n      height: indicatorHeight,\n      width: 3,\n      borderRadius: 3,\n      opacity: this._indicatorOpacity,\n      backgroundColor: \"#A8A8A8\",\n      transform: [\n        {\n          translateY: Animated.multiply(this._offsetY, this._height / this._contentHeight)\n        }\n      ]\n    };\n  }\n\n  _getHorizontalIndicatorStyle() {\n    const indicatorWidth = this._width / this._contentWidth * this._width;\n    return {\n      position: \"absolute\",\n      bottom: 2,\n      left: 0,\n      height: 3,\n      width: indicatorWidth,\n      borderRadius: 3,\n      opacity: this._indicatorOpacity,\n      backgroundColor: \"#A8A8A8\",\n      transform: [\n        {\n          translateX: Animated.multiply(this._offsetX, this._width / this._contentWidth)\n        }\n      ]\n    };\n  }\n\n  _getRefreshHeaderStyle() {\n    const rHeight = this.props.refreshHeader.height;\n    const style = this.props.refreshHeader.style;\n    let transform = [];\n    if (style === \"topping\") {\n      transform = [\n        {\n          translateY: this._offsetY.interpolate({\n            inputRange: [-rHeight - 1, -rHeight, 0, 1],\n            outputRange: [-1, 0, rHeight, rHeight]\n          })\n        }\n      ];\n    } else if (style === \"stickyScrollView\") {\n      transform = [\n        {\n          translateY: this._offsetY.interpolate({\n            inputRange: [-rHeight - 1, -rHeight, 0, 1],\n            outputRange: [-1, 0, 0, 0]\n          })\n        }\n      ];\n    } else if (style !== \"stickyContent\") {\n      console.warn(\n        \"unsupported value: '\",\n        style,\n        \"' in SpringScrollView, \" +\n          \"select one in 'topping','stickyScrollView','stickyContent' please\"\n      );\n    }\n    if (this.props.inverted) transform.push({ scaleY: -1 });\n    return {\n      position: \"absolute\",\n      top: -rHeight,\n      right: 0,\n      height: rHeight,\n      left: 0,\n      transform\n    };\n  }\n\n  _getLoadingFooterStyle() {\n    const fHeight = this.props.loadingFooter.height;\n    const maxOffset = this._contentHeight - this._height;\n    const style = this.props.loadingFooter.style;\n    let transform = [];\n    if (style === \"bottoming\") {\n      transform = [\n        {\n          translateY: this._offsetY.interpolate({\n            inputRange: [maxOffset - 1, maxOffset, maxOffset + fHeight, maxOffset + fHeight + 1],\n            outputRange: [-fHeight, -fHeight, 0, 1]\n          })\n        }\n      ];\n    } else if (style === \"stickyScrollView\") {\n      transform = [\n        {\n          translateY: this._offsetY.interpolate({\n            inputRange: [maxOffset - 1, maxOffset, maxOffset + fHeight, maxOffset + fHeight + 1],\n            outputRange: [0, 0, 0, 1]\n          })\n        }\n      ];\n    } else if (style !== \"stickyContent\") {\n      console.warn(\n        \"unsupported value: '\",\n        style,\n        \"' in SpringScrollView, \" +\n          \"select one in 'bottoming','stickyScrollView','stickyContent' please\"\n      );\n    }\n    if (this.props.inverted) transform.push({ scaleY: -1 });\n    return {\n      position: \"absolute\",\n      right: 0,\n      top: this._height > this._contentHeight ? this._height : this._contentHeight,\n      height: fHeight,\n      left: 0,\n      transform\n    };\n  }\n\n  _onWrapperLayoutChange = ({\n    nativeEvent: {\n      layout: { x, y, width, height }\n    }\n  }) => {\n    if (this._height !== height || this._width !== width) {\n      this.props.onSizeChange && this.props.onSizeChange({ width, height });\n      this._height = height;\n      this._width = width;\n      if (!this._contentHeight) return;\n      if (this._contentHeight < this._height) this._contentHeight = height;\n      if (this._offsetYValue > this._contentHeight - this._height) this.scrollToEnd();\n      this.forceUpdate();\n    }\n  };\n\n  _onContentLayoutChange = ({\n    nativeEvent: {\n      layout: { x, y, width, height }\n    }\n  }) => {\n    if (this._contentHeight !== height || this._contentWidth !== width) {\n      this.props.onContentSizeChange && this.props.onContentSizeChange({ width, height });\n      this._contentHeight = height;\n      this._contentWidth = width;\n      if (!this._height) return;\n      if (this._contentHeight < this._height) this._contentHeight = this._height;\n      if (this._offsetYValue > this._contentHeight - this._height) this.scrollToEnd(false);\n      this.forceUpdate();\n    }\n  };\n\n  _onTouchBegin = () => {\n    if (TextInputState.currentlyFocusedInput())\r\n      TextInputState.blurTextInput(TextInputState.currentlyFocusedInput());\r\n    this.props.tapToHideKeyboard && Keyboard.dismiss();\n    this.props.onTouchBegin && this.props.onTouchBegin();\n  };\n\n  _onMomentumScrollEnd = () => {\n    this._beginIndicatorDismissAnimation();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd();\n  };\n\n  static defaultProps = {\n    bounces: true,\n    scrollEnabled: true,\n    refreshHeader: NormalHeader,\n    loadingFooter: NormalFooter,\n    textInputRefs: [],\n    inputToolBarHeight: 44,\n    tapToHideKeyboard: true,\n    initOffset: { x: 0, y: 0 },\n    keyboardShouldPersistTaps: \"always\",\n    showsVerticalScrollIndicator: true,\n    showsHorizontalScrollIndicator: true,\n    initialContentOffset: { x: 0, y: 0 },\n    alwaysBounceVertical: true\n  };\n}\n\nconst SpringScrollViewNative = Animated.createAnimatedComponent(\n  requireNativeComponent(\"SpringScrollView\", SpringScrollView)\n);\n\nconst SpringScrollContentViewNative =\n  Platform.OS === \"ios\" ? requireNativeComponent(\"SpringScrollContentView\") : View;\n"]},"metadata":{},"sourceType":"script"}