{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseStyles = require(\"../constants/BaseStyles\");\n\nvar _Layout = require(\"../constants/Layout\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\components\\\\XLabelButton.js\";\n\nvar XLabelButton = function XLabelButton(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      color = _ref.color,\n      textStyle = _ref.textStyle,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled;\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 0.5,\n    onPress: onPress ? onPress : function () {},\n    style: style,\n    disabled: disabled || !onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [styles.button, _BaseStyles.BaseFontStyles.menuOrBody2, color ? {\n      color: color\n    } : {}].concat((0, _toConsumableArray2.default)(textStyle instanceof Array ? textStyle : [textStyle])),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nvar _default = XLabelButton;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 5\n  },\n  button: {\n    paddingTop: (0, _Layout.normalize)(7),\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: (0, _Layout.normalize)(7),\n    width: '100%',\n    textAlign: 'center',\n    borderRadius: 5,\n    color: _Colors.default.gray\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/components/XLabelButton.js"],"names":["XLabelButton","title","onPress","style","color","textStyle","disabled","styles","button","BaseFontStyles","menuOrBody2","Array","StyleSheet","create","container","borderRadius","paddingTop","paddingLeft","paddingRight","paddingBottom","width","textAlign","Colors","gray"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,YAAY,GAAG,SAAfA,YAAe,OAOf;AAAA,MANJC,KAMI,QANJA,KAMI;AAAA,MALJC,OAKI,QALJA,OAKI;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHJC,KAGI,QAHJA,KAGI;AAAA,MAFJC,SAEI,QAFJA,SAEI;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,KACP;AACJ,SACE,6BAAC,6BAAD;AAEE,IAAA,aAAa,EAAE,GAFjB;AAGE,IAAA,OAAO,EAAEJ,OAAO,GAAGA,OAAH,GAAa,YAAM,CAAE,CAHvC;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,QAAQ,EAAEG,QAAQ,IAAI,CAACJ,OALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,6BAAC,iBAAD;AACE,IAAA,KAAK,GACHK,MAAM,CAACC,MADJ,EAEHC,2BAAeC,WAFZ,EAGHN,KAAK,GAAG;AAAEA,MAAAA,KAAK,EAAEA;AAAT,KAAH,GAAsB,EAHxB,0CAICC,SAAS,YAAYM,KAArB,GAA6BN,SAA7B,GAAyC,CAACA,SAAD,CAJ1C,EADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGJ,KAPH,CANF,CADF;AAkBD,CA1BD;;eA4BeD,Y;;;AAEf,IAAMO,MAAM,GAAGK,wBAAWC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,YAAY,EAAE;AADL,GADoB;AAI/BP,EAAAA,MAAM,EAAE;AACNQ,IAAAA,UAAU,EAAE,uBAAU,CAAV,CADN;AAENC,IAAAA,WAAW,EAAE,EAFP;AAGNC,IAAAA,YAAY,EAAE,EAHR;AAINC,IAAAA,aAAa,EAAE,uBAAU,CAAV,CAJT;AAKNC,IAAAA,KAAK,EAAE,MALD;AAMNC,IAAAA,SAAS,EAAE,QANL;AAONN,IAAAA,YAAY,EAAE,CAPR;AAQNX,IAAAA,KAAK,EAAEkB,gBAAOC;AARR;AAJuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { BaseFontStyles } from '../constants/BaseStyles';\r\nimport { normalize } from '../constants/Layout';\r\nimport Colors from '../constants/Colors';\r\n\r\nconst XLabelButton = ({\r\n  title,\r\n  onPress,\r\n  style,\r\n  color,\r\n  textStyle,\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <TouchableOpacity\r\n      //   style={[style, BaseStyles.boxWithShadow]}\r\n      activeOpacity={0.5}\r\n      onPress={onPress ? onPress : () => {}}\r\n      style={style}\r\n      disabled={disabled || !onPress}>\r\n      <Text\r\n        style={[\r\n          styles.button,\r\n          BaseFontStyles.menuOrBody2,\r\n          color ? { color: color } : {},\r\n          ...(textStyle instanceof Array ? textStyle : [textStyle]),\r\n        ]}>\r\n        {title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default XLabelButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    paddingTop: normalize(7),\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    paddingBottom: normalize(7),\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    borderRadius: 5,\r\n    color: Colors.gray,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}