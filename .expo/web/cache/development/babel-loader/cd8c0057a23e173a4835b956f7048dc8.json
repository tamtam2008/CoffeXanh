{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RefreshHeader = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\node_modules\\\\react-native-spring-scrollview\\\\RefreshHeader.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar RefreshHeader = function (_React$Component) {\n  (0, _inherits2.default)(RefreshHeader, _React$Component);\n\n  var _super = _createSuper(RefreshHeader);\n\n  function RefreshHeader(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, RefreshHeader);\n    _this = _super.call(this, props);\n    _this.state = {\n      status: \"waiting\"\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(RefreshHeader, [{\n    key: \"changeToState\",\n    value: function changeToState(newStatus) {\n      this.state.status !== newStatus && this.onStateChange(this.state.status, newStatus);\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(oldStatus, newStatus) {\n      this.setState({\n        status: newStatus\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 9\n        }\n      }, this.state.status));\n    }\n  }]);\n  return RefreshHeader;\n}(_react.default.Component);\n\nexports.RefreshHeader = RefreshHeader;\nRefreshHeader.height = 80;\nRefreshHeader.style = \"stickyContent\";","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/node_modules/react-native-spring-scrollview/RefreshHeader.js"],"names":["RefreshHeader","props","state","status","newStatus","onStateChange","oldStatus","setState","flex","justifyContent","alignItems","fontSize","React","Component","height","style"],"mappings":";;;;;;;;;;;;;;;;;AAQA;;AACA;;;;;;;;IAEaA,a;;;;;AASX,yBAAYC,KAAZ,EAAmC;AAAA;;AAAA;AACjC,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAb;AAFiC;AAGlC;;;;kCAEaC,S,EAAyB;AACrC,WAAKF,KAAL,CAAWC,MAAX,KAAsBC,SAAtB,IACE,KAAKC,aAAL,CAAmB,KAAKH,KAAL,CAAWC,MAA9B,EAAsCC,SAAtC,CADF;AAED;;;kCAEaE,S,EAAyBF,S,EAAyB;AAE9D,WAAKG,QAAL,CAAc;AAAEJ,QAAAA,MAAM,EAAEC;AAAV,OAAd;AACD;;;6BAEQ;AACP,aACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAAEI,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,cAAc,EAAE,QAA3B;AAAqCC,UAAAA,UAAU,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAC;AAAX,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKT,KAAL,CAAWC,MAA1C,CADF,CADF;AAKD;;;EA9BgCS,eAAMC,S;;;AAA5Bb,a,CAKJc,M,GAAS,E;AALLd,a,CAOJe,K,GAAQ,e","sourcesContent":["/**\n * Author: Shi(bolan0000@icloud.com)\n * Date: 2019/1/18\n * Copyright (c) 2018, AoTang, Inc.\n *\n * Description:\n */\n\nimport React from \"react\";\nimport { ActivityIndicator, Animated, Image, Text, View } from \"react-native\";\n\nexport class RefreshHeader extends React.Component<\n  HeaderPropType,\n  HeaderStateType\n> {\n\n  static height = 80;\n\n  static style = \"stickyContent\";\n\n  constructor(props: HeaderPropType) {\n    super(props);\n    this.state = { status: \"waiting\" };\n  }\n\n  changeToState(newStatus: HeaderStatus) {\n    this.state.status !== newStatus &&\n      this.onStateChange(this.state.status, newStatus);\n  }\n\n  onStateChange(oldStatus: HeaderStatus, newStatus: HeaderStatus) {\n    // console.log(\"newStatus\", newStatus);\n    this.setState({ status: newStatus });\n  }\n\n  render() {\n    return (\n      <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <Text style={{ fontSize:18 }}>{this.state.status}</Text>\n      </View>\n    );\n  }\n}\n\nexport type HeaderStatus =\n  | \"waiting\"\n  | \"pulling\"\n  | \"pullingEnough\"\n  | \"pullingCancel\"\n  | \"refreshing\"\n  | \"rebound\";\n\ninterface HeaderPropType {\n  offset?: Animated.Value;\n  maxHeight?: number;\n  bottomOffset?: number;\n}\n\ninterface HeaderStateType {\n  status?: HeaderStatus;\n}\n"]},"metadata":{},"sourceType":"script"}