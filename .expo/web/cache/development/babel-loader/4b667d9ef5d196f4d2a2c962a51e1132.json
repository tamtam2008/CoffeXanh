{"ast":null,"code":"var _reactNative = require(\"react-native\");\n\nvar _reactNativeSpringScrollview = require(\"react-native-spring-scrollview\");","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/node_modules/react-native-largelist-v3/Types.js"],"names":[],"mappings":"AASA;;AACA","sourcesContent":["/*\n *\n * Created by Stone\n * https://github.com/bolan9999\n * Email: shanshang130@gmail.com\n * Date: 2018/7/17\n *\n */\n\nimport { Animated, ViewStyle } from \"react-native\";\nimport { SpringScrollViewPropType } from \"react-native-spring-scrollview\";\n\nexport type LargeListDataType = { items: any[] }[];\n\nexport interface IndexPath {\n  section: number,\n  row: number\n}\n\nexport interface Offset {\n  x: number,\n  y: number\n}\n\nexport interface Size {\n  height: number,\n  width: number\n}\n\nexport interface LargeListPropType extends SpringScrollViewPropType {\n  data: LargeListDataType,\n  headerStickyEnabled?: boolean,\n  contentStyle?: ViewStyle,\n  directionalLockEnabled?: boolean,\n  renderScaleHeaderBackground?: () => React.ReactElement<any>,\n  heightForSection?: (section: number) => number,\n  renderSection?: (section: number) => React.Node<any>,\n  heightForIndexPath: (indexPath: IndexPath) => number,\n  renderIndexPath: (indexPath: IndexPath) => React.Node<any>,\n  renderHeader?: () => React.ReactElement<any>,\n  renderFooter?: () => React.ReactElement<any>,\n  renderEmpty?: () => React.ReactElement<any>,\n  onNativeContentOffsetExtract?: {\n    x: Animated.Value,\n    y: Animated.Value\n  },\n  inverted?: boolean,\n\n  groupCount?: number,\n  groupMinHeight?: number,\n  updateTimeInterval?: number\n}\n\nexport interface GroupPropType {\n  indexes: IndexPath[],\n  criticalPoint: number[],\n  input: number[],\n  output: number[],\n  data: LargeListDataType,\n  heightForSection?: (section: number) => number,\n  heightForIndexPath: (indexPath: IndexPath) => number,\n  renderSection?: (section: number) => React.Node<any>,\n  renderIndexPath: (indexPath: IndexPath) => React.Node<any>,\n  offset?: number,\n  inverted?: boolean,\n  updateTimeInterval: number\n}\n\nexport interface SectionPropType {\n  tops: number[],\n  section: number,\n  nativeOffset: Animated.Value,\n  heightForSection: (section: number) => number,\n  renderSection?: (section: number) => React.Node<any>,\n  input: number[],\n  output: number[],\n  sectionIndexes: number[],\n  offset: number,\n  inverted?: boolean,\n  data: LargeListDataType\n}\n\nexport interface WaterfallListType extends SpringScrollViewPropType{\n  data: any[],\n  heightForItem: (item: any, index: number) => number,\n  renderItem: (item: any, index: number) => React.ReactElement<any>,\n  preferColumnWidth?: number,\n  numColumns?: number,\n  renderHeader?: () => React.ReactElement<any>,\n  renderFooter?: () => React.ReactElement<any>,\n  onNativeContentOffsetExtract?: {\n    x: Animated.Value,\n    y: Animated.Value\n  }\n}\n\nexport interface WaterfallItemType extends WaterfallListType {\n  input: number[],\n  output: number[],\n  itemIndexes: number[],\n  offset: number\n}\n\nexport interface StickyFormPropType extends LargeListPropType {}\n"]},"metadata":{},"sourceType":"script"}