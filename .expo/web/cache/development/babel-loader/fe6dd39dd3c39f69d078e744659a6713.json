{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeEasyGrid = require(\"react-native-easy-grid\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactNativeScreens = require(\"react-native-screens\");\n\nvar _reactNativeSimpleRadioButton = _interopRequireDefault(require(\"react-native-simple-radio-button\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _Container = _interopRequireDefault(require(\"../../../../components/layout/Container\"));\n\nvar _XButton = _interopRequireDefault(require(\"../../../../components/XButton\"));\n\nvar _XTextBox = _interopRequireDefault(require(\"../../../../components/XTextBox2\"));\n\nvar _BaseStyles = require(\"../../../../constants/BaseStyles\");\n\nvar _Colors = _interopRequireDefault(require(\"../../../../constants/Colors\"));\n\nvar _Layout = _interopRequireDefault(require(\"../../../../constants/Layout\"));\n\nvar _AccountInfoUpdate = _interopRequireDefault(require(\"./AccountInfoUpdate.actions\"));\n\nvar _AccountInfoUpdate2 = _interopRequireDefault(require(\"./AccountInfoUpdate.controller\"));\n\nvar _AccountInfoUpdate3 = _interopRequireDefault(require(\"./AccountInfoUpdate.reducer\"));\n\nvar _AccountInfoUpdate4 = _interopRequireDefault(require(\"./AccountInfoUpdate.style\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\account\\\\accountInfoUpdate\\\\AccountInfoUpdate.screen.js\";\n\n(0, _reactNativeScreens.enableScreens)();\nvar DOB_FORMAT = 'DD/MM/YYYY';\n\nvar AccountInfoUpdateScreen = function AccountInfoUpdateScreen(props) {\n  var _React$useReducer = _react.default.useReducer(_AccountInfoUpdate3.default.reducer, _AccountInfoUpdate3.default.initState),\n      _React$useReducer2 = (0, _slicedToArray2.default)(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var radio_props = [{\n    label: t('sex.male'),\n    value: 11\n  }, {\n    label: t('sex.female'),\n    value: 12\n  }];\n  var userInfo = props.userInfo,\n      userId = props.userId;\n\n  var _useState = (0, _react.useState)(userInfo.name),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = (0, _react.useState)((0, _moment.default)(userInfo.dob).format(DOB_FORMAT)),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      dob = _useState4[0],\n      setDoB = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(userInfo.phone),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      phone = _useState6[0],\n      setPhone = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(userInfo.email),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      email = _useState8[0],\n      setEmail = _useState8[1];\n\n  var _useState9 = (0, _react.useState)(userInfo.sex),\n      _useState10 = (0, _slicedToArray2.default)(_useState9, 2),\n      sex = _useState10[0],\n      setSex = _useState10[1];\n\n  var _useState11 = (0, _react.useState)({}),\n      _useState12 = (0, _slicedToArray2.default)(_useState11, 2),\n      error = _useState12[0],\n      setError = _useState12[1];\n\n  var checkData = (0, _react.useCallback)(function () {\n    var e = {};\n\n    if (name.trim().length === 0) {\n      e.name = t('AccountInfoUpdateScreen.error.name');\n    }\n\n    if (dob.trim().length < 8 || !(0, _moment.default)(dob, DOB_FORMAT, true).isValid()) {\n      e.dob = t('AccountInfoUpdateScreen.error.dob');\n    }\n\n    if (Object.keys(e).length === 0) {\n      dispatch({\n        type: _AccountInfoUpdate.default.GetData_request\n      });\n\n      _AccountInfoUpdate2.default.updateInfo(userId, {\n        name: name,\n        dob: (0, _moment.default)(dob, DOB_FORMAT).valueOf(),\n        sex: sex,\n        phone: phone,\n        email: email\n      }, function () {\n        dispatch({\n          type: _AccountInfoUpdate.default.GetData_success\n        });\n      }, function () {\n        dispatch({\n          type: _AccountInfoUpdate.default.GetData_fail\n        });\n      });\n    } else {\n      setError(e);\n    }\n  }, [dob, email, name, phone, sex, t, userId]);\n  return _react.default.createElement(_Container.default, {\n    isRequesting: state.isRequesting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_AccountInfoUpdate4.default.flexContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeGestureHandler.ScrollView, {\n    style: [_AccountInfoUpdate4.default.flexContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_AccountInfoUpdate4.default.flexContainer, _AccountInfoUpdate4.default.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    style: [_BaseStyles.BaseStyles.baseContainer2, _BaseStyles.BaseStyles.mt_10, _AccountInfoUpdate4.default.borderRadius],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfoUpdate4.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  }, t('AccountInfoUpdateScreen.name'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_XTextBox.default, {\n    maxLength: 50,\n    value: name,\n    onChange: function onChange(_name) {\n      setError({});\n      setName(_name);\n    },\n    size: _Layout.default.window.width - 64,\n    isError: error.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  })), !!error.name && _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _AccountInfoUpdate4.default.errorMsg],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 27\n    }\n  }, error.name)))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfoUpdate4.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 27\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, t('AccountInfoUpdateScreen.dob'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 27\n    }\n  }, _react.default.createElement(_XTextBox.default, {\n    maxLength: 10,\n    value: dob,\n    onChange: function onChange(formatted, extracted) {\n      setDoB(formatted);\n      console.log('update dob', extracted);\n    },\n    keyboardType: 'numeric',\n    mask: '[00]/[00]/[0000]',\n    size: 90,\n    isError: error.dob,\n    placeholder: 'dd/mm/yyyy',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 29\n    }\n  })), !!error.dob && _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 29\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _AccountInfoUpdate4.default.errorMsg],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 31\n    }\n  }, error.dob))))), _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 25\n    }\n  }, t('AccountInfoUpdateScreen.sexTitle'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNativeSimpleRadioButton.default, {\n    radio_props: radio_props,\n    initial: userInfo.sex === 11 ? 0 : 1,\n    onPress: setSex,\n    buttonColor: _Colors.default.gray,\n    buttonSize: 12,\n    buttonOuterSize: 24,\n    selectedButtonColor: _Colors.default.tintColor,\n    labelColor: _Colors.default.gray,\n    selectedLabelColor: _Colors.default.tintColor,\n    formHorizontal: true,\n    style: _AccountInfoUpdate4.default.radioContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 25\n    }\n  })))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfoUpdate4.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, t('AccountInfoScreen.phone'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_XTextBox.default, {\n    maxLength: 10,\n    value: phone,\n    onChange: setPhone,\n    size: 90,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 25\n    }\n  })), !!error.phone && _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 25\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _AccountInfoUpdate4.default.errorMsg],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 27\n    }\n  }, error.phone)))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfoUpdate4.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }, t('AccountInfoScreen.email'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_XTextBox.default, {\n    maxLength: 20,\n    value: email,\n    onChange: setEmail,\n    size: _Layout.default.window.width - 64,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 25\n    }\n  })), !!error.email && _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _AccountInfoUpdate4.default.errorMsg],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 27\n    }\n  }, error.email))))))))), _react.default.createElement(_reactNative.View, {\n    style: [_AccountInfoUpdate4.default.saveBtnContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_XButton.default, {\n    title: t('AccountInfoUpdateScreen.submitBtn'),\n    onPress: function onPress() {\n      checkData();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userId: state.auth.userId,\n    userInfo: state.auth.userInfo\n  };\n};\n\nvar mapDispatchToProps = {};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(AccountInfoUpdateScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/account/accountInfoUpdate/AccountInfoUpdate.screen.js"],"names":["DOB_FORMAT","AccountInfoUpdateScreen","props","React","useReducer","AccountInfoUpdateScreenReducer","reducer","initState","state","dispatch","t","radio_props","label","value","userInfo","userId","name","setName","dob","format","setDoB","phone","setPhone","email","setEmail","sex","setSex","error","setError","checkData","e","trim","length","isValid","Object","keys","type","Actions","GetData_request","Controller","updateInfo","valueOf","GetData_success","GetData_fail","isRequesting","styles","flexContainer","container","BaseStyles","baseContainer2","mt_10","borderRadius","row","BaseFontStyles","caption","_name","Layout","window","width","errorMsg","formatted","extracted","console","log","Colors","gray","tintColor","radioContainer","saveBtnContainer","mapStateToProps","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, View } from 'react-native';\r\nimport { Col, Grid, Row } from 'react-native-easy-grid';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { enableScreens } from 'react-native-screens';\r\nimport RadioForm from 'react-native-simple-radio-button';\r\nimport { connect } from 'react-redux';\r\nimport Container from '../../../../components/layout/Container';\r\nimport XButton from '../../../../components/XButton';\r\nimport XTextBox2 from '../../../../components/XTextBox2';\r\nimport { BaseFontStyles, BaseStyles } from '../../../../constants/BaseStyles';\r\nimport Colors from '../../../../constants/Colors';\r\nimport Layout from '../../../../constants/Layout';\r\nimport Actions from './AccountInfoUpdate.actions';\r\nimport Controller from './AccountInfoUpdate.controller';\r\nimport AccountInfoUpdateScreenReducer from './AccountInfoUpdate.reducer';\r\nimport styles from './AccountInfoUpdate.style';\r\nimport moment from 'moment';\r\n\r\nenableScreens();\r\nconst DOB_FORMAT = 'DD/MM/YYYY';\r\nconst AccountInfoUpdateScreen = props => {\r\n  const [state, dispatch] = React.useReducer(\r\n    AccountInfoUpdateScreenReducer.reducer,\r\n    AccountInfoUpdateScreenReducer.initState,\r\n  );\r\n  const { t } = useTranslation();\r\n  const radio_props = [\r\n    { label: t('sex.male'), value: 11 },\r\n    { label: t('sex.female'), value: 12 },\r\n  ];\r\n  const { userInfo, userId } = props;\r\n  const [name, setName] = useState(userInfo.name);\r\n  const [dob, setDoB] = useState(moment(userInfo.dob).format(DOB_FORMAT));\r\n  const [phone, setPhone] = useState(userInfo.phone);\r\n  const [email, setEmail] = useState(userInfo.email);\r\n  const [sex, setSex] = useState(userInfo.sex);\r\n  const [error, setError] = useState({});\r\n\r\n  const checkData = useCallback(() => {\r\n    const e = {};\r\n    if (name.trim().length === 0) {\r\n      e.name = t('AccountInfoUpdateScreen.error.name');\r\n    }\r\n    if (dob.trim().length < 8 || !moment(dob, DOB_FORMAT, true).isValid()) {\r\n      e.dob = t('AccountInfoUpdateScreen.error.dob');\r\n    }\r\n    // todo check email\r\n    // todo check phone\r\n    if (Object.keys(e).length === 0) {\r\n      dispatch({ type: Actions.GetData_request });\r\n      Controller.updateInfo(\r\n        userId,\r\n        {\r\n          name,\r\n          dob: moment(dob, DOB_FORMAT).valueOf(),\r\n          sex,\r\n          phone,\r\n          email,\r\n        },\r\n        () => {\r\n          dispatch({ type: Actions.GetData_success });\r\n        },\r\n        () => {\r\n          dispatch({ type: Actions.GetData_fail });\r\n        },\r\n      );\r\n    } else {\r\n      setError(e);\r\n    }\r\n  }, [dob, email, name, phone, sex, t, userId]);\r\n  return (\r\n    <Container isRequesting={state.isRequesting}>\r\n      <View style={[styles.flexContainer]}>\r\n        <ScrollView style={[styles.flexContainer]}>\r\n          <View style={[styles.flexContainer, styles.container]}>\r\n            <Grid>\r\n              <Row>\r\n                <Col\r\n                  style={[\r\n                    BaseStyles.baseContainer2,\r\n                    BaseStyles.mt_10,\r\n                    styles.borderRadius,\r\n                  ]}>\r\n                  <Row style={[styles.row]}>\r\n                    <Col>\r\n                      <Row>\r\n                        <Text\r\n                          style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                          {t('AccountInfoUpdateScreen.name')}\r\n                        </Text>\r\n                      </Row>\r\n                      <Row>\r\n                        <XTextBox2\r\n                          maxLength={50}\r\n                          value={name}\r\n                          onChange={_name => {\r\n                            setError({});\r\n                            setName(_name);\r\n                          }}\r\n                          size={Layout.window.width - 64}\r\n                          isError={error.name}\r\n                        />\r\n                      </Row>\r\n                      {!!error.name && (\r\n                        <Row>\r\n                          <Text\r\n                            style={[BaseFontStyles.caption, styles.errorMsg]}>\r\n                            {error.name}\r\n                          </Text>\r\n                        </Row>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                  <Row style={[styles.row]}>\r\n                    <Col>\r\n                      <Row>\r\n                        <Col>\r\n                          <Row>\r\n                            <Text\r\n                              style={[\r\n                                BaseFontStyles.caption,\r\n                                BaseStyles.label,\r\n                              ]}>\r\n                              {t('AccountInfoUpdateScreen.dob')}\r\n                            </Text>\r\n                          </Row>\r\n                          <Row>\r\n                            <XTextBox2\r\n                              maxLength={10}\r\n                              value={dob}\r\n                              onChange={(formatted, extracted) => {\r\n                                setDoB(formatted);\r\n                                console.log('update dob', extracted);\r\n                              }}\r\n                              keyboardType={'numeric'}\r\n                              mask={'[00]/[00]/[0000]'}\r\n                              size={90}\r\n                              isError={error.dob}\r\n                              placeholder={'dd/mm/yyyy'}\r\n                            />\r\n                          </Row>\r\n                          {!!error.dob && (\r\n                            <Row>\r\n                              <Text\r\n                                style={[\r\n                                  BaseFontStyles.caption,\r\n                                  styles.errorMsg,\r\n                                ]}>\r\n                                {error.dob}\r\n                              </Text>\r\n                            </Row>\r\n                          )}\r\n                        </Col>\r\n                      </Row>\r\n                    </Col>\r\n                    <Col>\r\n                      <Row>\r\n                        <Text\r\n                          style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                          {t('AccountInfoUpdateScreen.sexTitle')}\r\n                        </Text>\r\n                      </Row>\r\n                      <Row>\r\n                        <RadioForm\r\n                          radio_props={radio_props}\r\n                          initial={userInfo.sex === 11 ? 0 : 1}\r\n                          onPress={setSex}\r\n                          buttonColor={Colors.gray}\r\n                          buttonSize={12}\r\n                          buttonOuterSize={24}\r\n                          selectedButtonColor={Colors.tintColor}\r\n                          labelColor={Colors.gray}\r\n                          selectedLabelColor={Colors.tintColor}\r\n                          formHorizontal={true}\r\n                          style={styles.radioContainer}\r\n                        />\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                  <Row style={[styles.row]}>\r\n                    <Col>\r\n                      <Row>\r\n                        <Text\r\n                          style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                          {t('AccountInfoScreen.phone')}\r\n                        </Text>\r\n                      </Row>\r\n                      <Row>\r\n                        <XTextBox2\r\n                          maxLength={10}\r\n                          value={phone}\r\n                          onChange={setPhone}\r\n                          size={90}\r\n                        />\r\n                      </Row>\r\n                      {!!error.phone && (\r\n                        <Row>\r\n                          <Text\r\n                            style={[BaseFontStyles.caption, styles.errorMsg]}>\r\n                            {error.phone}\r\n                          </Text>\r\n                        </Row>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                  <Row style={[styles.row]}>\r\n                    <Col>\r\n                      <Row>\r\n                        <Text\r\n                          style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                          {t('AccountInfoScreen.email')}\r\n                        </Text>\r\n                      </Row>\r\n                      <Row>\r\n                        <XTextBox2\r\n                          maxLength={20}\r\n                          value={email}\r\n                          onChange={setEmail}\r\n                          size={Layout.window.width - 64}\r\n                        />\r\n                      </Row>\r\n                      {!!error.email && (\r\n                        <Row>\r\n                          <Text\r\n                            style={[BaseFontStyles.caption, styles.errorMsg]}>\r\n                            {error.email}\r\n                          </Text>\r\n                        </Row>\r\n                      )}\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Grid>\r\n          </View>\r\n        </ScrollView>\r\n        <View style={[styles.saveBtnContainer]}>\r\n          <XButton\r\n            title={t('AccountInfoUpdateScreen.submitBtn')}\r\n            onPress={() => {\r\n              checkData();\r\n            }}\r\n          />\r\n        </View>\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  userId: state.auth.userId,\r\n  userInfo: state.auth.userInfo,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(AccountInfoUpdateScreen);\r\n"]},"metadata":{},"sourceType":"script"}