{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _Container = _interopRequireDefault(require(\"../../../components/layout/Container\"));\n\nvar _Colors = _interopRequireDefault(require(\"../../../constants/Colors\"));\n\nvar _Icon = require(\"../../../constants/Icon\");\n\nvar _SettingHeader = _interopRequireDefault(require(\"./components/SettingHeader\"));\n\nvar _SettingItem = _interopRequireDefault(require(\"./components/SettingItem\"));\n\nvar _SettingMenu = _interopRequireDefault(require(\"./SettingMenu.config\"));\n\nvar _SettingMenu2 = _interopRequireDefault(require(\"./SettingMenu.style\"));\n\nvar _SessionUtils = _interopRequireDefault(require(\"../../../session/SessionUtils\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\settingMenu\\\\SettingMenu.screen.js\";\n\nvar SettingMenuScreen = function SettingMenuScreen(props) {\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react.default.createElement(_Container.default, {\n    isRequesting: props.isRequesting,\n    contentStyle: _SettingMenu2.default.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_SettingHeader.default, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }), _SettingMenu.default.menuList.filter(function (item) {\n    var _SessionUtils$session;\n\n    return item.isAuthRequired === ((_SessionUtils$session = _SessionUtils.default.session()) == null ? void 0 : _SessionUtils$session.isLogin) || !item.isAuthRequired;\n  }).map(function (item, key) {\n    return _react.default.createElement(_SettingItem.default, {\n      key: key,\n      icon: item.icon,\n      style: [_SettingMenu2.default.item],\n      title: t(item.title),\n      onPress: item.action,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    });\n  }), _SessionUtils.default.session().isLogin && _react.default.createElement(_SettingItem.default, {\n    icon: {\n      name: 'sign-out-alt',\n      type: _Icon.IconType.FONTAWESOME,\n      other: _Icon.FontAwesomeType.SOLID,\n      color: _Colors.default.red\n    },\n    style: [_SettingMenu2.default.item, _SettingMenu2.default.logout],\n    title: t('SettingMenu.logout'),\n    titleStyle: [_SettingMenu2.default.logout],\n    onPress: function onPress() {\n      _SessionUtils.default.logout();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar _default = SettingMenuScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/settingMenu/SettingMenu.screen.js"],"names":["SettingMenuScreen","props","t","isRequesting","styles","container","SettingMenuConfig","menuList","filter","item","isAuthRequired","SessionUtils","session","isLogin","map","key","icon","title","action","name","type","IconType","FONTAWESOME","other","FontAwesomeType","SOLID","color","Colors","red","logout"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA,wBACrB,mCADqB;AAAA,MAC3BC,CAD2B,mBAC3BA,CAD2B;;AAEnC,SACE,6BAAC,kBAAD;AACE,IAAA,YAAY,EAAED,KAAK,CAACE,YADtB;AAEE,IAAA,YAAY,EAAEC,sBAAOC,SAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,6BAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIGC,qBAAkBC,QAAlB,CACEC,MADF,CAEG,UAACC,IAAD;AAAA;;AAAA,WACEA,IAAI,CAACC,cAAL,+BAAwBC,sBAAaC,OAAb,EAAxB,qBAAwB,sBAAwBC,OAAhD,KACA,CAACJ,IAAI,CAACC,cAFR;AAAA,GAFH,EAMEI,GANF,CAMM,UAACL,IAAD,EAAOM,GAAP;AAAA,WACH,6BAAC,oBAAD;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAEN,IAAI,CAACO,IAFb;AAGE,MAAA,KAAK,EAAE,CAACZ,sBAAOK,IAAR,CAHT;AAIE,MAAA,KAAK,EAAEP,CAAC,CAACO,IAAI,CAACQ,KAAN,CAJV;AAKE,MAAA,OAAO,EAAER,IAAI,CAACS,MALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADG;AAAA,GANN,CAJH,EAmBGP,sBAAaC,OAAb,GAAuBC,OAAvB,IACC,6BAAC,oBAAD;AACE,IAAA,IAAI,EAAE;AACJM,MAAAA,IAAI,EAAE,cADF;AAEJC,MAAAA,IAAI,EAAEC,eAASC,WAFX;AAGJC,MAAAA,KAAK,EAAEC,sBAAgBC,KAHnB;AAIJC,MAAAA,KAAK,EAAEC,gBAAOC;AAJV,KADR;AAOE,IAAA,KAAK,EAAE,CAACxB,sBAAOK,IAAR,EAAcL,sBAAOyB,MAArB,CAPT;AAQE,IAAA,KAAK,EAAE3B,CAAC,CAAC,oBAAD,CARV;AASE,IAAA,UAAU,EAAE,CAACE,sBAAOyB,MAAR,CATd;AAUE,IAAA,OAAO,EAAE,mBAAM;AACblB,4BAAakB,MAAb;AACD,KAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADF;AAsCD,CAxCD;;eA0Ce7B,iB","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Container from '../../../components/layout/Container';\r\nimport Colors from '../../../constants/Colors';\r\nimport { FontAwesomeType, IconType } from '../../../constants/Icon';\r\nimport SettingHeader from './components/SettingHeader';\r\nimport SettingItem from './components/SettingItem';\r\nimport SettingMenuConfig from './SettingMenu.config';\r\nimport styles from './SettingMenu.style';\r\nimport SessionUtils from '../../../session/SessionUtils';\r\n\r\nconst SettingMenuScreen = (props) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Container\r\n      isRequesting={props.isRequesting}\r\n      contentStyle={styles.container}>\r\n      <SettingHeader />\r\n      {SettingMenuConfig.menuList\r\n        .filter(\r\n          (item) =>\r\n            item.isAuthRequired === SessionUtils.session()?.isLogin ||\r\n            !item.isAuthRequired,\r\n        )\r\n        .map((item, key) => (\r\n          <SettingItem\r\n            key={key}\r\n            icon={item.icon}\r\n            style={[styles.item]}\r\n            title={t(item.title)}\r\n            onPress={item.action}\r\n          />\r\n        ))}\r\n      {SessionUtils.session().isLogin && (\r\n        <SettingItem\r\n          icon={{\r\n            name: 'sign-out-alt',\r\n            type: IconType.FONTAWESOME,\r\n            other: FontAwesomeType.SOLID,\r\n            color: Colors.red,\r\n          }}\r\n          style={[styles.item, styles.logout]}\r\n          title={t('SettingMenu.logout')}\r\n          titleStyle={[styles.logout]}\r\n          onPress={() => {\r\n            SessionUtils.logout();\r\n          }}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SettingMenuScreen;\r\n"]},"metadata":{},"sourceType":"script"}