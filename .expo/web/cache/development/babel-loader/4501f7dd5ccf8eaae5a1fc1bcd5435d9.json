{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeEasyGrid = require(\"react-native-easy-grid\");\n\nvar _reactNativeGestureHandler = require(\"react-native-gesture-handler\");\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _LazyImage = _interopRequireDefault(require(\"../../../../components/LazyImage\"));\n\nvar _CustomIcon = _interopRequireDefault(require(\"../../../../components/CustomIcon\"));\n\nvar _XIconButton = _interopRequireDefault(require(\"../../../../components/XIconButton\"));\n\nvar _BaseStyles = require(\"../../../../constants/BaseStyles\");\n\nvar _Icon = require(\"../../../../constants/Icon\");\n\nvar _Layout = require(\"../../../../constants/Layout\");\n\nvar _AccountInfo = _interopRequireDefault(require(\"./AccountInfo.style\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\account\\\\accountInfo\\\\AccountInfo.screen.js\";\n\nvar AccountInfoScreen = function AccountInfoScreen(props) {\n  var avatar = props.avatar,\n      userInfo = props.userInfo;\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react.default.createElement(_reactNativeGestureHandler.ScrollView, {\n    style: [_AccountInfo.default.flexContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_AccountInfo.default.flexContainer, _AccountInfo.default.container],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Grid, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    style: [_BaseStyles.BaseStyles.baseContainer2, _AccountInfo.default.shortInfo, _AccountInfo.default.borderRadius],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_AccountInfo.default.avatar],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, avatar.url ? _react.default.createElement(_LazyImage.default, {\n    url: avatar.url,\n    headers: avatar.headers || {},\n    height: (0, _Layout.normalize)(132),\n    width: (0, _Layout.normalize)(132),\n    style: _AccountInfo.default.avatarImage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 19\n    }\n  }) : _react.default.createElement(_CustomIcon.default, {\n    name: \"user-circle\",\n    type: _Icon.IconType.FONTAWESOME,\n    size: (0, _Layout.normalize)(132),\n    focused: true,\n    other: _Icon.FontAwesomeType.SOLID,\n    custom: {\n      style: _BaseStyles.BaseStyles.textShadow\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }), _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.boxWithShadow, _AccountInfo.default.avatarEditBtnContainer],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_XIconButton.default, {\n    icon: {\n      name: 'edit',\n      type: _Icon.IconType.FONTAWESOME,\n      size: 19\n    },\n    onPress: changeAvatarAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }\n  }))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.headline],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, userInfo.name)), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, t(userInfo.role ? \"role.\" + userInfo.role : 'role.staff'))))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    style: [_BaseStyles.BaseStyles.baseContainer2, _BaseStyles.BaseStyles.mt_10, _AccountInfo.default.borderRadius],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    size: 9,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.title],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  }, t('AccountInfoScreen.userInfo'))), _react.default.createElement(_reactNativeEasyGrid.Col, {\n    size: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_XIconButton.default, {\n    icon: {\n      name: 'edit',\n      type: _Icon.IconType.FONTAWESOME,\n      size: 19\n    },\n    onPress: function onPress() {\n      return props.navigation.navigate('accountInfoUpdate');\n    },\n    style: _AccountInfo.default.editButton,\n    iconStyle: {\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 19\n    }\n  }))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, t('AccountInfoScreen.name'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, userInfo.name)))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, t('AccountInfoScreen.dob'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, (0, _moment.default)(userInfo.dob).format('DD/MM/YYYY')))))), _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, t('AccountInfoScreen.sex')), _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 19\n    }\n  }, t(\"sex.\" + userInfo.sex)))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, t('AccountInfoScreen.phone'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, userInfo.phone || t('AccountInfoScreen.empty'))))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    style: [_AccountInfo.default.row],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Col, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _BaseStyles.BaseStyles.label],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 21\n    }\n  }, t('AccountInfoScreen.email'))), _react.default.createElement(_reactNativeEasyGrid.Row, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, userInfo.email || t('AccountInfoScreen.empty'))))))))));\n};\n\nvar changeAvatarAction = function changeAvatarAction() {\n  alert('change avatar!');\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userInfo: state.auth.userInfo,\n    avatar: {\n      url: state.auth.userInfo.avatar\n    }\n  };\n};\n\nvar mapDispatchToProps = {};\n\nvar _default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(AccountInfoScreen);\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/account/accountInfo/AccountInfo.screen.js"],"names":["AccountInfoScreen","props","avatar","userInfo","t","styles","flexContainer","container","BaseStyles","baseContainer2","shortInfo","borderRadius","url","headers","avatarImage","IconType","FONTAWESOME","FontAwesomeType","SOLID","style","textShadow","boxWithShadow","avatarEditBtnContainer","name","type","size","changeAvatarAction","row","BaseFontStyles","headline","body1","role","mt_10","title","navigation","navigate","editButton","padding","caption","label","dob","format","sex","phone","email","alert","mapStateToProps","state","auth","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Text, View } from 'react-native';\r\nimport { Col, Grid, Row } from 'react-native-easy-grid';\r\nimport { ScrollView } from 'react-native-gesture-handler';\r\nimport { connect } from 'react-redux';\r\nimport LazyImage from '../../../../components/LazyImage';\r\nimport CustomIcon from '../../../../components/CustomIcon';\r\nimport XIconButton from '../../../../components/XIconButton';\r\nimport { BaseFontStyles, BaseStyles } from '../../../../constants/BaseStyles';\r\nimport { FontAwesomeType, IconType } from '../../../../constants/Icon';\r\nimport { normalize } from '../../../../constants/Layout';\r\nimport styles from './AccountInfo.style';\r\nimport moment from 'moment';\r\n\r\n// enableScreens();\r\n\r\nconst AccountInfoScreen = props => {\r\n  const { avatar, userInfo } = props;\r\n  const { t } = useTranslation();\r\n  return (\r\n    <ScrollView style={[styles.flexContainer]}>\r\n      <View style={[styles.flexContainer, styles.container]}>\r\n        <Grid>\r\n          <Row>\r\n            <Col\r\n              style={[\r\n                BaseStyles.baseContainer2,\r\n                styles.shortInfo,\r\n                styles.borderRadius,\r\n              ]}>\r\n              <View style={[styles.avatar]}>\r\n                {avatar.url ? (\r\n                  <LazyImage\r\n                    url={avatar.url}\r\n                    headers={avatar.headers || {}}\r\n                    height={normalize(132)}\r\n                    width={normalize(132)}\r\n                    style={styles.avatarImage}\r\n                  />\r\n                ) : (\r\n                  <CustomIcon\r\n                    name=\"user-circle\"\r\n                    type={IconType.FONTAWESOME}\r\n                    size={normalize(132)}\r\n                    focused\r\n                    other={FontAwesomeType.SOLID}\r\n                    custom={{ style: BaseStyles.textShadow }}\r\n                  />\r\n                )}\r\n                <View\r\n                  style={[\r\n                    BaseStyles.boxWithShadow,\r\n                    styles.avatarEditBtnContainer,\r\n                  ]}>\r\n                  <XIconButton\r\n                    icon={{\r\n                      name: 'edit',\r\n                      type: IconType.FONTAWESOME,\r\n                      size: 19,\r\n                    }}\r\n                    onPress={changeAvatarAction}\r\n                  />\r\n                </View>\r\n              </View>\r\n              <Row style={[styles.row]}>\r\n                <Text style={[BaseFontStyles.headline]}>{userInfo.name}</Text>\r\n              </Row>\r\n              <Row style={[styles.row]}>\r\n                <Text style={[BaseFontStyles.body1]}>\r\n                  {t(userInfo.role ? `role.${userInfo.role}` : 'role.staff')}\r\n                </Text>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col\r\n              style={[\r\n                BaseStyles.baseContainer2,\r\n                BaseStyles.mt_10,\r\n                styles.borderRadius,\r\n              ]}>\r\n              <Row style={[styles.row]}>\r\n                <Col size={9}>\r\n                  <Text style={[BaseFontStyles.title]}>\r\n                    {t('AccountInfoScreen.userInfo')}\r\n                  </Text>\r\n                </Col>\r\n                <Col size={1}>\r\n                  <XIconButton\r\n                    icon={{\r\n                      name: 'edit',\r\n                      type: IconType.FONTAWESOME,\r\n                      size: 19,\r\n                    }}\r\n                    onPress={() =>\r\n                      props.navigation.navigate('accountInfoUpdate')\r\n                    }\r\n                    style={styles.editButton}\r\n                    iconStyle={{\r\n                      padding: 5,\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row style={[styles.row]}>\r\n                <Col>\r\n                  <Row>\r\n                    <Text style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                      {t('AccountInfoScreen.name')}\r\n                    </Text>\r\n                  </Row>\r\n                  <Row>\r\n                    <Text style={[BaseFontStyles.body1]}>{userInfo.name}</Text>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <Row style={[styles.row]}>\r\n                <Col>\r\n                  <Row>\r\n                    <Col>\r\n                      <Row>\r\n                        <Text\r\n                          style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                          {t('AccountInfoScreen.dob')}\r\n                        </Text>\r\n                      </Row>\r\n                      <Row>\r\n                        <Text style={[BaseFontStyles.body1]}>\r\n                          {moment(userInfo.dob).format('DD/MM/YYYY')}\r\n                        </Text>\r\n                      </Row>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col>\r\n                  <Text style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                    {t('AccountInfoScreen.sex')}\r\n                  </Text>\r\n                  <Text style={[BaseFontStyles.body1]}>\r\n                    {t(`sex.${userInfo.sex}`)}\r\n                  </Text>\r\n                </Col>\r\n              </Row>\r\n              <Row style={[styles.row]}>\r\n                <Col>\r\n                  <Row>\r\n                    <Text style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                      {t('AccountInfoScreen.phone')}\r\n                    </Text>\r\n                  </Row>\r\n                  <Row>\r\n                    <Text style={[BaseFontStyles.body1]}>\r\n                      {userInfo.phone || t('AccountInfoScreen.empty')}\r\n                    </Text>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <Row style={[styles.row]}>\r\n                <Col>\r\n                  <Row>\r\n                    <Text style={[BaseFontStyles.caption, BaseStyles.label]}>\r\n                      {t('AccountInfoScreen.email')}\r\n                    </Text>\r\n                  </Row>\r\n                  <Row>\r\n                    <Text style={[BaseFontStyles.body1]}>\r\n                      {userInfo.email || t('AccountInfoScreen.empty')}\r\n                    </Text>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </Grid>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst changeAvatarAction = () => {\r\n  alert('change avatar!');\r\n};\r\nconst mapStateToProps = state => ({\r\n  userInfo: state.auth.userInfo,\r\n  avatar: { url: state.auth.userInfo.avatar },\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n)(AccountInfoScreen);\r\n"]},"metadata":{},"sourceType":"script"}