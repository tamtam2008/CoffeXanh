{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ChooseLanguageScreen;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _BaseStyles = require(\"../../../constants/BaseStyles\");\n\nvar _CustomIcon = _interopRequireDefault(require(\"../../../components/CustomIcon\"));\n\nvar _Icon = require(\"../../../constants/Icon\");\n\nvar _Layout = _interopRequireDefault(require(\"../../../constants/Layout\"));\n\nvar _i18n = _interopRequireDefault(require(\"../../../languages/i18n.config\"));\n\nvar _useRootNavigation = _interopRequireDefault(require(\"../../../utils/useRootNavigation\"));\n\nvar _Container = _interopRequireDefault(require(\"../../../components/layout/Container\"));\n\nvar _Languages = _interopRequireDefault(require(\"../../../config/Languages.config\"));\n\nvar _reactNativeRestart = _interopRequireDefault(require(\"react-native-restart\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\settings\\\\ChooseLanguage.screen.js\",\n    _this = this;\n\nfunction ChooseLanguageScreen() {\n  var _useState = (0, _react.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react.default.createElement(_Container.default, {\n    isRequesting: loading,\n    contentStyle: _BaseStyles.BaseStyles.baseContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, _Languages.default.map(function (i, k) {\n    return itemRender(i, _i18n.default.language, k, t, function (l) {\n      setLoading(true);\n\n      _asyncStorage.default.setItem('language', l, function () {\n        _reactNativeRestart.default.Restart();\n      });\n    });\n  }));\n}\n\nvar itemRender = function itemRender(item, code, key, t, _onPress) {\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    onPress: function onPress() {\n      _onPress(item.code);\n    },\n    style: [_BaseStyles.BaseStyles.baseContainer, _BaseStyles.BaseStyles.flexRow, styles.item],\n    key: key,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.flexRow, styles.itemDetail],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeElements.Image, {\n    source: {\n      uri: item.flag\n    },\n    style: styles.flag,\n    PlaceholderContent: _react.default.createElement(_reactNative.ActivityIndicator, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 31\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1, _BaseStyles.BaseStyles.ml_16, styles.selfCenter],\n    lineBreakMode: \"tail\",\n    numberOfLines: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, t(item.name))), item.code === code && _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.ml_16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_CustomIcon.default, {\n    name: \"check\",\n    type: _Icon.IconType.FONTAWESOME,\n    size: 21,\n    focused: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  })));\n};\n\nvar styles = _reactNative.StyleSheet.create({\n  flag: {\n    width: 30,\n    height: 20\n  },\n  item: {\n    marginBottom: 10\n  },\n  itemDetail: {\n    width: _Layout.default.window.width - 64 - 24 - 32,\n    marginRight: 16\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/settings/ChooseLanguage.screen.js"],"names":["ChooseLanguageScreen","loading","setLoading","t","BaseStyles","baseContent","LanguagesConfig","map","i","k","itemRender","i18n","language","l","AsyncStorage","setItem","RNRestart","Restart","item","code","key","onPress","baseContainer","flexRow","styles","itemDetail","uri","flag","BaseFontStyles","body1","ml_16","selfCenter","name","IconType","FONTAWESOME","StyleSheet","create","width","height","marginBottom","Layout","window","marginRight"],"mappings":"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","sourcesContent":["import AsyncStorage from '@react-native-community/async-storage';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n} from 'react-native';\r\nimport { Image } from 'react-native-elements';\r\nimport { BaseFontStyles, BaseStyles } from '../../../constants/BaseStyles';\r\nimport CustomIcon from '../../../components/CustomIcon';\r\nimport { IconType } from '../../../constants/Icon';\r\nimport Layout from '../../../constants/Layout';\r\nimport i18n from '../../../languages/i18n.config';\r\nimport useRootNavigation from '../../../utils/useRootNavigation';\r\nimport Container from '../../../components/layout/Container';\r\nimport LanguagesConfig from '../../../config/Languages.config';\r\nimport RNRestart from 'react-native-restart';\r\n\r\n// const navigation = useRootNavigation();\r\nexport default function ChooseLanguageScreen() {\r\n  const [loading, setLoading] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Container isRequesting={loading} contentStyle={BaseStyles.baseContent}>\r\n      {LanguagesConfig.map((i, k) =>\r\n        itemRender(i, i18n.language, k, t, l => {\r\n          setLoading(true);\r\n          AsyncStorage.setItem('language', l, () => {\r\n            // Immediately reload the React Native Bundle\r\n            RNRestart.Restart();\r\n          });\r\n        }),\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst itemRender = (item, code, key, t, onPress) => {\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={() => {\r\n        onPress(item.code);\r\n      }}\r\n      style={[BaseStyles.baseContainer, BaseStyles.flexRow, styles.item]}\r\n      key={key}>\r\n      <View style={[BaseStyles.flexRow, styles.itemDetail]}>\r\n        <Image\r\n          source={{\r\n            uri: item.flag,\r\n          }}\r\n          style={styles.flag}\r\n          PlaceholderContent={<ActivityIndicator />}\r\n        />\r\n        <Text\r\n          style={[BaseFontStyles.body1, BaseStyles.ml_16, styles.selfCenter]}\r\n          lineBreakMode=\"tail\"\r\n          numberOfLines={1}>\r\n          {t(item.name)}\r\n        </Text>\r\n      </View>\r\n      {item.code === code && (\r\n        <View style={[BaseStyles.ml_16]}>\r\n          <CustomIcon\r\n            name=\"check\"\r\n            type={IconType.FONTAWESOME}\r\n            size={21}\r\n            focused\r\n          />\r\n        </View>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  flag: { width: 30, height: 20 },\r\n  item: {\r\n    marginBottom: 10,\r\n  },\r\n  itemDetail: {\r\n    width: Layout.window.width - 64 - 24 - 32,\r\n    marginRight: 16,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}