{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.callGetProducts = void 0;\n\nvar _ProductService = _interopRequireDefault(require(\"../../../../../../services/ProductService\"));\n\nvar _drinkTab = _interopRequireDefault(require(\"./reducer/drinkTab.action\"));\n\nvar _TopNotifyUtils = _interopRequireDefault(require(\"../../../../../../utils/TopNotifyUtils\"));\n\nvar callGetProducts = function callGetProducts(dispatch) {\n  dispatch({\n    type: _drinkTab.default.GET_DATA\n  });\n\n  _ProductService.default.getProducts().subscribe(function (data) {\n    var status = data.response.status;\n\n    if (status === 200) {\n      dispatch({\n        type: _drinkTab.default.GET_DATA_SUCCESS,\n        payload: data.response\n      });\n    } else {\n      var failMsg = status === 500 || status === 0 ? \"notify.code.\" + status : 'notify.failMsg';\n      dispatch({\n        type: _drinkTab.default.GET_DATA_FAIL,\n        payload: failMsg\n      });\n\n      _TopNotifyUtils.default.fail(failMsg);\n    }\n  });\n};\n\nexports.callGetProducts = callGetProducts;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/menu/components/tabs/DrinkTab/drinkTab.controller.js"],"names":["callGetProducts","dispatch","type","drinkTabAction","GET_DATA","ProductService","getProducts","subscribe","data","status","response","GET_DATA_SUCCESS","payload","failMsg","GET_DATA_FAIL","TopNotifyUtils","fail"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ,EAAI;AACzCA,EAAAA,QAAQ,CAAC;AACPC,IAAAA,IAAI,EAAEC,kBAAeC;AADd,GAAD,CAAR;;AAGAC,0BAAeC,WAAf,GAA6BC,SAA7B,CAAuC,UAAAC,IAAI,EAAI;AAAA,QACrCC,MADqC,GAC1BD,IAAI,CAACE,QADqB,CACrCD,MADqC;;AAE7C,QAAIA,MAAM,KAAK,GAAf,EAAoB;AAClBR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEC,kBAAeQ,gBADd;AAEPC,QAAAA,OAAO,EAAEJ,IAAI,CAACE;AAFP,OAAD,CAAR;AAID,KALD,MAKO;AACL,UAAMG,OAAO,GACXJ,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,CAA7B,oBACmBA,MADnB,GAEI,gBAHN;AAIAR,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEC,kBAAeW,aADd;AAEPF,QAAAA,OAAO,EAAEC;AAFF,OAAD,CAAR;;AAIAE,8BAAeC,IAAf,CAAoBH,OAApB;AACD;AACF,GAlBD;AAmBD,CAvBM","sourcesContent":["import ProductService from '../../../../../../services/ProductService';\r\nimport drinkTabAction from './reducer/drinkTab.action';\r\nimport TopNotifyUtils from '../../../../../../utils/TopNotifyUtils';\r\n\r\nexport const callGetProducts = dispatch => {\r\n  dispatch({\r\n    type: drinkTabAction.GET_DATA,\r\n  });\r\n  ProductService.getProducts().subscribe(data => {\r\n    const { status } = data.response;\r\n    if (status === 200) {\r\n      dispatch({\r\n        type: drinkTabAction.GET_DATA_SUCCESS,\r\n        payload: data.response,\r\n      });\r\n    } else {\r\n      const failMsg =\r\n        status === 500 || status === 0\r\n          ? `notify.code.${status}`\r\n          : 'notify.failMsg';\r\n      dispatch({\r\n        type: drinkTabAction.GET_DATA_FAIL,\r\n        payload: failMsg,\r\n      });\r\n      TopNotifyUtils.fail(failMsg);\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"script"}