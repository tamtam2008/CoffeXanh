{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _materialTopTabs = require(\"@react-navigation/material-top-tabs\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativePose = _interopRequireDefault(require(\"react-native-pose\"));\n\nvar _XIconButton = _interopRequireDefault(require(\"../../../../../components/XIconButton\"));\n\nvar _BaseStyles = require(\"../../../../../constants/BaseStyles\");\n\nvar _Colors = _interopRequireDefault(require(\"../../../../../constants/Colors\"));\n\nvar _Icon = require(\"../../../../../constants/Icon\");\n\nvar _Layout = _interopRequireDefault(require(\"../../../../../constants/Layout\"));\n\nvar _ProductTabs = _interopRequireDefault(require(\"./ProductTabs.config\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\menu\\\\components\\\\tabs\\\\ProductTabs.js\";\n\nvar ProductTab = (0, _materialTopTabs.createMaterialTopTabNavigator)();\nvar tabBarOptions = {\n  labelStyle: _BaseStyles.BaseFontStyles.menuOrBody2,\n  activeTintColor: _Colors.default.tintColor,\n  inactiveTintColor: _Colors.default.gray,\n  indicatorStyle: {\n    backgroundColor: _Colors.default.tintColor\n  }\n};\n\nvar ProductTabs = function ProductTabs(_ref) {\n  var openSearch = _ref.openSearch;\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  return _react.default.createElement(ProductTab.Navigator, {\n    lazy: true,\n    tabBarOptions: tabBarOptions,\n    tabBar: function tabBar(p) {\n      return _react.default.createElement(CustomTabBar, (0, _extends2.default)({}, p, {\n        openSearch: openSearch,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 22\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, _ProductTabs.default.map(function (Tab) {\n    return _react.default.createElement(ProductTab.Screen, {\n      name: Tab.name,\n      component: Tab.component,\n      options: {\n        title: t(Tab.title)\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nvar tabWidth = (_Layout.default.window.width - (18 + 6 + 10)) / _ProductTabs.default.length;\nvar spotLightData = {};\n\nfor (var i = 0; i < _ProductTabs.default.length; i++) {\n  spotLightData[\"route\" + i] = {\n    x: tabWidth * i\n  };\n}\n\nvar SpotLight = _reactNativePose.default.View(spotLightData);\n\nfunction CustomTabBar(props) {\n  var _this2 = this;\n\n  var state = props.state,\n      navigation = props.navigation,\n      descriptors = props.descriptors;\n  var activeRouteIndex = state.index;\n  return _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.boxWithShadow, _BaseStyles.BaseStyles.flexRow, styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [styles.headerContainer],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: _reactNative.StyleSheet.absoluteFillObject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(SpotLight, {\n    style: styles.spotLight,\n    pose: \"route\" + activeRouteIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), state.routes.map(function (route, index) {\n    var options = descriptors[route.key].options;\n    var label = options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    var isFocused = state.index === index;\n\n    var onPress = function onPress() {\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (!isFocused && !event.defaultPrevented) {\n        navigation.navigate(route.name);\n      }\n    };\n\n    var onLongPress = function onLongPress() {\n      navigation.emit({\n        type: 'tabLongPress',\n        target: route.key\n      });\n    };\n\n    return _react.default.createElement(_reactNative.TouchableOpacity, {\n      key: index,\n      accessibilityRole: \"button\",\n      accessibilityStates: isFocused ? ['selected'] : [],\n      accessibilityLabel: options.tabBarAccessibilityLabel,\n      testID: options.tabBarTestID,\n      onPress: onPress,\n      onLongPress: onLongPress,\n      style: [styles.tabItem],\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_reactNative.Text, {\n      style: [_BaseStyles.BaseFontStyles.menuOrBody2, {\n        color: isFocused ? _Colors.default.tintColor : _Colors.default.gray\n      }, styles.title],\n      lineBreakMode: 'tail',\n      numberOfLines: 1,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, label));\n  })), _react.default.createElement(_reactNative.View, {\n    style: [styles.searchItemContainer],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_XIconButton.default, {\n    color: _Colors.default.gray,\n    icon: {\n      name: 'search',\n      type: _Icon.IconType.FONTAWESOME,\n      size: 18\n    },\n    onPress: props.openSearch,\n    style: _reactNative.StyleSheet.flatten({\n      padding: 6,\n      paddingRight: 10\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar _default = ProductTabs;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    marginBottom: 5\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    width: _Layout.default.window.width - 36,\n    justifyContent: 'space-around'\n  },\n  tabItem: {\n    paddingVertical: 10,\n    paddingHorizontal: 5\n  },\n  title: {\n    width: tabWidth,\n    textAlign: 'center'\n  },\n  searchItemContainer: {\n    width: 36,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  spotLight: {\n    width: tabWidth,\n    height: '100%',\n    borderBottomWidth: 2,\n    borderBottomColor: _Colors.default.tintColor\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/menu/components/tabs/ProductTabs.js"],"names":["ProductTab","tabBarOptions","labelStyle","BaseFontStyles","menuOrBody2","activeTintColor","Colors","tintColor","inactiveTintColor","gray","indicatorStyle","backgroundColor","ProductTabs","openSearch","t","p","ProductTabsConfig","map","Tab","name","component","title","tabWidth","Layout","window","width","length","spotLightData","i","x","SpotLight","posed","View","CustomTabBar","props","state","navigation","descriptors","activeRouteIndex","index","BaseStyles","boxWithShadow","flexRow","styles","container","headerContainer","StyleSheet","absoluteFillObject","spotLight","routes","route","options","key","label","tabBarLabel","undefined","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","onLongPress","tabBarAccessibilityLabel","tabBarTestID","tabItem","color","searchItemContainer","IconType","FONTAWESOME","size","flatten","padding","paddingRight","create","marginBottom","flexDirection","justifyContent","paddingVertical","paddingHorizontal","textAlign","alignItems","height","borderBottomWidth","borderBottomColor"],"mappings":"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","sourcesContent":["import { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\r\nimport React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport posed from 'react-native-pose';\r\nimport XIconButton from '../../../../../components/XIconButton';\r\nimport {\r\n  BaseFontStyles,\r\n  BaseStyles,\r\n} from '../../../../../constants/BaseStyles';\r\nimport Colors from '../../../../../constants/Colors';\r\nimport { IconType } from '../../../../../constants/Icon';\r\nimport Layout from '../../../../../constants/Layout';\r\nimport ProductTabsConfig from './ProductTabs.config';\r\n\r\nconst ProductTab = createMaterialTopTabNavigator();\r\n\r\nconst tabBarOptions = {\r\n  labelStyle: BaseFontStyles.menuOrBody2,\r\n  activeTintColor: Colors.tintColor,\r\n  inactiveTintColor: Colors.gray,\r\n  indicatorStyle: { backgroundColor: Colors.tintColor },\r\n};\r\n\r\nconst ProductTabs = ({ openSearch }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <ProductTab.Navigator\r\n      lazy={true}\r\n      tabBarOptions={tabBarOptions}\r\n      tabBar={(p) => <CustomTabBar {...p} openSearch={openSearch} />}>\r\n      {ProductTabsConfig.map((Tab) => (\r\n        <ProductTab.Screen\r\n          name={Tab.name}\r\n          component={Tab.component}\r\n          options={{ title: t(Tab.title) }}\r\n        />\r\n      ))}\r\n    </ProductTab.Navigator>\r\n  );\r\n};\r\n\r\nconst tabWidth =\r\n  (Layout.window.width - (18 + 6 + 10)) / ProductTabsConfig.length;\r\nconst spotLightData = {};\r\nfor (let i = 0; i < ProductTabsConfig.length; i++) {\r\n  spotLightData[`route${i}`] = { x: tabWidth * i };\r\n}\r\nconst SpotLight = posed.View(spotLightData);\r\n\r\nfunction CustomTabBar(props) {\r\n  const { state, navigation, descriptors } = props;\r\n  const { index: activeRouteIndex } = state;\r\n  return (\r\n    <View\r\n      style={[BaseStyles.boxWithShadow, BaseStyles.flexRow, styles.container]}>\r\n      <View style={[styles.headerContainer]}>\r\n        <View style={StyleSheet.absoluteFillObject}>\r\n          <SpotLight\r\n            style={styles.spotLight}\r\n            pose={`route${activeRouteIndex}`}\r\n          />\r\n        </View>\r\n        {state.routes.map((route, index) => {\r\n          const { options } = descriptors[route.key];\r\n          const label =\r\n            options.tabBarLabel !== undefined\r\n              ? options.tabBarLabel\r\n              : options.title !== undefined\r\n              ? options.title\r\n              : route.name;\r\n\r\n          const isFocused = state.index === index;\r\n\r\n          const onPress = () => {\r\n            const event = navigation.emit({\r\n              type: 'tabPress',\r\n              target: route.key,\r\n              canPreventDefault: true,\r\n            });\r\n\r\n            if (!isFocused && !event.defaultPrevented) {\r\n              navigation.navigate(route.name);\r\n            }\r\n          };\r\n\r\n          const onLongPress = () => {\r\n            navigation.emit({\r\n              type: 'tabLongPress',\r\n              target: route.key,\r\n            });\r\n          };\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={index}\r\n              accessibilityRole=\"button\"\r\n              accessibilityStates={isFocused ? ['selected'] : []}\r\n              accessibilityLabel={options.tabBarAccessibilityLabel}\r\n              testID={options.tabBarTestID}\r\n              onPress={onPress}\r\n              onLongPress={onLongPress}\r\n              style={[styles.tabItem]}>\r\n              <Text\r\n                style={[\r\n                  BaseFontStyles.menuOrBody2,\r\n                  { color: isFocused ? Colors.tintColor : Colors.gray },\r\n                  styles.title,\r\n                ]}\r\n                lineBreakMode={'tail'}\r\n                numberOfLines={1}>\r\n                {label}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n      <View style={[styles.searchItemContainer]}>\r\n        <XIconButton\r\n          color={Colors.gray}\r\n          icon={{ name: 'search', type: IconType.FONTAWESOME, size: 18 }}\r\n          onPress={props.openSearch}\r\n          style={StyleSheet.flatten({ padding: 6, paddingRight: 10 })}\r\n        />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nexport default ProductTabs;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: '#fff',\r\n    marginBottom: 5,\r\n  },\r\n  headerContainer: {\r\n    flexDirection: 'row',\r\n    width: Layout.window.width - 36,\r\n    justifyContent: 'space-around',\r\n  },\r\n  tabItem: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 5,\r\n  },\r\n  title: {\r\n    width: tabWidth,\r\n    textAlign: 'center',\r\n  },\r\n  searchItemContainer: {\r\n    width: 36,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  spotLight: {\r\n    width: tabWidth,\r\n    height: '100%',\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: Colors.tintColor,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}