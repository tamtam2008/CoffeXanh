{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseStyles = require(\"../constants/BaseStyles\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\components\\\\XButton2.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar XButton2 = function XButton2(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      style = _ref.style,\n      buttonColor = _ref.buttonColor;\n\n  var customStyle = _objectSpread({\n    width: '100%'\n  }, style);\n\n  var customColor = _reactNative.StyleSheet.create({\n    actived: {\n      backgroundColor: buttonColor\n    }\n  });\n\n  return _react.default.createElement(_reactNative.TouchableHighlight, {\n    style: [_BaseStyles.BaseStyles.boxWithShadow, styles.container, disabled ? styles.disabed : buttonColor ? customColor.actived : styles.actived, customStyle],\n    activeOpacity: 0.6,\n    underlayColor: '#baddbf',\n    onPress: onPress ? onPress : function () {},\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.container2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.menuOrBody2, styles.button, disabled ? styles.textDisabled : styles.textActivied],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, title)));\n};\n\nvar _default = XButton2;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 5,\n    height: 36,\n    borderWidth: 1\n  },\n  container2: {\n    height: 36,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingLeft: 16,\n    paddingRight: 16,\n    paddingBottom: 1,\n    borderRadius: 5\n  },\n  button: {\n    textAlign: 'center'\n  },\n  textActivied: {\n    color: _Colors.default.tintColor\n  },\n  actived: {\n    backgroundColor: '#fff',\n    borderColor: _Colors.default.tintColor\n  },\n  textDisabled: {\n    color: _Colors.default.gray\n  },\n  disabed: {\n    backgroundColor: _Colors.default.lightGray,\n    borderColor: _Colors.default.gray\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/components/XButton2.js"],"names":["XButton2","title","onPress","disabled","style","buttonColor","customStyle","width","customColor","StyleSheet","create","actived","backgroundColor","BaseStyles","boxWithShadow","styles","container","disabed","container2","BaseFontStyles","menuOrBody2","button","textDisabled","textActivied","borderRadius","height","borderWidth","flexDirection","justifyContent","alignItems","paddingLeft","paddingRight","paddingBottom","textAlign","color","Colors","tintColor","borderColor","gray","lightGray"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAA8D;AAAA,MAA3DC,KAA2D,QAA3DA,KAA2D;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,2BAA3CC,QAA2C;AAAA,MAA3CA,QAA2C,8BAAhC,KAAgC;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAC7E,MAAMC,WAAW;AAAKC,IAAAA,KAAK,EAAE;AAAZ,KAAuBH,KAAvB,CAAjB;;AACA,MAAMI,WAAW,GAAGC,wBAAWC,MAAX,CAAkB;AACpCC,IAAAA,OAAO,EAAE;AACPC,MAAAA,eAAe,EAAEP;AADV;AAD2B,GAAlB,CAApB;;AAKA,SACE,6BAAC,+BAAD;AACE,IAAA,KAAK,EAAE,CACLQ,uBAAWC,aADN,EAELC,MAAM,CAACC,SAFF,EAGLb,QAAQ,GACJY,MAAM,CAACE,OADH,GAEJZ,WAAW,GACXG,WAAW,CAACG,OADD,GAEXI,MAAM,CAACJ,OAPN,EAQLL,WARK,CADT;AAWE,IAAA,aAAa,EAAE,GAXjB;AAYE,IAAA,aAAa,EAAE,SAZjB;AAaE,IAAA,OAAO,EAAEJ,OAAO,GAAGA,OAAH,GAAa,YAAM,CAAE,CAbvC;AAcE,IAAA,QAAQ,EAAEC,QAdZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAeE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLC,2BAAeC,WADV,EAELL,MAAM,CAACM,MAFF,EAGLlB,QAAQ,GAAGY,MAAM,CAACO,YAAV,GAAyBP,MAAM,CAACQ,YAHnC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGtB,KANH,CADF,CAfF,CADF;AA4BD,CAnCD;;eAqCeD,Q;;;AAEf,IAAMe,MAAM,GAAGN,wBAAWC,MAAX,CAAkB;AAC/BM,EAAAA,SAAS,EAAE;AACTQ,IAAAA,YAAY,EAAE,CADL;AAETC,IAAAA,MAAM,EAAE,EAFC;AAGTC,IAAAA,WAAW,EAAE;AAHJ,GADoB;AAM/BR,EAAAA,UAAU,EAAE;AACVO,IAAAA,MAAM,EAAE,EADE;AAEVE,IAAAA,aAAa,EAAE,QAFL;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,WAAW,EAAE,EALH;AAMVC,IAAAA,YAAY,EAAE,EANJ;AAOVC,IAAAA,aAAa,EAAE,CAPL;AAQVR,IAAAA,YAAY,EAAE;AARJ,GANmB;AAgB/BH,EAAAA,MAAM,EAAE;AACNY,IAAAA,SAAS,EAAE;AADL,GAhBuB;AAmB/BV,EAAAA,YAAY,EAAE;AACZW,IAAAA,KAAK,EAAEC,gBAAOC;AADF,GAnBiB;AAsB/BzB,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE,MADV;AAEPyB,IAAAA,WAAW,EAAEF,gBAAOC;AAFb,GAtBsB;AA0B/Bd,EAAAA,YAAY,EAAE;AACZY,IAAAA,KAAK,EAAEC,gBAAOG;AADF,GA1BiB;AA6B/BrB,EAAAA,OAAO,EAAE;AACPL,IAAAA,eAAe,EAAEuB,gBAAOI,SADjB;AAEPF,IAAAA,WAAW,EAAEF,gBAAOG;AAFb;AA7BsB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, TouchableHighlight, View } from 'react-native';\r\nimport { BaseFontStyles, BaseStyles } from '../constants/BaseStyles';\r\nimport Colors from '../constants/Colors';\r\n\r\nconst XButton2 = ({ title, onPress, disabled = false, style, buttonColor }) => {\r\n  const customStyle = { width: '100%', ...style };\r\n  const customColor = StyleSheet.create({\r\n    actived: {\r\n      backgroundColor: buttonColor,\r\n    },\r\n  });\r\n  return (\r\n    <TouchableHighlight\r\n      style={[\r\n        BaseStyles.boxWithShadow,\r\n        styles.container,\r\n        disabled\r\n          ? styles.disabed\r\n          : buttonColor\r\n          ? customColor.actived\r\n          : styles.actived,\r\n        customStyle,\r\n      ]}\r\n      activeOpacity={0.6}\r\n      underlayColor={'#baddbf'}\r\n      onPress={onPress ? onPress : () => {}}\r\n      disabled={disabled}>\r\n      <View style={styles.container2}>\r\n        <Text\r\n          style={[\r\n            BaseFontStyles.menuOrBody2,\r\n            styles.button,\r\n            disabled ? styles.textDisabled : styles.textActivied,\r\n          ]}>\r\n          {title}\r\n        </Text>\r\n      </View>\r\n    </TouchableHighlight>\r\n  );\r\n};\r\n\r\nexport default XButton2;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 5,\r\n    height: 36,\r\n    borderWidth: 1,\r\n  },\r\n  container2: {\r\n    height: 36,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingLeft: 16,\r\n    paddingRight: 16,\r\n    paddingBottom: 1,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    textAlign: 'center',\r\n  },\r\n  textActivied: {\r\n    color: Colors.tintColor,\r\n  },\r\n  actived: {\r\n    backgroundColor: '#fff',\r\n    borderColor: Colors.tintColor,\r\n  },\r\n  textDisabled: {\r\n    color: Colors.gray,\r\n  },\r\n  disabed: {\r\n    backgroundColor: Colors.lightGray,\r\n    borderColor: Colors.gray,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}