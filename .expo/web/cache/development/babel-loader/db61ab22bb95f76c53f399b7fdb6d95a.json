{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = CustomIcon;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"react-native-vector-icons/FontAwesome5\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"react-native-vector-icons/Ionicons\"));\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialCommunityIcons\"));\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _Octicons = _interopRequireDefault(require(\"react-native-vector-icons/Octicons\"));\n\nvar _Feather = _interopRequireDefault(require(\"react-native-vector-icons/Feather\"));\n\nvar _EvilIcons = _interopRequireDefault(require(\"react-native-vector-icons/EvilIcons\"));\n\nvar _AntDesign = _interopRequireDefault(require(\"react-native-vector-icons/AntDesign\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _Icon = require(\"../constants/Icon\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\components\\\\CustomIcon.js\";\n\nfunction CustomIcon(_ref) {\n  var name = _ref.name,\n      type = _ref.type,\n      size = _ref.size,\n      focused = _ref.focused,\n      other = _ref.other,\n      _ref$custom = _ref.custom,\n      custom = _ref$custom === void 0 ? {\n    style: {}\n  } : _ref$custom;\n  var ImageStyle = {\n    width: size,\n    height: size\n  };\n  var Icon = getIconComponent(type);\n  return type !== _Icon.IconType.IMAGE ? React.createElement(Icon, (0, _extends2.default)({\n    name: type === _Icon.IconType.IONICON ? _reactNative.Platform.OS === 'ios' ? \"ios-\" + name : \"md-\" + name : name,\n    size: size,\n    type: type,\n    color: focused ? custom.color ? custom.color : _Colors.default.tabIconSelected : _Colors.default.tabIconDefault\n  }, other, {\n    style: custom.style instanceof Array ? custom.style : [custom.style],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  })) : focused ? React.createElement(_reactNative.Image, {\n    source: name.active,\n    style: ImageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }) : React.createElement(_reactNative.Image, {\n    source: name.inactive,\n    style: ImageStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  });\n}\n\nvar getIconComponent = function getIconComponent(type) {\n  switch (type) {\n    case _Icon.IconType.IONICON:\n      return _Ionicons.default;\n\n    case _Icon.IconType.FONTAWESOME:\n      return _FontAwesome.default;\n\n    case _Icon.IconType.ANTDESIGN:\n      return _AntDesign.default;\n\n    case _Icon.IconType.EVILICON:\n      return _EvilIcons.default;\n\n    case _Icon.IconType.FEATHER:\n      return _Feather.default;\n\n    case _Icon.IconType.MATERIAL:\n      return _MaterialIcons.default;\n\n    case _Icon.IconType.MATERIAL_COMMUNITY:\n      return _MaterialCommunityIcons.default;\n\n    case _Icon.IconType.OCTICONS:\n      return _Octicons.default;\n\n    default:\n      return _FontAwesome.default;\n  }\n};","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/components/CustomIcon.js"],"names":["CustomIcon","name","type","size","focused","other","custom","style","ImageStyle","width","height","Icon","getIconComponent","IconType","IMAGE","IONICON","Platform","OS","color","Colors","tabIconSelected","tabIconDefault","Array","active","inactive","Ionicons","FONTAWESOME","FontAwesome5","ANTDESIGN","AntDesign","EVILICON","EvilIcons","FEATHER","Feather","MATERIAL","MaterialIcons","MATERIAL_COMMUNITY","MaterialCommunityIcons","OCTICONS","Octicons"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;AAEe,SAASA,UAAT,OAOZ;AAAA,MANDC,IAMC,QANDA,IAMC;AAAA,MALDC,IAKC,QALDA,IAKC;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,yBADDC,MACC;AAAA,MADDA,MACC,4BADQ;AAAEC,IAAAA,KAAK,EAAE;AAAT,GACR;AACD,MAAMC,UAAU,GAAG;AACjBC,IAAAA,KAAK,EAAEN,IADU;AAEjBO,IAAAA,MAAM,EAAEP;AAFS,GAAnB;AAIA,MAAMQ,IAAI,GAAGC,gBAAgB,CAACV,IAAD,CAA7B;AACA,SAAOA,IAAI,KAAKW,eAASC,KAAlB,GACL,oBAAC,IAAD;AACE,IAAA,IAAI,EACFZ,IAAI,KAAKW,eAASE,OAAlB,GACIC,sBAASC,EAAT,KAAgB,KAAhB,YACShB,IADT,WAEQA,IAHZ,GAIIA,IANR;AAQE,IAAA,IAAI,EAAEE,IARR;AASE,IAAA,IAAI,EAAED,IATR;AAUE,IAAA,KAAK,EACHE,OAAO,GACHE,MAAM,CAACY,KAAP,GACEZ,MAAM,CAACY,KADT,GAEEC,gBAAOC,eAHN,GAIHD,gBAAOE;AAff,KAiBMhB,KAjBN;AAkBE,IAAA,KAAK,EAAEC,MAAM,CAACC,KAAP,YAAwBe,KAAxB,GAAgChB,MAAM,CAACC,KAAvC,GAA+C,CAACD,MAAM,CAACC,KAAR,CAlBxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADK,GAqBHH,OAAO,GACT,oBAAC,kBAAD;AAAO,IAAA,MAAM,EAAEH,IAAI,CAACsB,MAApB;AAA4B,IAAA,KAAK,EAAEf,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADS,GAGT,oBAAC,kBAAD;AAAO,IAAA,MAAM,EAAEP,IAAI,CAACuB,QAApB;AAA8B,IAAA,KAAK,EAAEhB,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF;AA0BD;;AAED,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAV,IAAI,EAAI;AAC/B,UAAQA,IAAR;AACE,SAAKW,eAASE,OAAd;AACE,aAAOU,iBAAP;;AACF,SAAKZ,eAASa,WAAd;AACE,aAAOC,oBAAP;;AACF,SAAKd,eAASe,SAAd;AACE,aAAOC,kBAAP;;AACF,SAAKhB,eAASiB,QAAd;AACE,aAAOC,kBAAP;;AACF,SAAKlB,eAASmB,OAAd;AACE,aAAOC,gBAAP;;AACF,SAAKpB,eAASqB,QAAd;AACE,aAAOC,sBAAP;;AACF,SAAKtB,eAASuB,kBAAd;AACE,aAAOC,+BAAP;;AACF,SAAKxB,eAASyB,QAAd;AACE,aAAOC,iBAAP;;AACF;AACE,aAAOZ,oBAAP;AAlBJ;AAoBD,CArBD","sourcesContent":["import * as React from 'react';\r\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\r\nimport Octicons from 'react-native-vector-icons/Octicons';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport EvilIcons from 'react-native-vector-icons/EvilIcons';\r\nimport AntDesign from 'react-native-vector-icons/AntDesign';\r\nimport { Platform } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { Image } from 'react-native';\r\nimport { IconType } from '../constants/Icon';\r\n\r\nexport default function CustomIcon({\r\n  name,\r\n  type,\r\n  size,\r\n  focused,\r\n  other,\r\n  custom = { style: {} },\r\n}) {\r\n  const ImageStyle = {\r\n    width: size,\r\n    height: size,\r\n  };\r\n  const Icon = getIconComponent(type);\r\n  return type !== IconType.IMAGE ? (\r\n    <Icon\r\n      name={\r\n        type === IconType.IONICON\r\n          ? Platform.OS === 'ios'\r\n            ? `ios-${name}`\r\n            : `md-${name}`\r\n          : name\r\n      }\r\n      size={size}\r\n      type={type}\r\n      color={\r\n        focused\r\n          ? custom.color\r\n            ? custom.color\r\n            : Colors.tabIconSelected\r\n          : Colors.tabIconDefault\r\n      }\r\n      {...other}\r\n      style={custom.style instanceof Array ? custom.style : [custom.style]}\r\n    />\r\n  ) : focused ? (\r\n    <Image source={name.active} style={ImageStyle} />\r\n  ) : (\r\n    <Image source={name.inactive} style={ImageStyle} />\r\n  );\r\n}\r\n\r\nconst getIconComponent = type => {\r\n  switch (type) {\r\n    case IconType.IONICON:\r\n      return Ionicons;\r\n    case IconType.FONTAWESOME:\r\n      return FontAwesome5;\r\n    case IconType.ANTDESIGN:\r\n      return AntDesign;\r\n    case IconType.EVILICON:\r\n      return EvilIcons;\r\n    case IconType.FEATHER:\r\n      return Feather;\r\n    case IconType.MATERIAL:\r\n      return MaterialIcons;\r\n    case IconType.MATERIAL_COMMUNITY:\r\n      return MaterialCommunityIcons;\r\n    case IconType.OCTICONS:\r\n      return Octicons;\r\n    default:\r\n      return FontAwesome5;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}