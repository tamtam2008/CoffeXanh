{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _ProductService = _interopRequireDefault(require(\"../../../../../../services/ProductService\"));\n\nvar _reactTimerMixin = _interopRequireDefault(require(\"react-timer-mixin\"));\n\nvar _SearchProduct = _interopRequireDefault(require(\"./SearchProduct.action\"));\n\nvar _TopNotifyUtils = _interopRequireDefault(require(\"../../../../../../utils/TopNotifyUtils\"));\n\nvar IDs = {\n  subscription: null,\n  timer: null\n};\nvar _default = {\n  search: function search(term, dispatch) {\n    dispatch({\n      type: _SearchProduct.default.GET_DATA\n    });\n\n    if (IDs.timer) {\n      console.log('Cancel timer');\n\n      _reactTimerMixin.default.clearTimeout(IDs.timer);\n\n      if (IDs.subscription) {\n        console.log('Cancel subscription');\n        IDs.subscription.unsubscribe();\n      }\n    }\n\n    IDs.timer = _reactTimerMixin.default.setTimeout(function () {\n      console.log('Call request');\n      dispatch({\n        type: _SearchProduct.default.GET_DATA\n      });\n      IDs.subscription = _ProductService.default.searchProduct(term).subscribe(function (data) {\n        if (data.response.status === 200) {\n          dispatch({\n            type: _SearchProduct.default.GET_DATA_SUCCESS,\n            payload: data.response\n          });\n        } else {\n          _TopNotifyUtils.default.fail('notify.failMsg');\n\n          dispatch({\n            type: _SearchProduct.default.GET_DATA_FAIL,\n            payload: 'notify.failMsg'\n          });\n        }\n      }, function (e) {\n        dispatch({\n          type: _SearchProduct.default.GET_DATA_FAIL,\n          payload: e.status === 500 ? 'notify.code.500' : 'notify.failMsg'\n        });\n\n        _TopNotifyUtils.default.fail(e.status === 500 ? 'notify.code.500' : 'notify.failMsg');\n      });\n    }, 200);\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/menu/components/productModal/searchProduct/SearchProduct.controller.js"],"names":["IDs","subscription","timer","search","term","dispatch","type","Actions","GET_DATA","console","log","TimerMixin","clearTimeout","unsubscribe","setTimeout","ProductService","searchProduct","subscribe","data","response","status","GET_DATA_SUCCESS","payload","TopNotifyUtils","fail","GET_DATA_FAIL","e"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,GAAG,GAAG;AACVC,EAAAA,YAAY,EAAE,IADJ;AAEVC,EAAAA,KAAK,EAAE;AAFG,CAAZ;eAIe;AACbC,EAAAA,MAAM,EAAE,gBAACC,IAAD,EAAOC,QAAP,EAAoB;AAC1BA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEC,uBAAQC;AAAhB,KAAD,CAAR;;AACA,QAAIR,GAAG,CAACE,KAAR,EAAe;AACbO,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;;AACAC,+BAAWC,YAAX,CAAwBZ,GAAG,CAACE,KAA5B;;AACA,UAAIF,GAAG,CAACC,YAAR,EAAsB;AACpBQ,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAV,QAAAA,GAAG,CAACC,YAAJ,CAAiBY,WAAjB;AACD;AACF;;AACDb,IAAAA,GAAG,CAACE,KAAJ,GAAYS,yBAAWG,UAAX,CAAsB,YAAM;AACtCL,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAL,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAEC,uBAAQC;AAAhB,OAAD,CAAR;AACAR,MAAAA,GAAG,CAACC,YAAJ,GAAmBc,wBAAeC,aAAf,CAA6BZ,IAA7B,EAAmCa,SAAnC,CACjB,UAAAC,IAAI,EAAI;AACN,YAAIA,IAAI,CAACC,QAAL,CAAcC,MAAd,KAAyB,GAA7B,EAAkC;AAChCf,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAEC,uBAAQc,gBADP;AAEPC,YAAAA,OAAO,EAAEJ,IAAI,CAACC;AAFP,WAAD,CAAR;AAID,SALD,MAKO;AACLI,kCAAeC,IAAf,CAAoB,gBAApB;;AACAnB,UAAAA,QAAQ,CAAC;AACPC,YAAAA,IAAI,EAAEC,uBAAQkB,aADP;AAEPH,YAAAA,OAAO,EAAE;AAFF,WAAD,CAAR;AAID;AACF,OAdgB,EAejB,UAAAI,CAAC,EAAI;AACHrB,QAAAA,QAAQ,CAAC;AACPC,UAAAA,IAAI,EAAEC,uBAAQkB,aADP;AAEPH,UAAAA,OAAO,EAAEI,CAAC,CAACN,MAAF,KAAa,GAAb,GAAmB,iBAAnB,GAAuC;AAFzC,SAAD,CAAR;;AAIAG,gCAAeC,IAAf,CACEE,CAAC,CAACN,MAAF,KAAa,GAAb,GAAmB,iBAAnB,GAAuC,gBADzC;AAGD,OAvBgB,CAAnB;AAyBD,KA5BW,EA4BT,GA5BS,CAAZ;AA6BD;AAxCY,C","sourcesContent":["import ProductService from '../../../../../../services/ProductService';\r\nimport TimerMixin from 'react-timer-mixin';\r\nimport Actions from './SearchProduct.action';\r\nimport TopNotifyUtils from '../../../../../../utils/TopNotifyUtils';\r\n\r\nconst IDs = {\r\n  subscription: null,\r\n  timer: null,\r\n};\r\nexport default {\r\n  search: (term, dispatch) => {\r\n    dispatch({ type: Actions.GET_DATA });\r\n    if (IDs.timer) {\r\n      console.log('Cancel timer');\r\n      TimerMixin.clearTimeout(IDs.timer);\r\n      if (IDs.subscription) {\r\n        console.log('Cancel subscription');\r\n        IDs.subscription.unsubscribe();\r\n      }\r\n    }\r\n    IDs.timer = TimerMixin.setTimeout(() => {\r\n      console.log('Call request');\r\n      dispatch({ type: Actions.GET_DATA });\r\n      IDs.subscription = ProductService.searchProduct(term).subscribe(\r\n        data => {\r\n          if (data.response.status === 200) {\r\n            dispatch({\r\n              type: Actions.GET_DATA_SUCCESS,\r\n              payload: data.response,\r\n            });\r\n          } else {\r\n            TopNotifyUtils.fail('notify.failMsg');\r\n            dispatch({\r\n              type: Actions.GET_DATA_FAIL,\r\n              payload: 'notify.failMsg',\r\n            });\r\n          }\r\n        },\r\n        e => {\r\n          dispatch({\r\n            type: Actions.GET_DATA_FAIL,\r\n            payload: e.status === 500 ? 'notify.code.500' : 'notify.failMsg',\r\n          });\r\n          TopNotifyUtils.fail(\r\n            e.status === 500 ? 'notify.code.500' : 'notify.failMsg',\r\n          );\r\n        },\r\n      );\r\n    }, 200);\r\n  },\r\n};\r\n"]},"metadata":{},"sourceType":"script"}