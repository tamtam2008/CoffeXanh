{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeFlashMessage = _interopRequireDefault(require(\"react-native-flash-message\"));\n\nrequire(\"react-native-gesture-handler\");\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _Colors = _interopRequireDefault(require(\"./constants/Colors\"));\n\nvar _Layout = require(\"./constants/Layout\");\n\nvar _i18n = _interopRequireDefault(require(\"./languages/i18n.config\"));\n\nvar _Splash = _interopRequireDefault(require(\"./screens/Splash.screen\"));\n\nvar _SessionUtils = _interopRequireDefault(require(\"./session/SessionUtils\"));\n\nvar _useRootNavigation2 = _interopRequireDefault(require(\"./utils/useRootNavigation\"));\n\nvar _inAppMessaging = _interopRequireDefault(require(\"@react-native-firebase/in-app-messaging\"));\n\nvar _Root = _interopRequireDefault(require(\"./screens/root/Root.screen\"));\n\nvar _Auth = _interopRequireDefault(require(\"./screens/auth/Auth.screen\"));\n\nvar _reactRedux = require(\"react-redux\");\n\nvar _store = _interopRequireDefault(require(\"./redux/store\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\App.js\";\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction App() {\n  var _React$useState = React.useState(false),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  var _useRootNavigation = (0, _useRootNavigation2.default)(),\n      navigationRef = _useRootNavigation.navigationRef,\n      isMountedRef = _useRootNavigation.isMountedRef;\n\n  var loadResourcesAndDataAsync = (0, React.useCallback)(function _callee() {\n    var _navigationRef$curren;\n\n    var session, toScreen;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap((0, _inAppMessaging.default)().setMessagesDisplaySuppressed(true));\n\n          case 2:\n            _context.next = 4;\n            return _regenerator.default.awrap(_SessionUtils.default.init());\n\n          case 4:\n            _context.next = 6;\n            return _regenerator.default.awrap(_i18n.default.changeLanguage(_SessionUtils.default.config().language));\n\n          case 6:\n            setLoadingComplete(true);\n            session = _SessionUtils.default.session();\n            toScreen = (session == null ? void 0 : session.isLogin) || !(session == null ? void 0 : session.isNew) || !!(session == null ? void 0 : session.userId) ? 'Root' : 'Auth';\n            (_navigationRef$curren = navigationRef.current) == null ? void 0 : _navigationRef$curren.navigate(toScreen);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [navigationRef]);\n  React.useEffect(function () {\n    if (!isLoadingComplete) {\n      loadResourcesAndDataAsync();\n    }\n\n    isMountedRef.current = true;\n    return function () {\n      isMountedRef.current = false;\n    };\n  }, [isLoadingComplete, isMountedRef, loadResourcesAndDataAsync]);\n  return React.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactRedux.Provider, {\n    store: _store.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, _reactNative.Platform.OS === 'ios' && React.createElement(_reactNative.StatusBar, {\n    barStyle: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 37\n    }\n  }), React.createElement(_native.NavigationContainer, {\n    ref: navigationRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: 'Splash',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, React.createElement(Stack.Screen, {\n    name: 'Splash',\n    component: _Splash.default,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Auth\",\n    component: _Auth.default,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Root\",\n    component: _Root.default,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }))), React.createElement(_reactNativeFlashMessage.default, {\n    position: \"top\",\n    duration: 3000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }))));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: _Colors.default.backgroundColor,\n    color: _Colors.default.gray,\n    fontWeight: '400',\n    fontSize: (0, _Layout.normalize)(14),\n    fontFamily: 'Roboto'\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/App.js"],"names":["Stack","App","React","useState","isLoadingComplete","setLoadingComplete","navigationRef","isMountedRef","loadResourcesAndDataAsync","setMessagesDisplaySuppressed","SessionUtils","init","i18n","changeLanguage","config","language","session","toScreen","isLogin","isNew","userId","current","navigate","useEffect","store","styles","container","Platform","OS","SplashScreen","headerShown","AuthScreen","RootScreen","StyleSheet","create","flex","backgroundColor","Colors","color","gray","fontWeight","fontSize","fontFamily"],"mappings":"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","sourcesContent":["import { NavigationContainer } from '@react-navigation/native';\rimport { createStackNavigator } from '@react-navigation/stack';\rimport * as React from 'react';\rimport { useCallback } from 'react';\rimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\rimport FlashMessage from 'react-native-flash-message';\rimport 'react-native-gesture-handler';\rimport { SafeAreaProvider } from 'react-native-safe-area-context';\rimport Colors from './constants/Colors';\rimport { normalize } from './constants/Layout';\rimport './languages/i18n.config';\rimport i18n from './languages/i18n.config';\rimport SplashScreen from './screens/Splash.screen';\rimport SessionUtils from './session/SessionUtils';\rimport useRootNavigation from './utils/useRootNavigation';\rimport inAppMessaging from '@react-native-firebase/in-app-messaging';\rimport RootScreen from './screens/root/Root.screen';\rimport AuthScreen from './screens/auth/Auth.screen';\rimport { Provider } from 'react-redux';\rimport store from './redux/store';\r\rconst Stack = createStackNavigator();\r\rexport default function App() {\r  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\r\r  const { navigationRef, isMountedRef } = useRootNavigation();\r\r  const loadResourcesAndDataAsync = useCallback(async () => {\r    await inAppMessaging().setMessagesDisplaySuppressed(true);\r    await SessionUtils.init();\r    await i18n.changeLanguage(SessionUtils.config().language);\r    setLoadingComplete(true);\r    const session = SessionUtils.session();\r    const toScreen =\r      session?.isLogin || !session?.isNew || !!session?.userId\r        ? 'Root'\r        : 'Auth';\r    navigationRef.current?.navigate(toScreen);\r  }, [navigationRef]);\r\r  React.useEffect(() => {\r    if (!isLoadingComplete) {\r      loadResourcesAndDataAsync();\r    }\r    isMountedRef.current = true;\r    return () => {\r      isMountedRef.current = false;\r    };\r  }, [isLoadingComplete, isMountedRef, loadResourcesAndDataAsync]);\r\r  return (\r    <SafeAreaProvider>\r      <Provider store={store}>\r        <View style={styles.container}>\r          {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\r          <NavigationContainer ref={navigationRef}>\r            <Stack.Navigator initialRouteName={'Splash'}>\r              <Stack.Screen\r                name={'Splash'}\r                component={SplashScreen}\r                options={{ headerShown: false }}\r              />\r              <Stack.Screen\r                name=\"Auth\"\r                component={AuthScreen}\r                options={{ headerShown: false }}\r              />\r              <Stack.Screen\r                name=\"Root\"\r                component={RootScreen}\r                options={{ headerShown: false }}\r              />\r            </Stack.Navigator>\r          </NavigationContainer>\r          {/* GLOBAL FLASH MESSAGE COMPONENT INSTANCE */}\r          <FlashMessage position=\"top\" duration={3000} />\r        </View>\r      </Provider>\r    </SafeAreaProvider>\r  );\r}\r\rconst styles = StyleSheet.create({\r  container: {\r    flex: 1,\r    backgroundColor: Colors.backgroundColor,\r    color: Colors.gray,\r    fontWeight: '400',\r    fontSize: normalize(14),\r    fontFamily: 'Roboto',\r  },\r});\r"]},"metadata":{},"sourceType":"script"}