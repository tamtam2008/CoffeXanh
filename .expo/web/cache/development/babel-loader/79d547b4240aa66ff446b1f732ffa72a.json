{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeMaps = _interopRequireWildcard(require(\"react-native-maps\"));\n\nvar _Colors = _interopRequireDefault(require(\"../../../../constants/Colors\"));\n\nvar _Container = _interopRequireDefault(require(\"../../../../components/layout/Container\"));\n\nvar _FindYourPositionContent = _interopRequireDefault(require(\"./components/FindYourPosition/FindYourPositionContent\"));\n\nvar _MapUtils = _interopRequireDefault(require(\"../../../../utils/MapUtils\"));\n\nvar _MapHeader = _interopRequireDefault(require(\"./components/FloatLayout/MapHeader.component\"));\n\nvar _MapStore = _interopRequireDefault(require(\"./MapStore.controller\"));\n\nvar _MapStore2 = _interopRequireWildcard(require(\"./MapStore.reducer\"));\n\nvar _StoreCarousel = _interopRequireDefault(require(\"./components/FloatLayout/StoreCarousel.component\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _CustomIcon = _interopRequireDefault(require(\"../../../../components/CustomIcon\"));\n\nvar _Icon = require(\"../../../../constants/Icon\");\n\nvar _Layout = require(\"../../../../constants/Layout\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\store\\\\mapStore\\\\MapStore.screen.js\";\n\nvar MapStoreScreen = function MapStoreScreen() {\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useReducer = (0, _react.useReducer)(_MapStore2.default, _MapStore2.initialState),\n      _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      position = _useState4[0],\n      setPosition = _useState4[1];\n\n  var _useState5 = (0, _react.useState)(true),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      isFinding = _useState6[0],\n      setFinding = _useState6[1];\n\n  var _useState7 = (0, _react.useState)(1),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      marginBottom = _useState8[0],\n      setMarginBottom = _useState8[1];\n\n  var mapRef = (0, _react.useRef)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _react.useLayoutEffect)(function () {\n    isLoading && _MapStore.default.getData(dispatch);\n    setLoading(false);\n  }, [isLoading]);\n  var onAfterFinding = (0, _react.useCallback)(function (pos) {\n    if (pos) {\n      _MapStore.default.findStore(pos, dispatch, function () {\n        setFinding(false);\n        setPosition(pos);\n      });\n    } else {\n      setFinding(false);\n    }\n  }, []);\n  var onMapLoaded = (0, _react.useCallback)(function () {\n    if (position) {\n      var _mapRef$current;\n\n      var newPosition = _MapUtils.default.getRegionForCoordinates([position].concat((0, _toConsumableArray2.default)(state.store.map(function (s) {\n        var gps = s.mapGps.trim().split(',').map(function (_s) {\n          return Number.parseFloat(_s);\n        });\n        return {\n          latitude: gps[0],\n          longitude: gps[1]\n        };\n      }))));\n\n      console.log('newPosition', newPosition);\n      (_mapRef$current = mapRef.current) == null ? void 0 : _mapRef$current.animateToRegion(newPosition);\n    }\n  }, [position, state.store]);\n  var updateFilter = (0, _react.useCallback)(function (_ref) {\n    var provinceId = _ref.provinceId,\n        districtId = _ref.districtId;\n\n    _MapStore.default.getStore({\n      provinceId: provinceId,\n      districtId: districtId\n    }, dispatch, function (store) {\n      if (store && store.length > 0) {\n        var _mapRef$current2;\n\n        var newPosition = _MapUtils.default.getRegionForCoordinates(store.map(function (s) {\n          var gps = s.mapGps.trim().split(',').map(function (_s) {\n            return Number.parseFloat(_s);\n          });\n          return {\n            latitude: gps[0],\n            longitude: gps[1]\n          };\n        }));\n\n        console.log('newPosition', newPosition);\n        (_mapRef$current2 = mapRef.current) == null ? void 0 : _mapRef$current2.animateToRegion(newPosition);\n      }\n    });\n  }, []);\n  (0, _react.useEffect)(function () {\n    if (!state.isLoading && !position && !isFinding) {\n      updateFilter({\n        provinceId: state.filter.province.id,\n        districtId: state.filter.district.id\n      });\n    }\n  }, [isFinding, position, state.filter.district.id, state.filter.province.id, state.isLoading, updateFilter]);\n  return isFinding ? _react.default.createElement(_FindYourPositionContent.default, {\n    onAfterFinding: onAfterFinding,\n    dispatch: dispatch,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }) : _react.default.createElement(_Container.default, {\n    isLoading: state.isLoading,\n    isRequesting: state.isRequesting,\n    isFail: state.isFail,\n    failMsg: t(state.failMsg),\n    contentStyle: styles.container,\n    scrollEnabled: state.isFail,\n    onRefresh: function onRefresh() {\n      _MapStore.default.getData(dispatch);\n\n      setFinding(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeMaps.default, {\n    ref: mapRef,\n    provider: _reactNativeMaps.PROVIDER_GOOGLE,\n    initialRegion: _MapUtils.default.DEFAULT_LOCATION,\n    style: [styles.map, {\n      marginBottom: marginBottom\n    }],\n    mapPadding: {\n      bottom: 5,\n      top: 62,\n      right: 5\n    },\n    showsUserLocation: true,\n    showsMyLocationButton: true,\n    rotateEnabled: false,\n    loadingEnabled: true,\n    loadingIndicatorColor: _Colors.default.tintColor,\n    onMapReady: function onMapReady() {\n      setMarginBottom(0);\n      onMapLoaded();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, state.store.map(function (s) {\n    var gps = s.mapGps.trim().split(',').map(function (_s) {\n      return Number.parseFloat(_s);\n    });\n    return _react.default.createElement(_reactNativeMaps.Marker, {\n      coordinate: {\n        latitude: gps[0],\n        longitude: gps[1]\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, _react.default.createElement(_CustomIcon.default, {\n      name: {\n        active: require('../../../../../assets/images/tabIconActive.png'),\n        inactive: require('../../../../../assets/images/tabIconDefault.png')\n      },\n      size: (0, _Layout.normalize)(32),\n      type: _Icon.IconType.IMAGE,\n      focused: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }));\n  })), _react.default.createElement(_reactNative.View, {\n    style: [_reactNative.StyleSheet.absoluteFillObject, {\n      flex: 1,\n      flexDirection: 'column',\n      justifyContent: 'space-between'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_MapHeader.default, {\n    filter: state.filter,\n    province: state.province,\n    district: state.district,\n    updateFilter: updateFilter,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), _react.default.createElement(_StoreCarousel.default, {\n    store: state.store,\n    district: state.filter.district,\n    style: {\n      marginBottom: 16\n    },\n    mapRef: mapRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar _default = MapStoreScreen;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  map: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/store/mapStore/MapStore.screen.js"],"names":["MapStoreScreen","isLoading","setLoading","Reducer","initialState","state","dispatch","position","setPosition","isFinding","setFinding","marginBottom","setMarginBottom","mapRef","t","Controller","getData","onAfterFinding","pos","findStore","onMapLoaded","newPosition","MapUtils","getRegionForCoordinates","store","map","s","gps","mapGps","trim","split","_s","Number","parseFloat","latitude","longitude","console","log","current","animateToRegion","updateFilter","provinceId","districtId","getStore","length","filter","province","id","district","isRequesting","isFail","failMsg","styles","container","PROVIDER_GOOGLE","DEFAULT_LOCATION","bottom","top","right","Colors","tintColor","active","require","inactive","IconType","IMAGE","StyleSheet","absoluteFillObject","flex","flexDirection","justifyContent","create"],"mappings":";;;;;;;;;;;;;AAAA;;AAQA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAAA,kBACK,qBAAS,IAAT,CADL;AAAA;AAAA,MACpBC,SADoB;AAAA,MACTC,UADS;;AAAA,oBAED,uBAAWC,kBAAX,EAAoBC,uBAApB,CAFC;AAAA;AAAA,MAEpBC,KAFoB;AAAA,MAEbC,QAFa;;AAAA,mBAGK,qBAAS,IAAT,CAHL;AAAA;AAAA,MAGpBC,QAHoB;AAAA,MAGVC,WAHU;;AAAA,mBAIK,qBAAS,IAAT,CAJL;AAAA;AAAA,MAIpBC,SAJoB;AAAA,MAITC,UAJS;;AAAA,mBAKa,qBAAS,CAAT,CALb;AAAA;AAAA,MAKpBC,YALoB;AAAA,MAKNC,eALM;;AAM3B,MAAMC,MAAM,GAAG,oBAAf;;AAN2B,wBAOb,mCAPa;AAAA,MAOnBC,CAPmB,mBAOnBA,CAPmB;;AAS3B,8BAAgB,YAAM;AACpBb,IAAAA,SAAS,IAAIc,kBAAWC,OAAX,CAAmBV,QAAnB,CAAb;AACAJ,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD,EAGG,CAACD,SAAD,CAHH;AAKA,MAAMgB,cAAc,GAAG,wBAAY,UAACC,GAAD,EAAS;AAC1C,QAAIA,GAAJ,EAAS;AACPH,wBAAWI,SAAX,CAAqBD,GAArB,EAA0BZ,QAA1B,EAAoC,YAAM;AACxCI,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,QAAAA,WAAW,CAACU,GAAD,CAAX;AACD,OAHD;AAID,KALD,MAKO;AACLR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GATsB,EASpB,EAToB,CAAvB;AAWA,MAAMU,WAAW,GAAG,wBAAY,YAAM;AACpC,QAAIb,QAAJ,EAAc;AAAA;;AACZ,UAAMc,WAAW,GAAGC,kBAASC,uBAAT,EAClBhB,QADkB,0CAEfF,KAAK,CAACmB,KAAN,CAAYC,GAAZ,CAAgB,UAACC,CAAD,EAAO;AACxB,YAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CACTC,IADS,GAETC,KAFS,CAEH,GAFG,EAGTL,GAHS,CAGL,UAACM,EAAD;AAAA,iBAAQC,MAAM,CAACC,UAAP,CAAkBF,EAAlB,CAAR;AAAA,SAHK,CAAZ;AAIA,eAAO;AACLG,UAAAA,QAAQ,EAAEP,GAAG,CAAC,CAAD,CADR;AAELQ,UAAAA,SAAS,EAAER,GAAG,CAAC,CAAD;AAFT,SAAP;AAID,OATE,CAFe,GAApB;;AAaAS,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BhB,WAA3B;AACA,yBAAAR,MAAM,CAACyB,OAAP,qCAAgBC,eAAhB,CAAgClB,WAAhC;AACD;AACF,GAlBmB,EAkBjB,CAACd,QAAD,EAAWF,KAAK,CAACmB,KAAjB,CAlBiB,CAApB;AAoBA,MAAMgB,YAAY,GAAG,wBAAY,gBAAgC;AAAA,QAA7BC,UAA6B,QAA7BA,UAA6B;AAAA,QAAjBC,UAAiB,QAAjBA,UAAiB;;AAC/D3B,sBAAW4B,QAAX,CAAoB;AAAEF,MAAAA,UAAU,EAAVA,UAAF;AAAcC,MAAAA,UAAU,EAAVA;AAAd,KAApB,EAAgDpC,QAAhD,EAA0D,UAACkB,KAAD,EAAW;AACnE,UAAIA,KAAK,IAAIA,KAAK,CAACoB,MAAN,GAAe,CAA5B,EAA+B;AAAA;;AAC7B,YAAMvB,WAAW,GAAGC,kBAASC,uBAAT,CAClBC,KAAK,CAACC,GAAN,CAAU,UAACC,CAAD,EAAO;AACf,cAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CACTC,IADS,GAETC,KAFS,CAEH,GAFG,EAGTL,GAHS,CAGL,UAACM,EAAD;AAAA,mBAAQC,MAAM,CAACC,UAAP,CAAkBF,EAAlB,CAAR;AAAA,WAHK,CAAZ;AAIA,iBAAO;AACLG,YAAAA,QAAQ,EAAEP,GAAG,CAAC,CAAD,CADR;AAELQ,YAAAA,SAAS,EAAER,GAAG,CAAC,CAAD;AAFT,WAAP;AAID,SATD,CADkB,CAApB;;AAYAS,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BhB,WAA3B;AACA,4BAAAR,MAAM,CAACyB,OAAP,sCAAgBC,eAAhB,CAAgClB,WAAhC;AACD;AACF,KAjBD;AAkBD,GAnBoB,EAmBlB,EAnBkB,CAArB;AAqBA,wBAAU,YAAM;AACd,QAAI,CAAChB,KAAK,CAACJ,SAAP,IAAoB,CAACM,QAArB,IAAiC,CAACE,SAAtC,EAAiD;AAC/C+B,MAAAA,YAAY,CAAC;AACXC,QAAAA,UAAU,EAAEpC,KAAK,CAACwC,MAAN,CAAaC,QAAb,CAAsBC,EADvB;AAEXL,QAAAA,UAAU,EAAErC,KAAK,CAACwC,MAAN,CAAaG,QAAb,CAAsBD;AAFvB,OAAD,CAAZ;AAID;AACF,GAPD,EAOG,CACDtC,SADC,EAEDF,QAFC,EAGDF,KAAK,CAACwC,MAAN,CAAaG,QAAb,CAAsBD,EAHrB,EAID1C,KAAK,CAACwC,MAAN,CAAaC,QAAb,CAAsBC,EAJrB,EAKD1C,KAAK,CAACJ,SALL,EAMDuC,YANC,CAPH;AAeA,SAAO/B,SAAS,GACd,6BAAC,gCAAD;AACE,IAAA,cAAc,EAAEQ,cADlB;AAEE,IAAA,QAAQ,EAAEX,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADc,GAMd,6BAAC,kBAAD;AACE,IAAA,SAAS,EAAED,KAAK,CAACJ,SADnB;AAEE,IAAA,YAAY,EAAEI,KAAK,CAAC4C,YAFtB;AAGE,IAAA,MAAM,EAAE5C,KAAK,CAAC6C,MAHhB;AAIE,IAAA,OAAO,EAAEpC,CAAC,CAACT,KAAK,CAAC8C,OAAP,CAJZ;AAKE,IAAA,YAAY,EAAEC,MAAM,CAACC,SALvB;AAME,IAAA,aAAa,EAAEhD,KAAK,CAAC6C,MANvB;AAOE,IAAA,SAAS,EAAE,qBAAM;AACfnC,wBAAWC,OAAX,CAAmBV,QAAnB;;AACAI,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,6BAAC,wBAAD;AACE,IAAA,GAAG,EAAEG,MADP;AAEE,IAAA,QAAQ,EAAEyC,gCAFZ;AAGE,IAAA,aAAa,EAAEhC,kBAASiC,gBAH1B;AAIE,IAAA,KAAK,EAAE,CAACH,MAAM,CAAC3B,GAAR,EAAa;AAAEd,MAAAA,YAAY,EAAEA;AAAhB,KAAb,CAJT;AAKE,IAAA,UAAU,EAAE;AAAE6C,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,GAAG,EAAE,EAAlB;AAAsBC,MAAAA,KAAK,EAAE;AAA7B,KALd;AAME,IAAA,iBAAiB,EAAE,IANrB;AAOE,IAAA,qBAAqB,EAAE,IAPzB;AAQE,IAAA,aAAa,EAAE,KARjB;AASE,IAAA,cAAc,EAAE,IATlB;AAUE,IAAA,qBAAqB,EAAEC,gBAAOC,SAVhC;AAWE,IAAA,UAAU,EAAE,sBAAM;AAChBhD,MAAAA,eAAe,CAAC,CAAD,CAAf;AAEAQ,MAAAA,WAAW;AACZ,KAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAgBGf,KAAK,CAACmB,KAAN,CAAYC,GAAZ,CAAgB,UAACC,CAAD,EAAO;AACtB,QAAMC,GAAG,GAAGD,CAAC,CAACE,MAAF,CACTC,IADS,GAETC,KAFS,CAEH,GAFG,EAGTL,GAHS,CAGL,UAACM,EAAD;AAAA,aAAQC,MAAM,CAACC,UAAP,CAAkBF,EAAlB,CAAR;AAAA,KAHK,CAAZ;AAIA,WACE,6BAAC,uBAAD;AACE,MAAA,UAAU,EAAE;AACVG,QAAAA,QAAQ,EAAEP,GAAG,CAAC,CAAD,CADH;AAEVQ,QAAAA,SAAS,EAAER,GAAG,CAAC,CAAD;AAFJ,OADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE,6BAAC,mBAAD;AACE,MAAA,IAAI,EAAE;AACJkC,QAAAA,MAAM,EAAEC,OAAO,CAAC,gDAAD,CADX;AAEJC,QAAAA,QAAQ,EAAED,OAAO,CAAC,iDAAD;AAFb,OADR;AAKE,MAAA,IAAI,EAAE,uBAAU,EAAV,CALR;AAME,MAAA,IAAI,EAAEE,eAASC,KANjB;AAOE,MAAA,OAAO,MAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AAiBD,GAtBA,CAhBH,CAXF,EAmDE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLC,wBAAWC,kBADN,EAEL;AACEC,MAAAA,IAAI,EAAE,CADR;AAEEC,MAAAA,aAAa,EAAE,QAFjB;AAGEC,MAAAA,cAAc,EAAE;AAHlB,KAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,6BAAC,kBAAD;AACE,IAAA,MAAM,EAAEjE,KAAK,CAACwC,MADhB;AAEE,IAAA,QAAQ,EAAExC,KAAK,CAACyC,QAFlB;AAGE,IAAA,QAAQ,EAAEzC,KAAK,CAAC2C,QAHlB;AAIE,IAAA,YAAY,EAAER,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAeE,6BAAC,sBAAD;AACE,IAAA,KAAK,EAAEnC,KAAK,CAACmB,KADf;AAEE,IAAA,QAAQ,EAAEnB,KAAK,CAACwC,MAAN,CAAaG,QAFzB;AAGE,IAAA,KAAK,EAAE;AAAErC,MAAAA,YAAY,EAAE;AAAhB,KAHT;AAIE,IAAA,MAAM,EAAEE,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CAnDF,CANF;AAiFD,CAlKD;;eAoKeb,c;;;AAEf,IAAMoD,MAAM,GAAGc,wBAAWK,MAAX,CAAkB;AAC/BlB,EAAAA,SAAS,EAAE;AACTe,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/B3C,EAAAA,GAAG,EAAE;AACH2C,IAAAA,IAAI,EAAE;AADH;AAJ0B,CAAlB,CAAf","sourcesContent":["import React, {\r\n  useCallback,\r\n  useEffect,\r\n  useLayoutEffect,\r\n  useReducer,\r\n  useRef,\r\n  useState,\r\n} from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\nimport MapView, { Marker, PROVIDER_GOOGLE } from 'react-native-maps';\r\nimport Colors from '../../../../constants/Colors';\r\nimport Container from '../../../../components/layout/Container';\r\nimport FindYourPositionContent from './components/FindYourPosition/FindYourPositionContent';\r\nimport MapUtils from '../../../../utils/MapUtils';\r\nimport MapHeader from './components/FloatLayout/MapHeader.component';\r\nimport Controller from './MapStore.controller';\r\nimport Reducer, { initialState } from './MapStore.reducer';\r\nimport StoreCarousel from './components/FloatLayout/StoreCarousel.component';\r\nimport { useTranslation } from 'react-i18next';\r\nimport CustomIcon from '../../../../components/CustomIcon';\r\nimport { IconType } from '../../../../constants/Icon';\r\nimport { normalize } from '../../../../constants/Layout';\r\n\r\nconst MapStoreScreen = () => {\r\n  const [isLoading, setLoading] = useState(true);\r\n  const [state, dispatch] = useReducer(Reducer, initialState);\r\n  const [position, setPosition] = useState(null);\r\n  const [isFinding, setFinding] = useState(true);\r\n  const [marginBottom, setMarginBottom] = useState(1);\r\n  const mapRef = useRef();\r\n  const { t } = useTranslation();\r\n\r\n  useLayoutEffect(() => {\r\n    isLoading && Controller.getData(dispatch);\r\n    setLoading(false);\r\n  }, [isLoading]);\r\n\r\n  const onAfterFinding = useCallback((pos) => {\r\n    if (pos) {\r\n      Controller.findStore(pos, dispatch, () => {\r\n        setFinding(false);\r\n        setPosition(pos);\r\n      });\r\n    } else {\r\n      setFinding(false);\r\n    }\r\n  }, []);\r\n\r\n  const onMapLoaded = useCallback(() => {\r\n    if (position) {\r\n      const newPosition = MapUtils.getRegionForCoordinates([\r\n        position,\r\n        ...state.store.map((s) => {\r\n          const gps = s.mapGps\r\n            .trim()\r\n            .split(',')\r\n            .map((_s) => Number.parseFloat(_s));\r\n          return {\r\n            latitude: gps[0],\r\n            longitude: gps[1],\r\n          };\r\n        }),\r\n      ]);\r\n      console.log('newPosition', newPosition);\r\n      mapRef.current?.animateToRegion(newPosition);\r\n    }\r\n  }, [position, state.store]);\r\n\r\n  const updateFilter = useCallback(({ provinceId, districtId }) => {\r\n    Controller.getStore({ provinceId, districtId }, dispatch, (store) => {\r\n      if (store && store.length > 0) {\r\n        const newPosition = MapUtils.getRegionForCoordinates(\r\n          store.map((s) => {\r\n            const gps = s.mapGps\r\n              .trim()\r\n              .split(',')\r\n              .map((_s) => Number.parseFloat(_s));\r\n            return {\r\n              latitude: gps[0],\r\n              longitude: gps[1],\r\n            };\r\n          }),\r\n        );\r\n        console.log('newPosition', newPosition);\r\n        mapRef.current?.animateToRegion(newPosition);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!state.isLoading && !position && !isFinding) {\r\n      updateFilter({\r\n        provinceId: state.filter.province.id,\r\n        districtId: state.filter.district.id,\r\n      });\r\n    }\r\n  }, [\r\n    isFinding,\r\n    position,\r\n    state.filter.district.id,\r\n    state.filter.province.id,\r\n    state.isLoading,\r\n    updateFilter,\r\n  ]);\r\n  return isFinding ? (\r\n    <FindYourPositionContent\r\n      onAfterFinding={onAfterFinding}\r\n      dispatch={dispatch}\r\n    />\r\n  ) : (\r\n    <Container\r\n      isLoading={state.isLoading}\r\n      isRequesting={state.isRequesting}\r\n      isFail={state.isFail}\r\n      failMsg={t(state.failMsg)}\r\n      contentStyle={styles.container}\r\n      scrollEnabled={state.isFail}\r\n      onRefresh={() => {\r\n        Controller.getData(dispatch);\r\n        setFinding(true);\r\n      }}>\r\n      <MapView\r\n        ref={mapRef}\r\n        provider={PROVIDER_GOOGLE}\r\n        initialRegion={MapUtils.DEFAULT_LOCATION}\r\n        style={[styles.map, { marginBottom: marginBottom }]}\r\n        mapPadding={{ bottom: 5, top: 62, right: 5 }}\r\n        showsUserLocation={true}\r\n        showsMyLocationButton={true}\r\n        rotateEnabled={false}\r\n        loadingEnabled={true}\r\n        loadingIndicatorColor={Colors.tintColor}\r\n        onMapReady={() => {\r\n          setMarginBottom(0);\r\n          // mapRef.current?.animateToRegion(position);\r\n          onMapLoaded();\r\n        }}>\r\n        {state.store.map((s) => {\r\n          const gps = s.mapGps\r\n            .trim()\r\n            .split(',')\r\n            .map((_s) => Number.parseFloat(_s));\r\n          return (\r\n            <Marker\r\n              coordinate={{\r\n                latitude: gps[0],\r\n                longitude: gps[1],\r\n              }}>\r\n              <CustomIcon\r\n                name={{\r\n                  active: require('../../../../../assets/images/tabIconActive.png'),\r\n                  inactive: require('../../../../../assets/images/tabIconDefault.png'),\r\n                }}\r\n                size={normalize(32)}\r\n                type={IconType.IMAGE}\r\n                focused\r\n              />\r\n            </Marker>\r\n          );\r\n        })}\r\n      </MapView>\r\n      <View\r\n        style={[\r\n          StyleSheet.absoluteFillObject,\r\n          {\r\n            flex: 1,\r\n            flexDirection: 'column',\r\n            justifyContent: 'space-between',\r\n          },\r\n        ]}>\r\n        <MapHeader\r\n          filter={state.filter}\r\n          province={state.province}\r\n          district={state.district}\r\n          updateFilter={updateFilter}\r\n        />\r\n        <StoreCarousel\r\n          store={state.store}\r\n          district={state.filter.district}\r\n          style={{ marginBottom: 16 }}\r\n          mapRef={mapRef}\r\n        />\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MapStoreScreen;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  map: {\r\n    flex: 1,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}