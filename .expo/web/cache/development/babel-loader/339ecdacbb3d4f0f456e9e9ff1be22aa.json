{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseStyles = require(\"../../../../../../constants/BaseStyles\");\n\nvar _Layout = _interopRequireDefault(require(\"../../../../../../constants/Layout\"));\n\nvar _Carousel = _interopRequireDefault(require(\"react-native-snap-carousel/src/carousel/Carousel\"));\n\nvar _LazyImage = _interopRequireDefault(require(\"../../../../../../components/LazyImage\"));\n\nvar _Colors = _interopRequireDefault(require(\"../../../../../../constants/Colors\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\store\\\\mapStore\\\\components\\\\FloatLayout\\\\StoreCarousel.component.js\";\n\nvar StoreCarousel = function StoreCarousel(_ref) {\n  var store = _ref.store,\n      district = _ref.district,\n      mapRef = _ref.mapRef,\n      style = _ref.style;\n  var moveToStore = (0, _react.useCallback)(function (pos) {\n    var _mapRef$current;\n\n    (_mapRef$current = mapRef.current) == null ? void 0 : _mapRef$current.animateCamera({\n      center: pos,\n      zoom: 18\n    });\n  }, [mapRef]);\n  console.log(store);\n  return _react.default.createElement(_reactNative.View, {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_Carousel.default, {\n    data: store,\n    onSnapToItem: function onSnapToItem(index) {\n      var gps = store[index].mapGps.trim().split(',').map(function (_s) {\n        return Number.parseFloat(_s);\n      });\n      moveToStore({\n        latitude: gps[0],\n        longitude: gps[1]\n      });\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        style: [_BaseStyles.BaseStyles.flexColumn, _BaseStyles.BaseStyles.baseContainer],\n        onPress: function onPress() {\n          var gps = item.mapGps.trim().split(',').map(function (_s) {\n            return Number.parseFloat(_s);\n          });\n          moveToStore({\n            latitude: gps[0],\n            longitude: gps[1]\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: {\n          marginHorizontal: -16,\n          marginTop: -16,\n          marginBottom: 16\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_LazyImage.default, {\n        url: item.image,\n        width: Math.max(_Layout.default.window.width * 0.6, 300),\n        height: 100,\n        style: {\n          borderTopLeftRadius: 5,\n          borderTopRightRadius: 5,\n          backgroundColor: _Colors.default.lightGray\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      })), _react.default.createElement(_reactNative.Text, {\n        style: [_BaseStyles.BaseFontStyles.menuOrBody2],\n        numberOfLines: 1,\n        lineBreakMode: 'tail',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, district.name), _react.default.createElement(_reactNative.Text, {\n        style: [_BaseStyles.BaseFontStyles.body1],\n        numberOfLines: 1,\n        lineBreakMode: 'tail',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }\n      }, item.address));\n    },\n    sliderWidth: _Layout.default.window.width,\n    itemWidth: Math.max(_Layout.default.window.width * 0.6, 300),\n    contentContainerCustomStyle: {\n      padding: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar _default = StoreCarousel;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/store/mapStore/components/FloatLayout/StoreCarousel.component.js"],"names":["StoreCarousel","store","district","mapRef","style","moveToStore","pos","current","animateCamera","center","zoom","console","log","index","gps","mapGps","trim","split","map","_s","Number","parseFloat","latitude","longitude","item","BaseStyles","flexColumn","baseContainer","marginHorizontal","marginTop","marginBottom","image","Math","max","Layout","window","width","borderTopLeftRadius","borderTopRightRadius","backgroundColor","Colors","lightGray","BaseFontStyles","menuOrBody2","name","body1","address","padding"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Text, TouchableOpacity, View } from 'react-native';\r\nimport {\r\n  BaseFontStyles,\r\n  BaseStyles,\r\n} from '../../../../../../constants/BaseStyles';\r\nimport Layout from '../../../../../../constants/Layout';\r\nimport Carousel from 'react-native-snap-carousel/src/carousel/Carousel';\r\nimport LazyImage from '../../../../../../components/LazyImage';\r\nimport Colors from '../../../../../../constants/Colors';\r\n\r\nconst StoreCarousel = ({ store, district, mapRef, style }) => {\r\n  const moveToStore = useCallback(\r\n    pos => {\r\n      mapRef.current?.animateCamera({\r\n        center: pos,\r\n        zoom: 18,\r\n      });\r\n    },\r\n    [mapRef],\r\n  );\r\n  console.log(store);\r\n  return (\r\n    <View style={style}>\r\n      <Carousel\r\n        data={store}\r\n        onSnapToItem={index => {\r\n          const gps = store[index].mapGps\r\n            .trim()\r\n            .split(',')\r\n            .map(_s => Number.parseFloat(_s));\r\n          moveToStore({\r\n            latitude: gps[0],\r\n            longitude: gps[1],\r\n          });\r\n        }}\r\n        renderItem={({ item, index }) => (\r\n          <TouchableOpacity\r\n            style={[BaseStyles.flexColumn, BaseStyles.baseContainer]}\r\n            onPress={() => {\r\n              const gps = item.mapGps\r\n                .trim()\r\n                .split(',')\r\n                .map(_s => Number.parseFloat(_s));\r\n              moveToStore({\r\n                latitude: gps[0],\r\n                longitude: gps[1],\r\n              });\r\n            }}>\r\n            <View\r\n              style={{\r\n                marginHorizontal: -16,\r\n                marginTop: -16,\r\n                marginBottom: 16,\r\n              }}>\r\n              <LazyImage\r\n                url={item.image}\r\n                width={Math.max(Layout.window.width * 0.6, 300)}\r\n                height={100}\r\n                style={{\r\n                  borderTopLeftRadius: 5,\r\n                  borderTopRightRadius: 5,\r\n                  backgroundColor: Colors.lightGray,\r\n                }}\r\n              />\r\n            </View>\r\n            <Text\r\n              style={[BaseFontStyles.menuOrBody2]}\r\n              numberOfLines={1}\r\n              lineBreakMode={'tail'}>\r\n              {district.name}\r\n            </Text>\r\n            <Text\r\n              style={[BaseFontStyles.body1]}\r\n              numberOfLines={1}\r\n              lineBreakMode={'tail'}>\r\n              {item.address}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        )}\r\n        sliderWidth={Layout.window.width}\r\n        itemWidth={Math.max(Layout.window.width * 0.6, 300)}\r\n        contentContainerCustomStyle={{ padding: 5 }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default StoreCarousel;\r\n"]},"metadata":{},"sourceType":"script"}