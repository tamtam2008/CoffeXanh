{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _native = require(\"@react-navigation/native\");\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar isMountedRef = React.createRef();\nvar navigationRef = React.createRef();\n\nfunction navigate(name, params) {\n  if (isMountedRef.current && navigationRef.current) {\n    navigationRef.current.navigate(name, params);\n  } else {\n    console.warn('app not loading');\n  }\n}\n\nfunction push() {\n  if (isMountedRef.current && navigationRef.current) {\n    navigationRef.current.dispatch(_native.StackActions.push.apply(_native.StackActions, arguments));\n  } else {\n    console.warn('app not loading');\n  }\n}\n\nvar _default = function _default() {\n  return {\n    navigate: navigate,\n    push: push,\n    navigationRef: navigationRef,\n    isMountedRef: isMountedRef\n  };\n};\n\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/utils/useRootNavigation.js"],"names":["isMountedRef","React","createRef","navigationRef","navigate","name","params","current","console","warn","push","dispatch","StackActions"],"mappings":";;;;;;;AAAA;;AACA;;AAEA,IAAMA,YAAY,GAAGC,KAAK,CAACC,SAAN,EAArB;AAEA,IAAMC,aAAa,GAAGF,KAAK,CAACC,SAAN,EAAtB;;AAEA,SAASE,QAAT,CAAkBC,IAAlB,EAAwBC,MAAxB,EAAgC;AAC9B,MAAIN,YAAY,CAACO,OAAb,IAAwBJ,aAAa,CAACI,OAA1C,EAAmD;AACjDJ,IAAAA,aAAa,CAACI,OAAd,CAAsBH,QAAtB,CAA+BC,IAA/B,EAAqCC,MAArC;AACD,GAFD,MAEO;AACLE,IAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AACD;AACF;;AAED,SAASC,IAAT,GAAuB;AACrB,MAAIV,YAAY,CAACO,OAAb,IAAwBJ,aAAa,CAACI,OAA1C,EAAmD;AACjDJ,IAAAA,aAAa,CAACI,OAAd,CAAsBI,QAAtB,CAA+BC,qBAAaF,IAAb,uCAA/B;AACD,GAFD,MAEO;AACLF,IAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb;AACD;AACF;;eAEc;AAAA,SAAO;AACpBL,IAAAA,QAAQ,EAAEA,QADU;AAEpBM,IAAAA,IAAI,EAAEA,IAFc;AAGpBP,IAAAA,aAAa,EAAbA,aAHoB;AAIpBH,IAAAA,YAAY,EAAZA;AAJoB,GAAP;AAAA,C","sourcesContent":["import { StackActions } from '@react-navigation/native';\r\nimport * as React from 'react';\r\n\r\nconst isMountedRef = React.createRef();\r\n\r\nconst navigationRef = React.createRef();\r\n\r\nfunction navigate(name, params) {\r\n  if (isMountedRef.current && navigationRef.current) {\r\n    navigationRef.current.navigate(name, params);\r\n  } else {\r\n    console.warn('app not loading');\r\n  }\r\n}\r\n\r\nfunction push(...args) {\r\n  if (isMountedRef.current && navigationRef.current) {\r\n    navigationRef.current.dispatch(StackActions.push(...args));\r\n  } else {\r\n    console.warn('app not loading');\r\n  }\r\n}\r\n\r\nexport default () => ({\r\n  navigate: navigate,\r\n  push: push,\r\n  navigationRef,\r\n  isMountedRef,\r\n});\r\n"]},"metadata":{},"sourceType":"script"}