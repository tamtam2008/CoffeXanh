{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeScreens = require(\"react-native-screens\");\n\nvar _Container = _interopRequireDefault(require(\"../../../components/layout/Container\"));\n\nvar _XButton = _interopRequireDefault(require(\"../../../components/XButton\"));\n\nvar _XTextBox = _interopRequireDefault(require(\"../../../components/XTextBox\"));\n\nvar _BaseStyles = require(\"../../../constants/BaseStyles\");\n\nvar _Layout = require(\"../../../constants/Layout\");\n\nvar _useRootNavigation = _interopRequireDefault(require(\"../../../utils/useRootNavigation\"));\n\nvar _Register = _interopRequireDefault(require(\"./Register.reducer\"));\n\nvar _Register2 = _interopRequireDefault(require(\"./Register.style\"));\n\nvar _validate = require(\"../../../utils/validate\");\n\nvar _AuthService = _interopRequireDefault(require(\"../../../services/AuthService\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\auth\\\\register\\\\Register.screen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n(0, _reactNativeScreens.enableScreens)();\nvar navigation = (0, _useRootNavigation.default)();\n\nvar RegisterScreen = function RegisterScreen(props) {\n  var _useReducer = (0, _react.useReducer)(_Register.default.reducer, _Register.default.initState),\n      _useReducer2 = (0, _slicedToArray2.default)(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useReducer3 = (0, _react.useReducer)(function (inputsState, newState) {\n    return _objectSpread(_objectSpread({}, inputsState), newState);\n  }, {\n    username: '',\n    password: '',\n    confirmPassword: '',\n    email: '',\n    phonenumber: ''\n  }),\n      _useReducer4 = (0, _slicedToArray2.default)(_useReducer3, 2),\n      inputs = _useReducer4[0],\n      setInputs = _useReducer4[1];\n\n  var handleInputs = function handleInputs(value, name) {\n    setInputs((0, _defineProperty2.default)({}, name, value));\n  };\n\n  var errorHandle = function errorHandle(obj) {\n    if (!obj.username) {\n      setError('Vui lòng điền họ và tên');\n      return false;\n    }\n\n    if (!(0, _validate.isEmail)(obj.email) && !(0, _validate.isPhoneNumber)(obj.phonenumber)) {\n      setError('Bạn cần nhập email hoặc số điện thoại');\n      return false;\n    }\n\n    if (obj.password.length < 8) {\n      setError('Mật khẩu tối thiểu 8 ký tự');\n      return false;\n    }\n\n    if (obj.password !== obj.confirmPassword) {\n      setError('Xác nhận mật khẩu không hợp lệ');\n      return false;\n    }\n\n    return true;\n  };\n\n  var doSignUp = (0, _react.useCallback)(function () {\n    if (errorHandle(inputs)) {\n      var email = inputs.email,\n          fullName = inputs.username,\n          password = inputs.password,\n          phonenumber = inputs.phonenumber;\n\n      _AuthService.default.register({\n        email: email,\n        fullName: fullName,\n        password: password,\n        phonenumber: phonenumber\n      }).subscribe(function (data) {\n        console.log(data.response.status);\n\n        if (data.response.status === 200) {\n          navigation.navigate('registerSuccess');\n        } else {\n          setError(data.response.message);\n        }\n      });\n    }\n  }, [inputs]);\n  return _react.default.createElement(_Container.default, {\n    scrollEnabled: true,\n    isRequesting: state.isRequesting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: _Register2.default.imageWrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Image, {\n    style: _Register2.default.image,\n    source: require('../../../../assets/images/xanhcoffee-logo.png'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: _Register2.default.bodyContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: _Register2.default.message,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, t('RegisterScreen.message')), _react.default.createElement(_XTextBox.default, {\n    placeholder: t('RegisterScreen.username'),\n    onChange: function onChange(text) {\n      return handleInputs(text, 'username');\n    },\n    value: inputs.username,\n    maxLength: 20,\n    size: (0, _Layout.normalize)(249),\n    isValid: error,\n    style: [_BaseStyles.BaseFontStyles.subHeader, _BaseStyles.BaseStyles.mb_10],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_XTextBox.default, {\n    placeholder: t('RegisterScreen.email'),\n    onChange: function onChange(text) {\n      return handleInputs(text, 'email');\n    },\n    value: inputs.email,\n    maxLength: 20,\n    size: (0, _Layout.normalize)(249),\n    isValid: error,\n    style: [_BaseStyles.BaseFontStyles.subHeader, _BaseStyles.BaseStyles.mb_16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_XTextBox.default, {\n    placeholder: t('RegisterScreen.phonenumber'),\n    onChange: function onChange(text) {\n      return handleInputs(text, 'phonenumber');\n    },\n    value: inputs.phonenumber,\n    maxLength: 20,\n    size: (0, _Layout.normalize)(249),\n    isValid: error,\n    style: [_BaseStyles.BaseFontStyles.subHeader, _BaseStyles.BaseStyles.mb_16],\n    keyboardType: \"numeric\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_XTextBox.default, {\n    placeholder: t('RegisterScreen.password'),\n    onChange: function onChange(text) {\n      return handleInputs(text, 'password');\n    },\n    value: inputs.password,\n    maxLength: 20,\n    size: (0, _Layout.normalize)(249),\n    isValid: error,\n    style: [_BaseStyles.BaseFontStyles.subHeader, _BaseStyles.BaseStyles.mb_16],\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_XTextBox.default, {\n    placeholder: t('RegisterScreen.confirmPassword'),\n    onChange: function onChange(text) {\n      return handleInputs(text, 'confirmPassword');\n    },\n    value: inputs.confirmPassword,\n    maxLength: 20,\n    size: (0, _Layout.normalize)(249),\n    isValid: error,\n    style: [_BaseStyles.BaseFontStyles.subHeader],\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.caption, _Register2.default.errorMsg, _BaseStyles.BaseStyles.mb_16],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, !!error && error)), _react.default.createElement(_XButton.default, {\n    style: _Register2.default.signUpBtn,\n    title: t('RegisterScreen.title'),\n    onPress: doSignUp,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  })));\n};\n\nvar _default = RegisterScreen;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/auth/register/Register.screen.js"],"names":["navigation","RegisterScreen","props","loginReducer","reducer","initState","state","dispatch","t","error","setError","inputsState","newState","username","password","confirmPassword","email","phonenumber","inputs","setInputs","handleInputs","value","name","errorHandle","obj","length","doSignUp","fullName","authServices","register","subscribe","data","console","log","response","status","navigate","message","isRequesting","styles","imageWrapper","image","require","bodyContainer","text","BaseFontStyles","subHeader","BaseStyles","mb_10","mb_16","caption","errorMsg","signUpBtn"],"mappings":"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","sourcesContent":["import React, { useCallback, useReducer, useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Image, Text, View } from 'react-native';\r\nimport { enableScreens } from 'react-native-screens';\r\nimport Container from '../../../components/layout/Container';\r\nimport XButton from '../../../components/XButton';\r\nimport XTextBox from '../../../components/XTextBox';\r\nimport { BaseFontStyles, BaseStyles } from '../../../constants/BaseStyles';\r\nimport { normalize } from '../../../constants/Layout';\r\nimport useRootNavigation from '../../../utils/useRootNavigation';\r\nimport loginReducer from './Register.reducer';\r\nimport styles from './Register.style';\r\nimport { isEmail, isPhoneNumber } from '../../../utils/validate';\r\nimport authServices from '../../../services/AuthService';\r\n\r\nenableScreens();\r\n\r\nconst navigation = useRootNavigation();\r\n\r\nconst RegisterScreen = props => {\r\n  const [state, dispatch] = useReducer(\r\n    loginReducer.reducer,\r\n    loginReducer.initState,\r\n  );\r\n  const { t } = useTranslation();\r\n  const [error, setError] = useState('');\r\n  const [inputs, setInputs] = useReducer(\r\n    (inputsState, newState) => ({ ...inputsState, ...newState }),\r\n    {\r\n      username: '',\r\n      password: '',\r\n      confirmPassword: '',\r\n      email: '',\r\n      phonenumber: '',\r\n    },\r\n  );\r\n\r\n  const handleInputs = (value, name) => {\r\n    setInputs({ [name]: value });\r\n  };\r\n\r\n  const errorHandle = obj => {\r\n    if (!obj.username) {\r\n      setError('Vui lòng điền họ và tên');\r\n      return false;\r\n    }\r\n    if (!isEmail(obj.email) && !isPhoneNumber(obj.phonenumber)) {\r\n      setError('Bạn cần nhập email hoặc số điện thoại');\r\n      return false;\r\n    }\r\n    if (obj.password.length < 8) {\r\n      setError('Mật khẩu tối thiểu 8 ký tự');\r\n      return false;\r\n    }\r\n    if (obj.password !== obj.confirmPassword) {\r\n      setError('Xác nhận mật khẩu không hợp lệ');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const doSignUp = useCallback(() => {\r\n    if (errorHandle(inputs)) {\r\n      const { email, username: fullName, password, phonenumber } = inputs;\r\n      authServices\r\n        .register({\r\n          email,\r\n          fullName,\r\n          password,\r\n          phonenumber,\r\n        })\r\n        .subscribe(data => {\r\n          console.log(data.response.status);\r\n          if (data.response.status === 200) {\r\n            navigation.navigate('registerSuccess');\r\n          } else {\r\n            setError(data.response.message);\r\n          }\r\n        });\r\n    }\r\n  }, [inputs]);\r\n\r\n  return (\r\n    <Container scrollEnabled isRequesting={state.isRequesting}>\r\n      <View style={styles.imageWrapper}>\r\n        <Image\r\n          style={styles.image}\r\n          source={require('../../../../assets/images/xanhcoffee-logo.png')}\r\n        />\r\n      </View>\r\n      <View style={styles.bodyContainer}>\r\n        <View>\r\n          <Text style={styles.message}>{t('RegisterScreen.message')}</Text>\r\n          <XTextBox\r\n            placeholder={t('RegisterScreen.username')}\r\n            onChange={text => handleInputs(text, 'username')}\r\n            value={inputs.username}\r\n            maxLength={20}\r\n            size={normalize(249)}\r\n            isValid={error}\r\n            style={[BaseFontStyles.subHeader, BaseStyles.mb_10]}\r\n          />\r\n          <XTextBox\r\n            placeholder={t('RegisterScreen.email')}\r\n            onChange={text => handleInputs(text, 'email')}\r\n            value={inputs.email}\r\n            maxLength={20}\r\n            size={normalize(249)}\r\n            isValid={error}\r\n            style={[BaseFontStyles.subHeader, BaseStyles.mb_16]}\r\n          />\r\n          <XTextBox\r\n            placeholder={t('RegisterScreen.phonenumber')}\r\n            onChange={text => handleInputs(text, 'phonenumber')}\r\n            value={inputs.phonenumber}\r\n            maxLength={20}\r\n            size={normalize(249)}\r\n            isValid={error}\r\n            style={[BaseFontStyles.subHeader, BaseStyles.mb_16]}\r\n            keyboardType=\"numeric\"\r\n          />\r\n          <XTextBox\r\n            placeholder={t('RegisterScreen.password')}\r\n            onChange={text => handleInputs(text, 'password')}\r\n            value={inputs.password}\r\n            maxLength={20}\r\n            size={normalize(249)}\r\n            isValid={error}\r\n            style={[BaseFontStyles.subHeader, BaseStyles.mb_16]}\r\n            secureTextEntry={true}\r\n          />\r\n          <XTextBox\r\n            placeholder={t('RegisterScreen.confirmPassword')}\r\n            onChange={text => handleInputs(text, 'confirmPassword')}\r\n            value={inputs.confirmPassword}\r\n            maxLength={20}\r\n            size={normalize(249)}\r\n            isValid={error}\r\n            style={[BaseFontStyles.subHeader]}\r\n            secureTextEntry={true}\r\n          />\r\n          <Text\r\n            style={[BaseFontStyles.caption, styles.errorMsg, BaseStyles.mb_16]}>\r\n            {!!error && error}\r\n          </Text>\r\n        </View>\r\n        <XButton\r\n          style={styles.signUpBtn}\r\n          title={t('RegisterScreen.title')}\r\n          onPress={doSignUp}\r\n        />\r\n      </View>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n"]},"metadata":{},"sourceType":"script"}