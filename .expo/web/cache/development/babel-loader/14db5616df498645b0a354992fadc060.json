{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = LazyImage;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeFastImage = _interopRequireDefault(require(\"react-native-fast-image\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\components\\\\LazyImage.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction LazyImage(_ref) {\n  var _ref$url = _ref.url,\n      url = _ref$url === void 0 ? '' : _ref$url,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      priority = _ref.priority,\n      width = _ref.width,\n      height = _ref.height,\n      style = _ref.style;\n\n  var _style = _objectSpread(_objectSpread({}, style), {}, {\n    width: width ? width : '100%',\n    height: height ? height : '100%'\n  });\n\n  var _useState = (0, _react.useState)(true),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  return _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNativeFastImage.default, {\n    style: _style,\n    tintColor: 'rbga(0,0,0,0.5)',\n    source: {\n      uri: url,\n      headers: headers,\n      priority: priority ? priority : _reactNativeFastImage.default.priority.normal,\n      cache: _reactNativeFastImage.default.cacheControl.immutable\n    },\n    resizeMode: _reactNativeFastImage.default.resizeMode.cover,\n    fallback: true,\n    onLoadEnd: function onLoadEnd() {\n      setLoading(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), isLoading && _react.default.createElement(_reactNative.ActivityIndicator, {\n    style: [_reactNative.StyleSheet.absoluteFillObject],\n    size: 50,\n    color: _Colors.default.tintColor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/components/LazyImage.js"],"names":["LazyImage","url","headers","priority","width","height","style","_style","isLoading","setLoading","uri","FastImage","normal","cache","cacheControl","immutable","resizeMode","cover","StyleSheet","absoluteFillObject","Colors","tintColor"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEe,SAASA,SAAT,OAOZ;AAAA,sBANDC,GAMC;AAAA,MANDA,GAMC,yBANK,EAML;AAAA,0BALDC,OAKC;AAAA,MALDA,OAKC,6BALS,EAKT;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHDC,KAGC,QAHDA,KAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDC,KACC,QADDA,KACC;;AACD,MAAMC,MAAM,mCACPD,KADO;AAEVF,IAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAH,GAAW,MAFb;AAGVC,IAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAH,GAAY;AAHhB,IAAZ;;AADC,kBAM+B,qBAAS,IAAT,CAN/B;AAAA;AAAA,MAMMG,SANN;AAAA,MAMiBC,UANjB;;AAOD,SACE,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,6BAAD;AACE,IAAA,KAAK,EAAEF,MADT;AAEE,IAAA,SAAS,EAAE,iBAFb;AAGE,IAAA,MAAM,EAAE;AACNG,MAAAA,GAAG,EAAET,GADC;AAENC,MAAAA,OAAO,EAAEA,OAFH;AAGNC,MAAAA,QAAQ,EAAEA,QAAQ,GAAGA,QAAH,GAAcQ,8BAAUR,QAAV,CAAmBS,MAH7C;AAINC,MAAAA,KAAK,EAAEF,8BAAUG,YAAV,CAAuBC;AAJxB,KAHV;AASE,IAAA,UAAU,EAAEJ,8BAAUK,UAAV,CAAqBC,KATnC;AAUE,IAAA,QAAQ,EAAE,IAVZ;AAWE,IAAA,SAAS,EAAE,qBAAM;AACfR,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAbH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBGD,SAAS,IACR,6BAAC,8BAAD;AACE,IAAA,KAAK,EAAE,CAACU,wBAAWC,kBAAZ,CADT;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,KAAK,EAAEC,gBAAOC,SAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,CADF;AA0BD","sourcesContent":["import React, { useState } from 'react';\r\nimport FastImage from 'react-native-fast-image';\r\nimport { ActivityIndicator, StyleSheet, View } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\n\r\nexport default function LazyImage({\r\n  url = '',\r\n  headers = {},\r\n  priority,\r\n  width,\r\n  height,\r\n  style,\r\n}) {\r\n  const _style = {\r\n    ...style,\r\n    width: width ? width : '100%',\r\n    height: height ? height : '100%',\r\n  };\r\n  const [isLoading, setLoading] = useState(true);\r\n  return (\r\n    <View>\r\n      <FastImage\r\n        style={_style}\r\n        tintColor={'rbga(0,0,0,0.5)'}\r\n        source={{\r\n          uri: url,\r\n          headers: headers,\r\n          priority: priority ? priority : FastImage.priority.normal,\r\n          cache: FastImage.cacheControl.immutable,\r\n        }}\r\n        resizeMode={FastImage.resizeMode.cover}\r\n        fallback={true}\r\n        onLoadEnd={() => {\r\n          setLoading(false);\r\n        }}\r\n      />\r\n      {isLoading && (\r\n        <ActivityIndicator\r\n          style={[StyleSheet.absoluteFillObject]}\r\n          size={50}\r\n          color={Colors.tintColor}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}