{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _UserService = _interopRequireDefault(require(\"../../../../services/UserService\"));\n\nvar _useRootNavigation = _interopRequireDefault(require(\"../../../../utils/useRootNavigation\"));\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _TopNotifyUtils = _interopRequireDefault(require(\"../../../../utils/TopNotifyUtils\"));\n\nvar _SessionUtils = _interopRequireDefault(require(\"../../../../session/SessionUtils\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar navigation = (0, _useRootNavigation.default)();\nvar Controller = {\n  updateInfo: function updateInfo(userId, userInfo, onSuccess, onFail) {\n    var putData = _objectSpread(_objectSpread({\n      id: userId\n    }, getName(userInfo.name)), {}, {\n      birthday: (0, _moment.default)(userInfo.dob).format('YYYY-MM-DD'),\n      gender: userInfo.sex,\n      phone: userInfo.phone,\n      email: userInfo.email\n    });\n\n    console.log('updateInfo - userInfo', userInfo);\n    console.log('updateInfo - putData', putData);\n\n    _UserService.default.updateUserInfo(userId, putData).subscribe(function (resp) {\n      var status = resp.response.status;\n\n      if (status === 200) {\n        _SessionUtils.default.updateUserInfo(userInfo, function () {\n          onSuccess();\n          navigation.navigate('accountInfo');\n        });\n      } else {\n        console.log('updateInfo', 'Fail!!', putData);\n\n        _TopNotifyUtils.default.fail(status === 500 || status === 0 ? \"notify.code.\" + status : 'notify.failMsg');\n\n        onFail();\n      }\n    });\n  }\n};\n\nvar getName = function getName(name) {\n  var _name = name.trim().split(' ');\n\n  if (_name.length >= 2) {\n    return {\n      firstName: _name.filter(function (val, idx) {\n        return idx > 0;\n      }).join(' '),\n      lastName: _name[0]\n    };\n  } else {\n    return {\n      firstName: name,\n      lastName: ''\n    };\n  }\n};\n\nvar _default = Controller;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/account/accountInfoUpdate/AccountInfoUpdate.controller.js"],"names":["navigation","Controller","updateInfo","userId","userInfo","onSuccess","onFail","putData","id","getName","name","birthday","dob","format","gender","sex","phone","email","console","log","UserService","updateUserInfo","subscribe","resp","status","response","SessionUtils","navigate","TopNotifyUtils","fail","_name","trim","split","length","firstName","filter","val","idx","join","lastName"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,IAAMA,UAAU,GAAG,iCAAnB;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,UAAU,EAAE,oBAACC,MAAD,EAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAyC;AACnD,QAAMC,OAAO;AACXC,MAAAA,EAAE,EAAEL;AADO,OAERM,OAAO,CAACL,QAAQ,CAACM,IAAV,CAFC;AAGXC,MAAAA,QAAQ,EAAE,qBAAOP,QAAQ,CAACQ,GAAhB,EAAqBC,MAArB,CAA4B,YAA5B,CAHC;AAIXC,MAAAA,MAAM,EAAEV,QAAQ,CAACW,GAJN;AAKXC,MAAAA,KAAK,EAAEZ,QAAQ,CAACY,KALL;AAMXC,MAAAA,KAAK,EAAEb,QAAQ,CAACa;AANL,MAAb;;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCf,QAArC;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCZ,OAApC;;AACAa,yBAAYC,cAAZ,CAA2BlB,MAA3B,EAAmCI,OAAnC,EAA4Ce,SAA5C,CAAsD,UAAAC,IAAI,EAAI;AAAA,UACpDC,MADoD,GACzCD,IAAI,CAACE,QADoC,CACpDD,MADoD;;AAE5D,UAAIA,MAAM,KAAK,GAAf,EAAoB;AAClBE,8BAAaL,cAAb,CAA4BjB,QAA5B,EAAsC,YAAM;AAC1CC,UAAAA,SAAS;AACTL,UAAAA,UAAU,CAAC2B,QAAX,CAAoB,aAApB;AACD,SAHD;AAID,OALD,MAKO;AACLT,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,QAA1B,EAAoCZ,OAApC;;AACAqB,gCAAeC,IAAf,CACEL,MAAM,KAAK,GAAX,IAAkBA,MAAM,KAAK,CAA7B,oBACmBA,MADnB,GAEI,gBAHN;;AAKAlB,QAAAA,MAAM;AACP;AACF,KAhBD;AAiBD;AA7BgB,CAAnB;;AAgCA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AACtB,MAAMoB,KAAK,GAAGpB,IAAI,CAACqB,IAAL,GAAYC,KAAZ,CAAkB,GAAlB,CAAd;;AACA,MAAIF,KAAK,CAACG,MAAN,IAAgB,CAApB,EAAuB;AACrB,WAAO;AACLC,MAAAA,SAAS,EAAEJ,KAAK,CAACK,MAAN,CAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,eAAcA,GAAG,GAAG,CAApB;AAAA,OAAb,EAAoCC,IAApC,CAAyC,GAAzC,CADN;AAELC,MAAAA,QAAQ,EAAET,KAAK,CAAC,CAAD;AAFV,KAAP;AAID,GALD,MAKO;AACL,WAAO;AAAEI,MAAAA,SAAS,EAAExB,IAAb;AAAmB6B,MAAAA,QAAQ,EAAE;AAA7B,KAAP;AACD;AACF,CAVD;;eAYetC,U","sourcesContent":["import UserService from '../../../../services/UserService';\r\nimport useRootNavigation from '../../../../utils/useRootNavigation';\r\nimport moment from 'moment';\r\nimport TopNotifyUtils from '../../../../utils/TopNotifyUtils';\r\nimport SessionUtils from '../../../../session/SessionUtils';\r\n\r\nconst navigation = useRootNavigation();\r\n\r\nconst Controller = {\r\n  updateInfo: (userId, userInfo, onSuccess, onFail) => {\r\n    const putData = {\r\n      id: userId,\r\n      ...getName(userInfo.name),\r\n      birthday: moment(userInfo.dob).format('YYYY-MM-DD'),\r\n      gender: userInfo.sex,\r\n      phone: userInfo.phone,\r\n      email: userInfo.email,\r\n    };\r\n    console.log('updateInfo - userInfo', userInfo);\r\n    console.log('updateInfo - putData', putData);\r\n    UserService.updateUserInfo(userId, putData).subscribe(resp => {\r\n      const { status } = resp.response;\r\n      if (status === 200) {\r\n        SessionUtils.updateUserInfo(userInfo, () => {\r\n          onSuccess();\r\n          navigation.navigate('accountInfo');\r\n        });\r\n      } else {\r\n        console.log('updateInfo', 'Fail!!', putData);\r\n        TopNotifyUtils.fail(\r\n          status === 500 || status === 0\r\n            ? `notify.code.${status}`\r\n            : 'notify.failMsg',\r\n        );\r\n        onFail();\r\n      }\r\n    });\r\n  },\r\n};\r\n\r\nconst getName = name => {\r\n  const _name = name.trim().split(' ');\r\n  if (_name.length >= 2) {\r\n    return {\r\n      firstName: _name.filter((val, idx) => idx > 0).join(' '),\r\n      lastName: _name[0],\r\n    };\r\n  } else {\r\n    return { firstName: name, lastName: '' };\r\n  }\r\n};\r\n\r\nexport default Controller;\r\n"]},"metadata":{},"sourceType":"script"}