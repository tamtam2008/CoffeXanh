{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = SettingsScreen;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Container = _interopRequireDefault(require(\"../../../components/layout/Container\"));\n\nvar _BaseStyles = require(\"../../../constants/BaseStyles\");\n\nvar _Colors = _interopRequireDefault(require(\"../../../constants/Colors\"));\n\nvar _i18n = _interopRequireDefault(require(\"../../../languages/i18n.config\"));\n\nvar _useRootNavigation = _interopRequireDefault(require(\"../../../utils/useRootNavigation\"));\n\nvar _Languages = _interopRequireDefault(require(\"../../../config/Languages.config\"));\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\settings\\\\Settings.screen.js\";\n\nfunction SettingsScreen(props) {\n  var _useState = (0, _react.useState)(''),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      flag = _useState2[0],\n      setFlag = _useState2[1];\n\n  var navigation = (0, _useRootNavigation.default)();\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _native.useFocusEffect)(function () {\n    console.log('SettingsScreen', _i18n.default.language);\n\n    if (_i18n.default.language === 'en-EN') {\n      setFlag('https://image.flaticon.com/icons/png/512/555/555417.png');\n    } else {\n      setFlag('https://image.flaticon.com/icons/png/512/555/555515.png');\n    }\n  });\n\n  var i18nCodes = _Languages.default.filter(function (item) {\n    return item.code === _i18n.default.language;\n  });\n\n  var currentLanguage = i18nCodes.length > 0 ? i18nCodes[0].name : 'Language.vi_VN';\n  return _react.default.createElement(_Container.default, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.mt_10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeElements.ListItem, {\n    title: t('SettingsScreen.addressBook'),\n    leftIcon: {\n      name: 'map-marker-alt',\n      type: 'font-awesome-5',\n      color: _Colors.default.tintColor\n    },\n    containerStyle: [_BaseStyles.BaseStyles.baseContainer, styles.itemContainer],\n    bottomDivider: true,\n    chevron: true,\n    onPress: function onPress() {\n      navigation.navigate('addressBook');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.mt_10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeElements.ListItem, {\n    title: t('SettingsScreen.noti'),\n    leftIcon: {\n      name: 'bell',\n      type: 'font-awesome',\n      color: _Colors.default.tintColor\n    },\n    containerStyle: [_BaseStyles.BaseStyles.baseContainer, styles.itemContainer],\n    rightTitle: _react.default.createElement(_reactNative.Switch, {\n      value: false,\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }),\n    bottomDivider: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  })), _react.default.createElement(_reactNative.View, {\n    style: [_BaseStyles.BaseStyles.mt_10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeElements.ListItem, {\n    title: t('SettingsScreen.language'),\n    leftIcon: {\n      name: 'globe',\n      type: 'font-awesome',\n      color: _Colors.default.tintColor\n    },\n    containerStyle: [_BaseStyles.BaseStyles.baseContainer, styles.itemContainer],\n    rightTitle: flag ? _react.default.createElement(_reactNative.View, {\n      style: [_BaseStyles.BaseStyles.flexRow],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, _react.default.createElement(_reactNativeElements.Image, {\n      source: {\n        uri: flag\n      },\n      style: [styles.flag],\n      PlaceholderContent: _react.default.createElement(_reactNative.ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 39\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }), _react.default.createElement(_reactNative.Text, {\n      style: [_BaseStyles.BaseFontStyles.body1, _BaseStyles.BaseStyles.ml_10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, t(currentLanguage))) : _react.default.createElement(_reactNative.ActivityIndicator, {\n      size: 'small',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }),\n    onPress: function onPress() {\n      navigation.navigate('chooseLanguageScreen');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  flag: {\n    width: 30,\n    height: 20\n  },\n  itemContainer: {\n    borderRadius: 0\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/settings/Settings.screen.js"],"names":["SettingsScreen","props","flag","setFlag","navigation","t","console","log","i18n","language","i18nCodes","LanguagesConfig","filter","item","code","currentLanguage","length","name","BaseStyles","mt_10","type","color","Colors","tintColor","baseContainer","styles","itemContainer","navigate","flexRow","uri","BaseFontStyles","body1","ml_10","StyleSheet","create","width","height","borderRadius"],"mappings":"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","sourcesContent":["import { useFocusEffect } from '@react-navigation/native';\r\nimport React, { useState } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  ActivityIndicator,\r\n  StyleSheet,\r\n  Switch,\r\n  Text,\r\n  View,\r\n} from 'react-native';\r\nimport { Image, ListItem } from 'react-native-elements';\r\nimport Container from '../../../components/layout/Container';\r\nimport { BaseFontStyles, BaseStyles } from '../../../constants/BaseStyles';\r\nimport Colors from '../../../constants/Colors';\r\nimport i18n from '../../../languages/i18n.config';\r\nimport useRootNavigation from '../../../utils/useRootNavigation';\r\nimport LanguagesConfig from '../../../config/Languages.config';\r\n\r\nexport default function SettingsScreen(props) {\r\n  const [flag, setFlag] = useState('');\r\n  const navigation = useRootNavigation();\r\n  const { t } = useTranslation();\r\n\r\n  useFocusEffect(() => {\r\n    console.log('SettingsScreen', i18n.language);\r\n    if (i18n.language === 'en-EN') {\r\n      setFlag('https://image.flaticon.com/icons/png/512/555/555417.png');\r\n    } else {\r\n      setFlag('https://image.flaticon.com/icons/png/512/555/555515.png');\r\n    }\r\n  });\r\n  const i18nCodes = LanguagesConfig.filter(item => item.code === i18n.language);\r\n  const currentLanguage =\r\n    i18nCodes.length > 0 ? i18nCodes[0].name : 'Language.vi_VN';\r\n  return (\r\n    <Container>\r\n      <View style={[BaseStyles.mt_10]}>\r\n        <ListItem\r\n          title={t('SettingsScreen.addressBook')}\r\n          leftIcon={{\r\n            name: 'map-marker-alt',\r\n            type: 'font-awesome-5',\r\n            color: Colors.tintColor,\r\n          }}\r\n          containerStyle={[BaseStyles.baseContainer, styles.itemContainer]}\r\n          bottomDivider\r\n          chevron\r\n          onPress={() => {\r\n            navigation.navigate('addressBook');\r\n          }}\r\n        />\r\n      </View>\r\n      <View style={[BaseStyles.mt_10]}>\r\n        <ListItem\r\n          title={t('SettingsScreen.noti')}\r\n          leftIcon={{\r\n            name: 'bell',\r\n            type: 'font-awesome',\r\n            color: Colors.tintColor,\r\n          }}\r\n          containerStyle={[BaseStyles.baseContainer, styles.itemContainer]}\r\n          rightTitle={<Switch value={false} disabled />}\r\n          bottomDivider\r\n        />\r\n      </View>\r\n      <View style={[BaseStyles.mt_10]}>\r\n        <ListItem\r\n          title={t('SettingsScreen.language')}\r\n          leftIcon={{\r\n            name: 'globe',\r\n            type: 'font-awesome',\r\n            color: Colors.tintColor,\r\n          }}\r\n          containerStyle={[BaseStyles.baseContainer, styles.itemContainer]}\r\n          rightTitle={\r\n            flag ? (\r\n              <View style={[BaseStyles.flexRow]}>\r\n                <Image\r\n                  source={{\r\n                    uri: flag,\r\n                  }}\r\n                  style={[styles.flag]}\r\n                  PlaceholderContent={<ActivityIndicator />}\r\n                />\r\n                <Text style={[BaseFontStyles.body1, BaseStyles.ml_10]}>\r\n                  {t(currentLanguage)}\r\n                </Text>\r\n              </View>\r\n            ) : (\r\n              <ActivityIndicator size={'small'} />\r\n            )\r\n          }\r\n          onPress={() => {\r\n            navigation.navigate('chooseLanguageScreen');\r\n          }}\r\n        />\r\n      </View>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  flag: { width: 30, height: 20 },\r\n  itemContainer: {\r\n    borderRadius: 0,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}