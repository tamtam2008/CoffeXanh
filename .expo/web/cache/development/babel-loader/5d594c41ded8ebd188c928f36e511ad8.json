{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.firebase = exports.default = exports.SDK_VERSION = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _internal = require(\"@react-native-firebase/app/lib/internal\");\n\nvar _version = _interopRequireDefault(require(\"./version\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar statics = {};\nvar namespace = 'iid';\nvar nativeModuleName = 'RNFBIidModule';\n\nvar FirebaseIidModule = function (_FirebaseModule) {\n  (0, _inherits2.default)(FirebaseIidModule, _FirebaseModule);\n\n  var _super = _createSuper(FirebaseIidModule);\n\n  function FirebaseIidModule() {\n    (0, _classCallCheck2.default)(this, FirebaseIidModule);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(FirebaseIidModule, [{\n    key: \"get\",\n    value: function get() {\n      return this.native.get();\n    }\n  }, {\n    key: \"getToken\",\n    value: function getToken(authorizedEntity, scope) {\n      return this.native.getToken(authorizedEntity || this.app.options.messagingSenderId, scope || '*');\n    }\n  }, {\n    key: \"deleteToken\",\n    value: function deleteToken(authorizedEntity, scope) {\n      return this.native.deleteToken(authorizedEntity || this.app.options.messagingSenderId, scope || '*');\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete() {\n      return this.native.delete();\n    }\n  }]);\n  return FirebaseIidModule;\n}(_internal.FirebaseModule);\n\nvar SDK_VERSION = _version.default;\nexports.SDK_VERSION = SDK_VERSION;\n\nvar _default = (0, _internal.createModuleNamespace)({\n  statics: statics,\n  version: _version.default,\n  namespace: namespace,\n  nativeModuleName: nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseIidModule\n});\n\nexports.default = _default;\nvar firebase = (0, _internal.getFirebaseRoot)();\nexports.firebase = firebase;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/node_modules/@react-native-firebase/iid/lib/index.js"],"names":["statics","namespace","nativeModuleName","FirebaseIidModule","native","get","authorizedEntity","scope","getToken","app","options","messagingSenderId","deleteToken","delete","FirebaseModule","SDK_VERSION","version","nativeEvents","hasMultiAppSupport","hasCustomUrlOrRegionSupport","ModuleClass","firebase"],"mappings":";;;;;;;;;;;;;;;;;AAiBA;;AAKA;;;;;;AAEA,IAAMA,OAAO,GAAG,EAAhB;AAEA,IAAMC,SAAS,GAAG,KAAlB;AAEA,IAAMC,gBAAgB,GAAG,eAAzB;;IAEMC,iB;;;;;;;;;;;;0BACE;AACJ,aAAO,KAAKC,MAAL,CAAYC,GAAZ,EAAP;AACD;;;6BAEQC,gB,EAAkBC,K,EAAO;AAChC,aAAO,KAAKH,MAAL,CAAYI,QAAZ,CACLF,gBAAgB,IAAI,KAAKG,GAAL,CAASC,OAAT,CAAiBC,iBADhC,EAELJ,KAAK,IAAI,GAFJ,CAAP;AAID;;;gCAEWD,gB,EAAkBC,K,EAAO;AACnC,aAAO,KAAKH,MAAL,CAAYQ,WAAZ,CACLN,gBAAgB,IAAI,KAAKG,GAAL,CAASC,OAAT,CAAiBC,iBADhC,EAELJ,KAAK,IAAI,GAFJ,CAAP;AAID;;;8BAEQ;AACP,aAAO,KAAKH,MAAL,CAAYS,MAAZ,EAAP;AACD;;;EArB6BC,wB;;AAyBzB,IAAMC,WAAW,GAAGC,gBAApB;;;eAIQ,qCAAsB;AACnChB,EAAAA,OAAO,EAAPA,OADmC;AAEnCgB,EAAAA,OAAO,EAAPA,gBAFmC;AAGnCf,EAAAA,SAAS,EAATA,SAHmC;AAInCC,EAAAA,gBAAgB,EAAhBA,gBAJmC;AAKnCe,EAAAA,YAAY,EAAE,KALqB;AAMnCC,EAAAA,kBAAkB,EAAE,IANe;AAOnCC,EAAAA,2BAA2B,EAAE,KAPM;AAQnCC,EAAAA,WAAW,EAAEjB;AARsB,CAAtB,C;;;AAcR,IAAMkB,QAAQ,GAAG,gCAAjB","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  createModuleNamespace,\n  FirebaseModule,\n  getFirebaseRoot,\n} from '@react-native-firebase/app/lib/internal';\nimport version from './version';\n\nconst statics = {};\n\nconst namespace = 'iid';\n\nconst nativeModuleName = 'RNFBIidModule';\n\nclass FirebaseIidModule extends FirebaseModule {\n  get() {\n    return this.native.get();\n  }\n\n  getToken(authorizedEntity, scope) {\n    return this.native.getToken(\n      authorizedEntity || this.app.options.messagingSenderId,\n      scope || '*',\n    );\n  }\n\n  deleteToken(authorizedEntity, scope) {\n    return this.native.deleteToken(\n      authorizedEntity || this.app.options.messagingSenderId,\n      scope || '*',\n    );\n  }\n\n  delete() {\n    return this.native.delete();\n  }\n}\n\n// import { SDK_VERSION } from '@react-native-firebase/iid';\nexport const SDK_VERSION = version;\n\n// import iid from '@react-native-firebase/iid';\n// iid().get();\nexport default createModuleNamespace({\n  statics,\n  version,\n  namespace,\n  nativeModuleName,\n  nativeEvents: false,\n  hasMultiAppSupport: true,\n  hasCustomUrlOrRegionSupport: false,\n  ModuleClass: FirebaseIidModule,\n});\n\n// import iid, { firebase } from '@react-native-firebase/iid';\n// iid().get();\n// firebase.iid().get();\nexport const firebase = getFirebaseRoot();\n"]},"metadata":{},"sourceType":"script"}