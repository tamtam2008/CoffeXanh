{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _XModal = _interopRequireDefault(require(\"../../../../../../components/layout/XModal\"));\n\nvar _reactNativeElements = require(\"react-native-elements\");\n\nvar _Layout = _interopRequireDefault(require(\"../../../../../../constants/Layout\"));\n\nvar _CustomIcon = _interopRequireDefault(require(\"../../../../../../components/CustomIcon\"));\n\nvar _Icon = require(\"../../../../../../constants/Icon\");\n\nvar _BaseStyles = require(\"../../../../../../constants/BaseStyles\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\screens\\\\root\\\\store\\\\mapStore\\\\components\\\\Modal\\\\ChooseProvinceOrDistrict.modal.js\";\n\nvar ChooseProvinceOrDistrictModal = function ChooseProvinceOrDistrictModal(_ref) {\n  var data = _ref.data,\n      selected = _ref.selected,\n      visible = _ref.visible,\n      onClose = _ref.onClose,\n      isProvince = _ref.isProvince,\n      onSubmit = _ref.onSubmit;\n  return _react.default.createElement(_XModal.default, {\n    visible: visible,\n    onClose: onClose,\n    contentStyle: _reactNative.StyleSheet.flatten({\n      flexDirection: 'column',\n      flexWrap: 'nowrap',\n      justifyContent: 'flex-end',\n      alignContent: 'stretch'\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: [_reactNative.StyleSheet.flatten({\n      backgroundColor: '#fff',\n      width: _Layout.default.window.width,\n      maxHeight: _Layout.default.window.height * 0.8\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.menuOrBody2, _reactNative.StyleSheet.flatten({\n      textAlign: 'center',\n      paddingVertical: 10\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, isProvince ? 'Chọn tỉnh (thành phố)' : 'Chọn quận (huyện)'), _react.default.createElement(_reactNativeElements.Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), (data || []).length > 0 ? _react.default.createElement(_reactNative.FlatList, {\n    data: data || [],\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_reactNativeElements.ListItem, {\n        title: isProvince ? item.name : item.distName,\n        titleStyle: _BaseStyles.BaseFontStyles.body1,\n        bottomDivider: true,\n        rightElement: (isProvince ? item.id : item.distId) === selected ? _react.default.createElement(_CustomIcon.default, {\n          name: 'check',\n          type: _Icon.IconType.FONTAWESOME,\n          size: 18,\n          focused: true,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 21\n          }\n        }) : null,\n        onPress: function onPress() {\n          onClose();\n\n          if ((isProvince ? item.id : item.distId) !== selected) {\n            onSubmit(isProvince ? item.id : item.distId, isProvince);\n          }\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return (isProvince ? item.id : item.distId).toString();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }) : _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Kh\\xF4ng c\\xF3 d\\u1EEF li\\u1EC7u\")));\n};\n\nvar _default = ChooseProvinceOrDistrictModal;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/screens/root/store/mapStore/components/Modal/ChooseProvinceOrDistrict.modal.js"],"names":["ChooseProvinceOrDistrictModal","data","selected","visible","onClose","isProvince","onSubmit","StyleSheet","flatten","flexDirection","flexWrap","justifyContent","alignContent","backgroundColor","width","Layout","window","maxHeight","height","BaseFontStyles","menuOrBody2","textAlign","paddingVertical","length","item","name","distName","body1","id","distId","IconType","FONTAWESOME","toString"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { FlatList, StyleSheet, Text, View } from 'react-native';\r\nimport XModal from '../../../../../../components/layout/XModal';\r\nimport { Divider, ListItem } from 'react-native-elements';\r\nimport Layout from '../../../../../../constants/Layout';\r\nimport CustomIcon from '../../../../../../components/CustomIcon';\r\nimport { IconType } from '../../../../../../constants/Icon';\r\nimport { BaseFontStyles } from '../../../../../../constants/BaseStyles';\r\n\r\nconst ChooseProvinceOrDistrictModal = ({\r\n  data,\r\n  selected,\r\n  visible,\r\n  onClose,\r\n  isProvince,\r\n  onSubmit,\r\n}) => {\r\n  return (\r\n    <XModal\r\n      visible={visible}\r\n      onClose={onClose}\r\n      contentStyle={StyleSheet.flatten({\r\n        flexDirection: 'column',\r\n        flexWrap: 'nowrap',\r\n        justifyContent: 'flex-end',\r\n        alignContent: 'stretch',\r\n      })}>\r\n      <View\r\n        style={[\r\n          StyleSheet.flatten({\r\n            backgroundColor: '#fff',\r\n            width: Layout.window.width,\r\n            maxHeight: Layout.window.height * 0.8,\r\n          }),\r\n        ]}>\r\n        <Text\r\n          style={[\r\n            BaseFontStyles.menuOrBody2,\r\n            StyleSheet.flatten({ textAlign: 'center', paddingVertical: 10 }),\r\n          ]}>\r\n          {isProvince ? 'Chọn tỉnh (thành phố)' : 'Chọn quận (huyện)'}\r\n        </Text>\r\n        <Divider />\r\n        {(data || []).length > 0 ? (\r\n          <FlatList\r\n            data={data || []}\r\n            renderItem={({ item }) => (\r\n              <ListItem\r\n                title={isProvince ? item.name : item.distName}\r\n                titleStyle={BaseFontStyles.body1}\r\n                bottomDivider\r\n                rightElement={\r\n                  (isProvince ? item.id : item.distId) === selected ? (\r\n                    <CustomIcon\r\n                      name={'check'}\r\n                      type={IconType.FONTAWESOME}\r\n                      size={18}\r\n                      focused\r\n                    />\r\n                  ) : null\r\n                }\r\n                onPress={() => {\r\n                  onClose();\r\n                  if ((isProvince ? item.id : item.distId) !== selected) {\r\n                    onSubmit(isProvince ? item.id : item.distId, isProvince);\r\n                  }\r\n                }}\r\n              />\r\n            )}\r\n            keyExtractor={item => (isProvince ? item.id : item.distId).toString()}\r\n          />\r\n        ) : (\r\n          <Text style={[BaseFontStyles.body1]}>Không có dữ liệu</Text>\r\n        )}\r\n      </View>\r\n    </XModal>\r\n  );\r\n};\r\n\r\nexport default ChooseProvinceOrDistrictModal;\r\n"]},"metadata":{},"sourceType":"script"}