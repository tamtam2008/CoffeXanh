{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = BottomTabNavigator;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _TabBarIcon = _interopRequireDefault(require(\"./components/TabBarIcon\"));\n\nvar _routes = require(\"../screens/routes\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _Layout = require(\"../constants/Layout\");\n\nvar _reactI18next = require(\"react-i18next\");\n\nvar _core = require(\"@react-navigation/core\");\n\nvar _AppUtils = require(\"../utils/AppUtils\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\navigation\\\\BottomTabNavigator.js\";\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\nvar INITIAL_ROUTE_NAME = 'home';\n\nfunction BottomTabNavigator(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var tabBarOptions = {\n    style: {\n      height: (0, _Layout.normalize)(60),\n      paddingBottom: 5,\n      paddingTop: 5\n    },\n    activeTintColor: _Colors.default.tabIconSelected,\n    inactiveTintColor: _Colors.default.tabIconDefault\n  };\n\n  var _useTranslation = (0, _reactI18next.useTranslation)(),\n      t = _useTranslation.t;\n\n  (0, _core.useFocusEffect)(React.useCallback((0, _AppUtils.backButtonHandler)({\n    route: route\n  }), [route]));\n  return React.createElement(Tab.Navigator, {\n    unmountOnBlur: true,\n    initialRouteName: INITIAL_ROUTE_NAME,\n    tabBarOptions: tabBarOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, _routes.routes.bottomTabs.map(function (tab, idx) {\n    return React.createElement(Tab.Screen, {\n      key: idx,\n      name: tab.name,\n      component: tab.component,\n      options: {\n        title: t(tab.title),\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused;\n          return React.createElement(_TabBarIcon.default, {\n            focused: focused,\n            icon: tab.icon ? tab.icon : {\n              type: 'Ionicons',\n              name: 'md-help'\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }\n          });\n        }\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/navigation/BottomTabNavigator.js"],"names":["Tab","INITIAL_ROUTE_NAME","BottomTabNavigator","navigation","route","tabBarOptions","style","height","paddingBottom","paddingTop","activeTintColor","Colors","tabIconSelected","inactiveTintColor","tabIconDefault","t","React","useCallback","routes","bottomTabs","map","tab","idx","name","component","title","tabBarIcon","focused","icon","type"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,IAAMA,GAAG,GAAG,2CAAZ;AACA,IAAMC,kBAAkB,GAAG,MAA3B;;AACe,SAASC,kBAAT,OAAmD;AAAA;;AAAA,MAArBC,UAAqB,QAArBA,UAAqB;AAAA,MAATC,KAAS,QAATA,KAAS;AAChE,MAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,uBAAU,EAAV,CAAV;AAAyBC,MAAAA,aAAa,EAAE,CAAxC;AAA2CC,MAAAA,UAAU,EAAE;AAAvD,KADa;AAEpBC,IAAAA,eAAe,EAAEC,gBAAOC,eAFJ;AAGpBC,IAAAA,iBAAiB,EAAEF,gBAAOG;AAHN,GAAtB;;AADgE,wBAMlD,mCANkD;AAAA,MAMxDC,CANwD,mBAMxDA,CANwD;;AAQhE,4BAAeC,KAAK,CAACC,WAAN,CAAkB,iCAAkB;AAAEb,IAAAA,KAAK,EAALA;AAAF,GAAlB,CAAlB,EAAgD,CAACA,KAAD,CAAhD,CAAf;AAEA,SACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,aAAa,EAAE,IADjB;AAEE,IAAA,gBAAgB,EAAEH,kBAFpB;AAGE,IAAA,aAAa,EAAEI,aAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGa,eAAOC,UAAP,CAAkBC,GAAlB,CAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,WACE,oBAAC,GAAD,CAAK,MAAL;AACE,MAAA,GAAG,EAAEA,GADP;AAEE,MAAA,IAAI,EAAED,GAAG,CAACE,IAFZ;AAGE,MAAA,SAAS,EAAEF,GAAG,CAACG,SAHjB;AAIE,MAAA,OAAO,EAAE;AACPC,QAAAA,KAAK,EAAEV,CAAC,CAACM,GAAG,CAACI,KAAL,CADD;AAEPC,QAAAA,UAAU,EAAE;AAAA,cAAGC,OAAH,SAAGA,OAAH;AAAA,iBACV,oBAAC,mBAAD;AACE,YAAA,OAAO,EAAEA,OADX;AAEE,YAAA,IAAI,EACFN,GAAG,CAACO,IAAJ,GAAWP,GAAG,CAACO,IAAf,GAAsB;AAAEC,cAAAA,IAAI,EAAE,UAAR;AAAoBN,cAAAA,IAAI,EAAE;AAA1B,aAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADU;AAAA;AAFL,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAkBD,GAnBA,CAJH,CADF;AA2BD","sourcesContent":["import * as React from 'react';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport TabBarIcon from './components/TabBarIcon';\r\nimport { routes } from '../screens/routes';\r\nimport Colors from '../constants/Colors';\r\nimport { normalize } from '../constants/Layout';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useFocusEffect } from '@react-navigation/core';\r\nimport { backButtonHandler } from '../utils/AppUtils';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst INITIAL_ROUTE_NAME = 'home';\r\nexport default function BottomTabNavigator({ navigation, route }) {\r\n  const tabBarOptions = {\r\n    style: { height: normalize(60), paddingBottom: 5, paddingTop: 5 },\r\n    activeTintColor: Colors.tabIconSelected,\r\n    inactiveTintColor: Colors.tabIconDefault,\r\n  };\r\n  const { t } = useTranslation();\r\n\r\n  useFocusEffect(React.useCallback(backButtonHandler({ route }), [route]));\r\n\r\n  return (\r\n    <Tab.Navigator\r\n      unmountOnBlur={true}\r\n      initialRouteName={INITIAL_ROUTE_NAME}\r\n      tabBarOptions={tabBarOptions}>\r\n      {routes.bottomTabs.map((tab, idx) => {\r\n        return (\r\n          <Tab.Screen\r\n            key={idx}\r\n            name={tab.name}\r\n            component={tab.component}\r\n            options={{\r\n              title: t(tab.title),\r\n              tabBarIcon: ({ focused }) => (\r\n                <TabBarIcon\r\n                  focused={focused}\r\n                  icon={\r\n                    tab.icon ? tab.icon : { type: 'Ionicons', name: 'md-help' }\r\n                  }\r\n                />\r\n              ),\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"script"}