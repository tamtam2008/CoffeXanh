{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _Base = _interopRequireDefault(require(\"../utils/Base64\"));\n\nvar _asyncStorage = _interopRequireDefault(require(\"@react-native-community/async-storage\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _App = _interopRequireDefault(require(\"../config/App.config\"));\n\nvar _reactNativeRestart = _interopRequireDefault(require(\"react-native-restart\"));\n\nvar _useRootNavigation = _interopRequireDefault(require(\"../utils/useRootNavigation\"));\n\nvar _NoticeUtils = _interopRequireDefault(require(\"./NoticeUtils\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar navigation = (0, _useRootNavigation.default)();\n\nfunction createSessionUtils() {\n  var _session2 = {\n    isNew: true,\n    isLogin: false,\n    userId: null,\n    phone: null\n  };\n  var _userInfo = {};\n  var _config = {\n    locationPermission: false,\n    language: _App.default.defaultLanguage\n  };\n\n  var buildAuthHeader = function buildAuthHeader() {\n    var _session;\n\n    var headers = {};\n\n    if ((_session = _session2) == null ? void 0 : _session.token) {\n      headers.Authorization = _Base.default.atob(_session2.token);\n    }\n\n    return headers;\n  };\n\n  var init = function init() {\n    var cacheData, userCacheData, cacheLanguage;\n    return _regenerator.default.async(function init$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('session'));\n\n          case 2:\n            cacheData = _context.sent;\n\n            if (cacheData) {\n              _session2 = JSON.parse(cacheData);\n            }\n\n            _context.next = 6;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('userInfo'));\n\n          case 6:\n            userCacheData = _context.sent;\n\n            if (cacheData) {\n              _userInfo = JSON.parse(userCacheData);\n            }\n\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context.next = 12;\n              break;\n            }\n\n            _context.next = 11;\n            return _regenerator.default.awrap(_reactNative.PermissionsAndroid.check(_reactNative.PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION));\n\n          case 11:\n            _config.locationPermission = _context.sent;\n\n          case 12:\n            _context.next = 14;\n            return _regenerator.default.awrap(_asyncStorage.default.getItem('language'));\n\n          case 14:\n            cacheLanguage = _context.sent;\n            _config.language = cacheLanguage != null ? cacheLanguage : _App.default.defaultLanguage;\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var updateSession = function updateSession(sessionData, callback, callbackError) {\n    _session2 = _objectSpread(_objectSpread({}, _session2), sessionData);\n    console.debug('SessionUtils', _session2);\n\n    _asyncStorage.default.setItem('session', JSON.stringify(_session2)).then(function () {\n      callback == null ? void 0 : callback();\n    }).catch(function (e) {\n      return callback == null ? void 0 : callback(e);\n    });\n  };\n\n  var updateUserInfo = function updateUserInfo(userInfoData, callback, callbackError) {\n    _userInfo = userInfoData;\n\n    _asyncStorage.default.setItem('userInfo', JSON.stringify(_userInfo)).then(function () {\n      callback == null ? void 0 : callback();\n    }).catch(function (e) {\n      return callback == null ? void 0 : callback(e);\n    });\n  };\n\n  var clearAll = function clearAll() {\n    _session2 = {\n      isNew: false,\n      isLogin: false,\n      userId: null,\n      phone: null\n    };\n    _userInfo = {};\n\n    _asyncStorage.default.removeItem('session').then();\n\n    _asyncStorage.default.removeItem('userInfo').then();\n  };\n\n  var logout = function logout() {\n    _NoticeUtils.default.deleteAll();\n\n    clearAll();\n\n    _asyncStorage.default.setItem('language', _config.language).then();\n\n    navigation.navigate('Auth', {\n      screen: 'login'\n    });\n    console.log('logout success');\n  };\n\n  return {\n    config: function config() {\n      return _config;\n    },\n    userInfo: function userInfo() {\n      return _userInfo;\n    },\n    session: function session() {\n      return _session2;\n    },\n    init: init,\n    updateSession: updateSession,\n    buildAuthHeader: buildAuthHeader,\n    setConfig: function setConfig(newConfig) {\n      _config = _objectSpread(_objectSpread({}, _config), newConfig);\n    },\n    updateUserInfo: updateUserInfo,\n    clearAll: clearAll,\n    logout: logout\n  };\n}\n\nvar SessionUtils = createSessionUtils();\nvar _default = SessionUtils;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/session/SessionUtils.js"],"names":["navigation","createSessionUtils","session","isNew","isLogin","userId","phone","userInfo","config","locationPermission","language","AppConfig","defaultLanguage","buildAuthHeader","headers","token","Authorization","Base64","atob","init","AsyncStorage","getItem","cacheData","JSON","parse","userCacheData","Platform","OS","PermissionsAndroid","check","PERMISSIONS","ACCESS_FINE_LOCATION","cacheLanguage","updateSession","sessionData","callback","callbackError","console","debug","setItem","stringify","then","catch","e","updateUserInfo","userInfoData","clearAll","removeItem","logout","NoticeUtils","deleteAll","navigate","screen","log","setConfig","newConfig","SessionUtils"],"mappings":"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","sourcesContent":["import Base64 from '../utils/Base64';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\nimport { PermissionsAndroid, Platform } from 'react-native';\r\nimport AppConfig from '../config/App.config';\r\nimport RNRestart from \"react-native-restart\";\r\nimport useRootNavigation from \"../utils/useRootNavigation\";\r\nimport NoticeUtils from \"./NoticeUtils\";\r\n\r\nconst navigation = useRootNavigation();\r\nfunction createSessionUtils() {\r\n  let session = {\r\n    isNew: true,\r\n    isLogin: false,\r\n    userId: null,\r\n    phone: null,\r\n  };\r\n  let userInfo = {};\r\n  let config = {\r\n    locationPermission: false,\r\n    language: AppConfig.defaultLanguage,\r\n  };\r\n  const buildAuthHeader = () => {\r\n    const headers = {};\r\n    if (session?.token) {\r\n      headers.Authorization = Base64.atob(session.token);\r\n    }\r\n    return headers;\r\n  };\r\n  const init = async () => {\r\n    // Load Cache\r\n    const cacheData = await AsyncStorage.getItem('session');\r\n    if (cacheData) {\r\n      session = JSON.parse(cacheData);\r\n    }\r\n    const userCacheData = await AsyncStorage.getItem('userInfo');\r\n    if (cacheData) {\r\n      userInfo = JSON.parse(userCacheData);\r\n    }\r\n    if (Platform.OS === 'android') {\r\n      config.locationPermission = await PermissionsAndroid.check(\r\n        PermissionsAndroid.PERMISSIONS.ACCESS_FINE_LOCATION,\r\n      );\r\n    }\r\n    const cacheLanguage = await AsyncStorage.getItem('language');\r\n    config.language = cacheLanguage ?? AppConfig.defaultLanguage;\r\n  };\r\n  const updateSession = (sessionData, callback, callbackError) => {\r\n    session = { ...session, ...sessionData };\r\n    console.debug('SessionUtils', session);\r\n    AsyncStorage.setItem('session', JSON.stringify(session))\r\n      .then(() => {\r\n        callback?.();\r\n      })\r\n      .catch(e => callback?.(e));\r\n  };\r\n  const updateUserInfo = (userInfoData, callback, callbackError) => {\r\n    userInfo = userInfoData;\r\n    AsyncStorage.setItem('userInfo', JSON.stringify(userInfo))\r\n      .then(() => {\r\n        callback?.();\r\n      })\r\n      .catch(e => callback?.(e));\r\n  };\r\n  const clearAll = () => {\r\n    session = {\r\n      isNew: false,\r\n      isLogin: false,\r\n      userId: null,\r\n      phone: null,\r\n    };\r\n    userInfo = {};\r\n    AsyncStorage.removeItem('session').then();\r\n    AsyncStorage.removeItem('userInfo').then();\r\n  };\r\n  const logout = () => {\r\n    // AsyncStorage.clear().then(() => {\r\n    //   // // Immediately reload the React Native Bundle\r\n    //   // RNRestart.Restart();\r\n\r\n    NoticeUtils.deleteAll();\r\n    clearAll()\r\n    AsyncStorage.setItem('language', config.language).then();\r\n    navigation.navigate('Auth', { screen: 'login' });\r\n    console.log('logout success');\r\n    // });\r\n  }\r\n  return {\r\n    config: () => config,\r\n    userInfo: () => userInfo,\r\n    session: () => session,\r\n    init,\r\n    updateSession,\r\n    buildAuthHeader,\r\n    setConfig: newConfig => {\r\n      config = { ...config, ...newConfig };\r\n    },\r\n    updateUserInfo,\r\n    clearAll,\r\n    logout\r\n  };\r\n}\r\n\r\nconst SessionUtils = createSessionUtils();\r\n\r\nexport default SessionUtils;\r\n"]},"metadata":{},"sourceType":"script"}