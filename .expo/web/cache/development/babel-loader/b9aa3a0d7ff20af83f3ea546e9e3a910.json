{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = remoteMessageOptions;\n\nvar _common = require(\"@react-native-firebase/app/lib/common\");\n\nfunction remoteMessageOptions(messagingSenderId, remoteMessage) {\n  var out = {};\n\n  if ((0, _common.isUndefined)(remoteMessage) || !(0, _common.isObject)(remoteMessage)) {\n    throw new Error(\"'remoteMessage' expected an object value\");\n  }\n\n  if (!remoteMessage.to) {\n    out.to = messagingSenderId + \"@fcm.googleapis.com\";\n  } else if (!(0, _common.isString)(remoteMessage.to)) {\n    throw new Error(\"'remoteMessage.to' expected a string value\");\n  } else {\n    out.to = remoteMessage.to;\n  }\n\n  if (!remoteMessage.messageId) {\n    out.messageId = (0, _common.generateFirestoreId)();\n  } else if (!(0, _common.isString)(remoteMessage.messageId)) {\n    throw new Error(\"'remoteMessage.messageId' expected a string value\");\n  } else {\n    out.messageId = remoteMessage.messageId;\n  }\n\n  if (!(0, _common.hasOwnProperty)(remoteMessage, 'ttl')) {\n    out.ttl = 3600;\n  } else {\n    if (!(0, _common.isNumber)(remoteMessage.ttl)) {\n      throw new Error(\"'remoteMessage.ttl' expected a number value\");\n    }\n\n    if (remoteMessage.ttl < 0 || !(0, _common.isInteger)(remoteMessage.ttl)) {\n      throw new Error(\"'remoteMessage.ttl' expected a positive integer value\");\n    }\n\n    out.ttl = remoteMessage.ttl;\n  }\n\n  if (!remoteMessage.data) {\n    out.data = {};\n  } else if (!(0, _common.isObject)(remoteMessage.data)) {\n    throw new Error(\"'remoteMessage.data' expected an object value\");\n  } else {\n    out.data = remoteMessage.data;\n  }\n\n  if (remoteMessage.collapseKey) {\n    if (!(0, _common.isString)(remoteMessage.collapseKey)) {\n      throw new Error(\"'remoteMessage.collapseKey' expected a string value\");\n    }\n\n    out.collapseKey = remoteMessage.collapseKey;\n  }\n\n  if (remoteMessage.messageType) {\n    if (!(0, _common.isString)(remoteMessage.messageType)) {\n      throw new Error(\"'remoteMessage.messageType' expected a string value\");\n    }\n\n    out.messageType = remoteMessage.messageType;\n  }\n\n  return out;\n}","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/node_modules/@react-native-firebase/messaging/lib/remoteMessageOptions.js"],"names":["remoteMessageOptions","messagingSenderId","remoteMessage","out","Error","to","messageId","ttl","data","collapseKey","messageType"],"mappings":";;;;;AAiBA;;AAUe,SAASA,oBAAT,CAA8BC,iBAA9B,EAAiDC,aAAjD,EAAgE;AAC7E,MAAMC,GAAG,GAAG,EAAZ;;AAEA,MAAI,yBAAYD,aAAZ,KAA8B,CAAC,sBAASA,aAAT,CAAnC,EAA4D;AAC1D,UAAM,IAAIE,KAAJ,CAAU,0CAAV,CAAN;AACD;;AAED,MAAI,CAACF,aAAa,CAACG,EAAnB,EAAuB;AACrBF,IAAAA,GAAG,CAACE,EAAJ,GAAYJ,iBAAZ;AACD,GAFD,MAEO,IAAI,CAAC,sBAASC,aAAa,CAACG,EAAvB,CAAL,EAAiC;AACtC,UAAM,IAAID,KAAJ,CAAU,4CAAV,CAAN;AACD,GAFM,MAEA;AACLD,IAAAA,GAAG,CAACE,EAAJ,GAASH,aAAa,CAACG,EAAvB;AACD;;AAED,MAAI,CAACH,aAAa,CAACI,SAAnB,EAA8B;AAC5BH,IAAAA,GAAG,CAACG,SAAJ,GAAgB,kCAAhB;AACD,GAFD,MAEO,IAAI,CAAC,sBAASJ,aAAa,CAACI,SAAvB,CAAL,EAAwC;AAC7C,UAAM,IAAIF,KAAJ,CAAU,mDAAV,CAAN;AACD,GAFM,MAEA;AACLD,IAAAA,GAAG,CAACG,SAAJ,GAAgBJ,aAAa,CAACI,SAA9B;AACD;;AAED,MAAI,CAAC,4BAAeJ,aAAf,EAA8B,KAA9B,CAAL,EAA2C;AACzCC,IAAAA,GAAG,CAACI,GAAJ,GAAU,IAAV;AACD,GAFD,MAEO;AACL,QAAI,CAAC,sBAASL,aAAa,CAACK,GAAvB,CAAL,EAAkC;AAChC,YAAM,IAAIH,KAAJ,CAAU,6CAAV,CAAN;AACD;;AACD,QAAIF,aAAa,CAACK,GAAd,GAAoB,CAApB,IAAyB,CAAC,uBAAUL,aAAa,CAACK,GAAxB,CAA9B,EAA4D;AAC1D,YAAM,IAAIH,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACDD,IAAAA,GAAG,CAACI,GAAJ,GAAUL,aAAa,CAACK,GAAxB;AACD;;AAED,MAAI,CAACL,aAAa,CAACM,IAAnB,EAAyB;AACvBL,IAAAA,GAAG,CAACK,IAAJ,GAAW,EAAX;AACD,GAFD,MAEO,IAAI,CAAC,sBAASN,aAAa,CAACM,IAAvB,CAAL,EAAmC;AACxC,UAAM,IAAIJ,KAAJ,CAAU,+CAAV,CAAN;AACD,GAFM,MAEA;AACLD,IAAAA,GAAG,CAACK,IAAJ,GAAWN,aAAa,CAACM,IAAzB;AACD;;AAED,MAAIN,aAAa,CAACO,WAAlB,EAA+B;AAC7B,QAAI,CAAC,sBAASP,aAAa,CAACO,WAAvB,CAAL,EAA0C;AACxC,YAAM,IAAIL,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACDD,IAAAA,GAAG,CAACM,WAAJ,GAAkBP,aAAa,CAACO,WAAhC;AACD;;AAED,MAAIP,aAAa,CAACQ,WAAlB,EAA+B;AAC7B,QAAI,CAAC,sBAASR,aAAa,CAACQ,WAAvB,CAAL,EAA0C;AACxC,YAAM,IAAIN,KAAJ,CAAU,qDAAV,CAAN;AACD;;AACDD,IAAAA,GAAG,CAACO,WAAJ,GAAkBR,aAAa,CAACQ,WAAhC;AACD;;AAED,SAAOP,GAAP;AACD","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport {\n  generateFirestoreId,\n  hasOwnProperty,\n  isInteger,\n  isNumber,\n  isObject,\n  isString,\n  isUndefined,\n} from '@react-native-firebase/app/lib/common';\n\nexport default function remoteMessageOptions(messagingSenderId, remoteMessage) {\n  const out = {};\n\n  if (isUndefined(remoteMessage) || !isObject(remoteMessage)) {\n    throw new Error(\"'remoteMessage' expected an object value\");\n  }\n\n  if (!remoteMessage.to) {\n    out.to = `${messagingSenderId}@fcm.googleapis.com`;\n  } else if (!isString(remoteMessage.to)) {\n    throw new Error(\"'remoteMessage.to' expected a string value\");\n  } else {\n    out.to = remoteMessage.to;\n  }\n\n  if (!remoteMessage.messageId) {\n    out.messageId = generateFirestoreId();\n  } else if (!isString(remoteMessage.messageId)) {\n    throw new Error(\"'remoteMessage.messageId' expected a string value\");\n  } else {\n    out.messageId = remoteMessage.messageId;\n  }\n\n  if (!hasOwnProperty(remoteMessage, 'ttl')) {\n    out.ttl = 3600;\n  } else {\n    if (!isNumber(remoteMessage.ttl)) {\n      throw new Error(\"'remoteMessage.ttl' expected a number value\");\n    }\n    if (remoteMessage.ttl < 0 || !isInteger(remoteMessage.ttl)) {\n      throw new Error(\"'remoteMessage.ttl' expected a positive integer value\");\n    }\n    out.ttl = remoteMessage.ttl;\n  }\n\n  if (!remoteMessage.data) {\n    out.data = {};\n  } else if (!isObject(remoteMessage.data)) {\n    throw new Error(\"'remoteMessage.data' expected an object value\");\n  } else {\n    out.data = remoteMessage.data;\n  }\n\n  if (remoteMessage.collapseKey) {\n    if (!isString(remoteMessage.collapseKey)) {\n      throw new Error(\"'remoteMessage.collapseKey' expected a string value\");\n    }\n    out.collapseKey = remoteMessage.collapseKey;\n  }\n\n  if (remoteMessage.messageType) {\n    if (!isString(remoteMessage.messageType)) {\n      throw new Error(\"'remoteMessage.messageType' expected a string value\");\n    }\n    out.messageType = remoteMessage.messageType;\n  }\n\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}