{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _Icon = require(\"../constants/Icon\");\n\nvar _CustomIcon = _interopRequireDefault(require(\"./CustomIcon\"));\n\nvar _BaseStyles = require(\"../constants/BaseStyles\");\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\components\\\\XIconButton.js\";\n\nvar XIconButton = function XIconButton(_ref) {\n  var _ref$icon = _ref.icon,\n      icon = _ref$icon === void 0 ? {\n    name: '',\n    type: _Icon.IconType.FONTAWESOME,\n    size: 24\n  } : _ref$icon,\n      _ref$onPress = _ref.onPress,\n      onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress,\n      _ref$onPressIn = _ref.onPressIn,\n      onPressIn = _ref$onPressIn === void 0 ? function () {} : _ref$onPressIn,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? _Colors.default.tintColor : _ref$color,\n      _ref$iconStyle = _ref.iconStyle,\n      iconStyle = _ref$iconStyle === void 0 ? {} : _ref$iconStyle,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled;\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    style: [_BaseStyles.BaseStyles.flexRow, styles.container].concat((0, _toConsumableArray2.default)(style instanceof Array ? style : [style])),\n    onPress: onPress,\n    onPressIn: onPressIn,\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_CustomIcon.default, {\n    name: icon.name,\n    type: icon.type,\n    size: icon.size,\n    other: icon.other,\n    custom: disabled ? {\n      style: iconStyle\n    } : {\n      color: color,\n      style: iconStyle\n    },\n    focused: !disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), !!title && _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.body1, _BaseStyles.BaseStyles.ml_5, styles.title, _reactNative.StyleSheet.flatten({\n      color: color\n    })],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, title));\n};\n\nvar _default = XIconButton;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/components/XIconButton.js"],"names":["XIconButton","icon","name","type","IconType","FONTAWESOME","size","onPress","onPressIn","style","color","Colors","tintColor","iconStyle","title","disabled","BaseStyles","flexRow","styles","container","Array","other","BaseFontStyles","body1","ml_5","StyleSheet","flatten","create","justifyContent","alignItems","alignSelf"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OASd;AAAA,uBARJC,IAQI;AAAA,MARJA,IAQI,0BARG;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,IAAI,EAAEC,eAASC,WAA3B;AAAwCC,IAAAA,IAAI,EAAE;AAA9C,GAQH;AAAA,0BAPJC,OAOI;AAAA,MAPJA,OAOI,6BAPM,YAAM,CAAE,CAOd;AAAA,4BANJC,SAMI;AAAA,MANJA,SAMI,+BANQ,YAAM,CAAE,CAMhB;AAAA,wBALJC,KAKI;AAAA,MALJA,KAKI,2BALI,EAKJ;AAAA,wBAJJC,KAII;AAAA,MAJJA,KAII,2BAJIC,gBAAOC,SAIX;AAAA,4BAHJC,SAGI;AAAA,MAHJA,SAGI,+BAHQ,EAGR;AAAA,wBAFJC,KAEI;AAAA,MAFJA,KAEI,2BAFI,EAEJ;AAAA,2BADJC,QACI;AAAA,MADJA,QACI,8BADO,KACP;AACJ,SACE,6BAAC,6BAAD;AACE,IAAA,KAAK,GACHC,uBAAWC,OADR,EAEHC,MAAM,CAACC,SAFJ,0CAGCV,KAAK,YAAYW,KAAjB,GAAyBX,KAAzB,GAAiC,CAACA,KAAD,CAHlC,EADP;AAME,IAAA,OAAO,EAAEF,OANX;AAOE,IAAA,SAAS,EAAEC,SAPb;AAQE,IAAA,QAAQ,EAAEO,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE,6BAAC,mBAAD;AACE,IAAA,IAAI,EAAEd,IAAI,CAACC,IADb;AAEE,IAAA,IAAI,EAAED,IAAI,CAACE,IAFb;AAGE,IAAA,IAAI,EAAEF,IAAI,CAACK,IAHb;AAIE,IAAA,KAAK,EAAEL,IAAI,CAACoB,KAJd;AAKE,IAAA,MAAM,EACJN,QAAQ,GAAG;AAAEN,MAAAA,KAAK,EAAEI;AAAT,KAAH,GAA0B;AAAEH,MAAAA,KAAK,EAAEA,KAAT;AAAgBD,MAAAA,KAAK,EAAEI;AAAvB,KANtC;AAQE,IAAA,OAAO,EAAE,CAACE,QARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAmBG,CAAC,CAACD,KAAF,IACC,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLQ,2BAAeC,KADV,EAELP,uBAAWQ,IAFN,EAGLN,MAAM,CAACJ,KAHF,EAILW,wBAAWC,OAAX,CAAmB;AAAEhB,MAAAA,KAAK,EAAEA;AAAT,KAAnB,CAJK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGI,KAPH,CApBJ,CADF;AAiCD,CA3CD;;eA6Ced,W;;;AAEf,IAAMkB,MAAM,GAAGO,wBAAWE,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,cAAc,EAAE,QADP;AAETC,IAAAA,UAAU,EAAE;AAFH,GADoB;AAK/Bf,EAAAA,KAAK,EAAE;AACLgB,IAAAA,SAAS,EAAE;AADN;AALwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport Colors from '../constants/Colors';\r\nimport { IconType } from '../constants/Icon';\r\nimport CustomIcon from './CustomIcon';\r\nimport { BaseFontStyles, BaseStyles } from '../constants/BaseStyles';\r\n\r\nconst XIconButton = ({\r\n  icon = { name: '', type: IconType.FONTAWESOME, size: 24 },\r\n  onPress = () => {},\r\n  onPressIn = () => {},\r\n  style = {},\r\n  color = Colors.tintColor,\r\n  iconStyle = {},\r\n  title = '',\r\n  disabled = false,\r\n}) => {\r\n  return (\r\n    <TouchableOpacity\r\n      style={[\r\n        BaseStyles.flexRow,\r\n        styles.container,\r\n        ...(style instanceof Array ? style : [style]),\r\n      ]}\r\n      onPress={onPress}\r\n      onPressIn={onPressIn}\r\n      disabled={disabled}>\r\n      <CustomIcon\r\n        name={icon.name}\r\n        type={icon.type}\r\n        size={icon.size}\r\n        other={icon.other}\r\n        custom={\r\n          disabled ? { style: iconStyle } : { color: color, style: iconStyle }\r\n        }\r\n        focused={!disabled}\r\n      />\r\n      {!!title && (\r\n        <Text\r\n          style={[\r\n            BaseFontStyles.body1,\r\n            BaseStyles.ml_5,\r\n            styles.title,\r\n            StyleSheet.flatten({ color: color }),\r\n          ]}>\r\n          {title}\r\n        </Text>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default XIconButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  title: {\r\n    alignSelf: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}