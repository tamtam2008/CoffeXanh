{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.styleWithInset = styleWithInset;\nexports.styleWithInsetMargin = styleWithInsetMargin;\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _reactNativeIphoneXHelper = require(\"react-native-iphone-x-helper\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar PAD_WIDTH = 768;\nvar PAD_HEIGHT = 1024;\n\nvar _Dimensions$get = _reactNative.Dimensions.get(\"window\"),\n    D_HEIGHT = _Dimensions$get.height,\n    D_WIDTH = _Dimensions$get.width;\n\nvar isAndroid = _reactNative.Platform.OS === \"android\";\nvar isIPhoneX = (0, _reactNativeIphoneXHelper.isIphoneX)();\n\nvar isIPad = function () {\n  if (_reactNative.Platform.OS !== \"ios\" || isIPhoneX) return false;\n\n  if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {\n    return false;\n  }\n\n  if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {\n    return false;\n  }\n\n  return true;\n}();\n\nvar isOrientationLandscape = function isOrientationLandscape(_ref) {\n  var width = _ref.width,\n      height = _ref.height;\n  return width > height;\n};\n\nvar _customStatusBarHeight = null;\n\nvar statusBarHeight = function statusBarHeight() {\n  var isLandscape = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n  if (_customStatusBarHeight !== null) {\n    return _customStatusBarHeight;\n  }\n\n  if (isAndroid) {\n    if (global.Expo) {\n      return global.Expo.Constants.statusBarHeight + 6;\n    } else {\n      return 6;\n    }\n  }\n\n  if (isIPhoneX) {\n    return isLandscape ? 0 : (0, _reactNativeIphoneXHelper.getStatusBarHeight)(true);\n  }\n\n  if (isIPad) {\n    return 20;\n  }\n\n  return isLandscape ? 0 : 20;\n};\n\nvar doubleFromPercentString = function doubleFromPercentString(percent) {\n  if (!percent.includes(\"%\")) {\n    return 0;\n  }\n\n  var dbl = parseFloat(percent) / 100;\n  if (isNaN(dbl)) return 0;\n  return dbl;\n};\n\nfunction styleWithInset(style, wrapperInset) {\n  var hideStatusBar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var prop = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"padding\";\n\n  if (prop === \"margin\") {\n    return styleWithInsetMargin(style, wrapperInset, hideStatusBar);\n  }\n\n  var _Dimensions$get2 = _reactNative.Dimensions.get(\"window\"),\n      viewWidth = _Dimensions$get2.width;\n\n  var _StyleSheet$flatten = _reactNative.StyleSheet.flatten(style || {}),\n      _StyleSheet$flatten$p = _StyleSheet$flatten.padding,\n      padding = _StyleSheet$flatten$p === void 0 ? 0 : _StyleSheet$flatten$p,\n      _StyleSheet$flatten$p2 = _StyleSheet$flatten.paddingVertical,\n      paddingVertical = _StyleSheet$flatten$p2 === void 0 ? padding : _StyleSheet$flatten$p2,\n      _StyleSheet$flatten$p3 = _StyleSheet$flatten.paddingHorizontal,\n      paddingHorizontal = _StyleSheet$flatten$p3 === void 0 ? padding : _StyleSheet$flatten$p3,\n      _StyleSheet$flatten$p4 = _StyleSheet$flatten.paddingTop,\n      paddingTop = _StyleSheet$flatten$p4 === void 0 ? paddingVertical : _StyleSheet$flatten$p4,\n      _StyleSheet$flatten$p5 = _StyleSheet$flatten.paddingBottom,\n      paddingBottom = _StyleSheet$flatten$p5 === void 0 ? paddingVertical : _StyleSheet$flatten$p5,\n      _StyleSheet$flatten$p6 = _StyleSheet$flatten.paddingLeft,\n      paddingLeft = _StyleSheet$flatten$p6 === void 0 ? paddingHorizontal : _StyleSheet$flatten$p6,\n      _StyleSheet$flatten$p7 = _StyleSheet$flatten.paddingRight,\n      paddingRight = _StyleSheet$flatten$p7 === void 0 ? paddingHorizontal : _StyleSheet$flatten$p7,\n      viewStyle = (0, _objectWithoutProperties2.default)(_StyleSheet$flatten, [\"padding\", \"paddingVertical\", \"paddingHorizontal\", \"paddingTop\", \"paddingBottom\", \"paddingLeft\", \"paddingRight\"]);\n\n  if (typeof paddingTop !== \"number\") {\n    paddingTop = doubleFromPercentString(paddingTop) * viewWidth;\n  }\n\n  if (typeof paddingBottom !== \"number\") {\n    paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;\n  }\n\n  if (typeof paddingLeft !== \"number\") {\n    paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;\n  }\n\n  if (typeof paddingRight !== \"number\") {\n    paddingRight = doubleFromPercentString(paddingRight) * viewWidth;\n  }\n\n  return _objectSpread(_objectSpread({}, viewStyle), {}, {\n    paddingTop: !!wrapperInset.isIPhoneX || !hideStatusBar ? paddingTop + wrapperInset.insetTop : paddingTop,\n    paddingBottom: paddingBottom + wrapperInset.insetBottom,\n    paddingLeft: paddingLeft + wrapperInset.insetLeft,\n    paddingRight: paddingRight + wrapperInset.insetRight\n  });\n}\n\nfunction styleWithInsetMargin(style, wrapperInset) {\n  var hideStatusBar = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  var _Dimensions$get3 = _reactNative.Dimensions.get(\"window\"),\n      viewWidth = _Dimensions$get3.width;\n\n  var _StyleSheet$flatten2 = _reactNative.StyleSheet.flatten(style || {}),\n      _StyleSheet$flatten2$ = _StyleSheet$flatten2.margin,\n      margin = _StyleSheet$flatten2$ === void 0 ? 0 : _StyleSheet$flatten2$,\n      _StyleSheet$flatten2$2 = _StyleSheet$flatten2.marginVertical,\n      marginVertical = _StyleSheet$flatten2$2 === void 0 ? margin : _StyleSheet$flatten2$2,\n      _StyleSheet$flatten2$3 = _StyleSheet$flatten2.marginHorizontal,\n      marginHorizontal = _StyleSheet$flatten2$3 === void 0 ? margin : _StyleSheet$flatten2$3,\n      _StyleSheet$flatten2$4 = _StyleSheet$flatten2.marginTop,\n      marginTop = _StyleSheet$flatten2$4 === void 0 ? marginVertical : _StyleSheet$flatten2$4,\n      _StyleSheet$flatten2$5 = _StyleSheet$flatten2.marginBottom,\n      marginBottom = _StyleSheet$flatten2$5 === void 0 ? marginVertical : _StyleSheet$flatten2$5,\n      _StyleSheet$flatten2$6 = _StyleSheet$flatten2.marginLeft,\n      marginLeft = _StyleSheet$flatten2$6 === void 0 ? marginHorizontal : _StyleSheet$flatten2$6,\n      _StyleSheet$flatten2$7 = _StyleSheet$flatten2.marginRight,\n      marginRight = _StyleSheet$flatten2$7 === void 0 ? marginHorizontal : _StyleSheet$flatten2$7,\n      viewStyle = (0, _objectWithoutProperties2.default)(_StyleSheet$flatten2, [\"margin\", \"marginVertical\", \"marginHorizontal\", \"marginTop\", \"marginBottom\", \"marginLeft\", \"marginRight\"]);\n\n  if (typeof marginTop !== \"number\") {\n    marginTop = doubleFromPercentString(marginTop) * viewWidth;\n  }\n\n  if (typeof marginBottom !== \"number\") {\n    marginBottom = doubleFromPercentString(marginBottom) * viewWidth;\n  }\n\n  if (typeof marginLeft !== \"number\") {\n    marginLeft = doubleFromPercentString(marginLeft) * viewWidth;\n  }\n\n  if (typeof marginRight !== \"number\") {\n    marginRight = doubleFromPercentString(marginRight) * viewWidth;\n  }\n\n  return _objectSpread(_objectSpread({}, viewStyle), {}, {\n    marginTop: !!wrapperInset.isIPhoneX || !hideStatusBar ? marginTop + wrapperInset.insetTop : marginTop,\n    marginBottom: marginBottom + wrapperInset.insetBottom,\n    marginLeft: marginLeft + wrapperInset.insetLeft,\n    marginRight: marginRight + wrapperInset.insetRight\n  });\n}\n\nvar FlashMessageWrapper = function (_Component) {\n  (0, _inherits2.default)(FlashMessageWrapper, _Component);\n\n  var _super = _createSuper(FlashMessageWrapper);\n\n  function FlashMessageWrapper() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FlashMessageWrapper);\n    _this = _super.call(this);\n    _this.handleOrientationChange = _this.handleOrientationChange.bind((0, _assertThisInitialized2.default)(_this));\n    var isLandscape = isOrientationLandscape(_reactNative.Dimensions.get(\"window\"));\n    _this.state = {\n      isLandscape: isLandscape\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(FlashMessageWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _reactNative.Dimensions.addEventListener(\"change\", this.handleOrientationChange);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _reactNative.Dimensions.removeEventListener(\"change\", this.handleOrientationChange);\n    }\n  }, {\n    key: \"handleOrientationChange\",\n    value: function handleOrientationChange(_ref2) {\n      var window = _ref2.window;\n      var isLandscape = isOrientationLandscape(window);\n      this.setState({\n        isLandscape: isLandscape\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          position = _this$props.position,\n          children = _this$props.children;\n      var isLandscape = this.state.isLandscape;\n\n      var _statusBarHeight = statusBarHeight(isLandscape);\n\n      var wrapper = {\n        isLandscape: isLandscape,\n        isIPhoneX: isIPhoneX,\n        isIPad: isIPad,\n        statusBarHeight: _statusBarHeight,\n        insetTop: position === \"top\" ? _statusBarHeight : 0,\n        insetLeft: (position === \"top\" || position === \"bottom\") && isLandscape ? isIPhoneX ? 21 : 0 : 0,\n        insetRight: (position === \"top\" || position === \"bottom\") && isLandscape ? isIPhoneX ? 21 : 0 : 0,\n        insetBottom: isIPhoneX && position === \"bottom\" ? isLandscape ? 24 : 34 : isAndroid ? 2 : 0\n      };\n      return children(wrapper);\n    }\n  }]);\n  return FlashMessageWrapper;\n}(_react.Component);\n\nexports.default = FlashMessageWrapper;\nFlashMessageWrapper.defaultProps = {\n  position: \"top\"\n};\nFlashMessageWrapper.propTypes = {\n  position: _propTypes.default.string,\n  children: _propTypes.default.func.isRequired\n};\n\nFlashMessageWrapper.setStatusBarHeight = function (height) {\n  _customStatusBarHeight = height;\n};","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/node_modules/react-native-flash-message/src/FlashMessageWrapper.js"],"names":["PAD_WIDTH","PAD_HEIGHT","Dimensions","get","D_HEIGHT","height","D_WIDTH","width","isAndroid","Platform","OS","isIPhoneX","isIPad","isOrientationLandscape","_customStatusBarHeight","statusBarHeight","isLandscape","global","Expo","Constants","doubleFromPercentString","percent","includes","dbl","parseFloat","isNaN","styleWithInset","style","wrapperInset","hideStatusBar","prop","styleWithInsetMargin","viewWidth","StyleSheet","flatten","padding","paddingVertical","paddingHorizontal","paddingTop","paddingBottom","paddingLeft","paddingRight","viewStyle","insetTop","insetBottom","insetLeft","insetRight","margin","marginVertical","marginHorizontal","marginTop","marginBottom","marginLeft","marginRight","FlashMessageWrapper","handleOrientationChange","bind","state","addEventListener","removeEventListener","window","setState","props","position","children","_statusBarHeight","wrapper","Component","defaultProps","propTypes","PropTypes","string","func","isRequired","setStatusBarHeight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Dimensions, Platform, StyleSheet } from \"react-native\";\nimport { isIphoneX, getStatusBarHeight } from \"react-native-iphone-x-helper\";\nimport PropTypes from \"prop-types\";\n\n/**\n * DETECTION AND DIMENSIONS CODE FROM:\n * https://github.com/react-community/react-native-safe-area-view\n */\n\nconst PAD_WIDTH = 768; // iPad\nconst PAD_HEIGHT = 1024; // iPad\n\nconst { height: D_HEIGHT, width: D_WIDTH } = Dimensions.get(\"window\");\n\nconst isAndroid = Platform.OS === \"android\";\n\nconst isIPhoneX = isIphoneX();\n\nconst isIPad = (() => {\n  if (Platform.OS !== \"ios\" || isIPhoneX) return false;\n\n  // if portrait and width is smaller than iPad width\n  if (D_HEIGHT > D_WIDTH && D_WIDTH < PAD_WIDTH) {\n    return false;\n  }\n\n  // if landscape and height is smaller that iPad height\n  if (D_WIDTH > D_HEIGHT && D_HEIGHT < PAD_WIDTH) {\n    return false;\n  }\n\n  return true;\n})();\n\nconst isOrientationLandscape = ({ width, height }) => width > height;\n\nlet _customStatusBarHeight = null;\nconst statusBarHeight = (isLandscape = false) => {\n  if (_customStatusBarHeight !== null) {\n    return _customStatusBarHeight;\n  }\n\n  /**\n   * This is a temporary workaround because we don't have a way to detect\n   * if the status bar is translucent or opaque. If opaque, we don't need to\n   * factor in the height here; if translucent (content renders under it) then\n   * we do.\n   */\n  if (isAndroid) {\n    if (global.Expo) {\n      return global.Expo.Constants.statusBarHeight + 6;\n    } else {\n      return 6;\n    }\n  }\n\n  if (isIPhoneX) {\n    return isLandscape ? 0 : getStatusBarHeight(true);\n  }\n\n  if (isIPad) {\n    return 20;\n  }\n\n  return isLandscape ? 0 : 20;\n};\n\nconst doubleFromPercentString = percent => {\n  if (!percent.includes(\"%\")) {\n    return 0;\n  }\n\n  const dbl = parseFloat(percent) / 100;\n\n  if (isNaN(dbl)) return 0;\n\n  return dbl;\n};\n\n/**\n * Helper function to \"append\" extra padding in MessageComponent style\n */\nexport function styleWithInset(style, wrapperInset, hideStatusBar = false, prop = \"padding\") {\n  if (prop === \"margin\") {\n    return styleWithInsetMargin(style, wrapperInset, hideStatusBar);\n  }\n\n  const { width: viewWidth } = Dimensions.get(\"window\");\n\n  let {\n    padding = 0,\n    paddingVertical = padding,\n    paddingHorizontal = padding,\n    paddingTop = paddingVertical,\n    paddingBottom = paddingVertical,\n    paddingLeft = paddingHorizontal,\n    paddingRight = paddingHorizontal,\n    ...viewStyle\n  } = StyleSheet.flatten(style || {});\n\n  if (typeof paddingTop !== \"number\") {\n    paddingTop = doubleFromPercentString(paddingTop) * viewWidth;\n  }\n\n  if (typeof paddingBottom !== \"number\") {\n    paddingBottom = doubleFromPercentString(paddingBottom) * viewWidth;\n  }\n\n  if (typeof paddingLeft !== \"number\") {\n    paddingLeft = doubleFromPercentString(paddingLeft) * viewWidth;\n  }\n\n  if (typeof paddingRight !== \"number\") {\n    paddingRight = doubleFromPercentString(paddingRight) * viewWidth;\n  }\n\n  return {\n    ...viewStyle,\n    paddingTop: !!wrapperInset.isIPhoneX || !hideStatusBar ? paddingTop + wrapperInset.insetTop : paddingTop,\n    paddingBottom: paddingBottom + wrapperInset.insetBottom,\n    paddingLeft: paddingLeft + wrapperInset.insetLeft,\n    paddingRight: paddingRight + wrapperInset.insetRight,\n  };\n}\n\n/**\n * Helper function to \"append\" extra margin in MessageComponent style\n */\nexport function styleWithInsetMargin(style, wrapperInset, hideStatusBar = false) {\n  const { width: viewWidth } = Dimensions.get(\"window\");\n\n  let {\n    margin = 0,\n    marginVertical = margin,\n    marginHorizontal = margin,\n    marginTop = marginVertical,\n    marginBottom = marginVertical,\n    marginLeft = marginHorizontal,\n    marginRight = marginHorizontal,\n    ...viewStyle\n  } = StyleSheet.flatten(style || {});\n\n  if (typeof marginTop !== \"number\") {\n    marginTop = doubleFromPercentString(marginTop) * viewWidth;\n  }\n\n  if (typeof marginBottom !== \"number\") {\n    marginBottom = doubleFromPercentString(marginBottom) * viewWidth;\n  }\n\n  if (typeof marginLeft !== \"number\") {\n    marginLeft = doubleFromPercentString(marginLeft) * viewWidth;\n  }\n\n  if (typeof marginRight !== \"number\") {\n    marginRight = doubleFromPercentString(marginRight) * viewWidth;\n  }\n\n  return {\n    ...viewStyle,\n    marginTop: !!wrapperInset.isIPhoneX || !hideStatusBar ? marginTop + wrapperInset.insetTop : marginTop,\n    marginBottom: marginBottom + wrapperInset.insetBottom,\n    marginLeft: marginLeft + wrapperInset.insetLeft,\n    marginRight: marginRight + wrapperInset.insetRight,\n  };\n}\n\n/**\n * Utility component wrapper to handle orientation changes and extra padding controle for iOS (specially iPads and iPhone X)\n */\nexport default class FlashMessageWrapper extends Component {\n  static defaultProps = {\n    /**\n     * Default FlashMessage position is \"top\"\n     * Other options like \"bottom\" and \"center\" uses other extra padding configurations\n     */\n    position: \"top\",\n  };\n  static propTypes = {\n    position: PropTypes.string,\n    children: PropTypes.func.isRequired,\n  };\n  static setStatusBarHeight = height => {\n    _customStatusBarHeight = height;\n  };\n  constructor() {\n    super();\n\n    this.handleOrientationChange = this.handleOrientationChange.bind(this);\n\n    const isLandscape = isOrientationLandscape(Dimensions.get(\"window\"));\n    this.state = { isLandscape };\n  }\n  componentDidMount() {\n    Dimensions.addEventListener(\"change\", this.handleOrientationChange);\n  }\n  componentWillUnmount() {\n    Dimensions.removeEventListener(\"change\", this.handleOrientationChange);\n  }\n  handleOrientationChange({ window }) {\n    const isLandscape = isOrientationLandscape(window);\n    this.setState({ isLandscape });\n  }\n  render() {\n    const { position, children } = this.props;\n    const { isLandscape } = this.state;\n\n    const _statusBarHeight = statusBarHeight(isLandscape);\n\n    /**\n     * This wrapper will return data about extra inset padding, statusBarHeight and some device detection like iPhoneX and iPad\n     */\n    const wrapper = {\n      isLandscape,\n      isIPhoneX: isIPhoneX,\n      isIPad: isIPad,\n      statusBarHeight: _statusBarHeight,\n      insetTop: position === \"top\" ? _statusBarHeight : 0,\n      insetLeft: (position === \"top\" || position === \"bottom\") && isLandscape ? (isIPhoneX ? 21 : 0) : 0,\n      insetRight: (position === \"top\" || position === \"bottom\") && isLandscape ? (isIPhoneX ? 21 : 0) : 0,\n      insetBottom: isIPhoneX && position === \"bottom\" ? (isLandscape ? 24 : 34) : isAndroid ? 2 : 0,\n    };\n\n    return children(wrapper);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}