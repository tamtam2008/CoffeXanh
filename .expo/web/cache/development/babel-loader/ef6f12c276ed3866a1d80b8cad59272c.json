{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _BaseStyles = require(\"../constants/BaseStyles\");\n\nvar _Colors = _interopRequireDefault(require(\"../constants/Colors\"));\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ADMINS\\\\Desktop\\\\GreenApp\\\\CoffeXanh\\\\src\\\\components\\\\XButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar XButton = function XButton(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      style = _ref.style,\n      buttonColor = _ref.buttonColor;\n\n  var customStyle = _objectSpread({\n    width: '100%'\n  }, style);\n\n  var customColor = _reactNative.StyleSheet.flatten({\n    backgroundColor: buttonColor\n  });\n\n  return _react.default.createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 0.4,\n    style: [_BaseStyles.BaseStyles.boxWithShadow, styles.container, disabled ? styles.disabled : buttonColor ? customColor : styles.active, customStyle],\n    onPress: onPress ? onPress : function () {},\n    disabled: disabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: styles.container2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.Text, {\n    style: [_BaseStyles.BaseFontStyles.menuOrBody2, styles.button, disabled ? styles.textDisabled : styles.textActive],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, title)));\n};\n\nvar _default = XButton;\nexports.default = _default;\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    borderRadius: 5,\n    height: 36\n  },\n  container2: {\n    height: 36,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingBottom: 1,\n    borderRadius: 5\n  },\n  button: {\n    textAlign: 'center'\n  },\n  textActive: {\n    color: '#fff'\n  },\n  active: {\n    backgroundColor: _Colors.default.tintColor\n  },\n  textDisabled: {\n    color: '#fff'\n  },\n  disabled: {\n    backgroundColor: _Colors.default.lightGray\n  }\n});","map":{"version":3,"sources":["C:/Users/ADMINS/Desktop/GreenApp/CoffeXanh/src/components/XButton.js"],"names":["XButton","title","onPress","disabled","style","buttonColor","customStyle","width","customColor","StyleSheet","flatten","backgroundColor","BaseStyles","boxWithShadow","styles","container","active","container2","BaseFontStyles","menuOrBody2","button","textDisabled","textActive","create","borderRadius","height","flexDirection","justifyContent","alignItems","paddingHorizontal","paddingBottom","textAlign","color","Colors","tintColor","lightGray"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,OAA8D;AAAA,MAA3DC,KAA2D,QAA3DA,KAA2D;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,2BAA3CC,QAA2C;AAAA,MAA3CA,QAA2C,8BAAhC,KAAgC;AAAA,MAAzBC,KAAyB,QAAzBA,KAAyB;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAC5E,MAAMC,WAAW;AACfC,IAAAA,KAAK,EAAE;AADQ,KAEZH,KAFY,CAAjB;;AAIA,MAAMI,WAAW,GAAGC,wBAAWC,OAAX,CAAmB;AACrCC,IAAAA,eAAe,EAAEN;AADoB,GAAnB,CAApB;;AAGA,SACE,6BAAC,6BAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAGE,IAAA,KAAK,EAAE,CACLO,uBAAWC,aADN,EAELC,MAAM,CAACC,SAFF,EAGLZ,QAAQ,GAAGW,MAAM,CAACX,QAAV,GAAqBE,WAAW,GAAGG,WAAH,GAAiBM,MAAM,CAACE,MAH3D,EAILV,WAJK,CAHT;AASE,IAAA,OAAO,EAAEJ,OAAO,GAAGA,OAAH,GAAa,YAAM,CAAE,CATvC;AAUE,IAAA,QAAQ,EAAEC,QAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEW,MAAM,CAACG,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLC,2BAAeC,WADV,EAELL,MAAM,CAACM,MAFF,EAGLjB,QAAQ,GAAGW,MAAM,CAACO,YAAV,GAAyBP,MAAM,CAACQ,UAHnC,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGrB,KANH,CADF,CAXF,CADF;AAwBD,CAhCD;;eAkCeD,O;;;AAEf,IAAMc,MAAM,GAAGL,wBAAWc,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,YAAY,EAAE,CADL;AAETC,IAAAA,MAAM,EAAE;AAFC,GADoB;AAK/BR,EAAAA,UAAU,EAAE;AACVQ,IAAAA,MAAM,EAAE,EADE;AAEVC,IAAAA,aAAa,EAAE,QAFL;AAGVC,IAAAA,cAAc,EAAE,QAHN;AAIVC,IAAAA,UAAU,EAAE,QAJF;AAKVC,IAAAA,iBAAiB,EAAE,EALT;AAMVC,IAAAA,aAAa,EAAE,CANL;AAOVN,IAAAA,YAAY,EAAE;AAPJ,GALmB;AAc/BJ,EAAAA,MAAM,EAAE;AACNW,IAAAA,SAAS,EAAE;AADL,GAduB;AAiB/BT,EAAAA,UAAU,EAAE;AACVU,IAAAA,KAAK,EAAE;AADG,GAjBmB;AAoB/BhB,EAAAA,MAAM,EAAE;AACNL,IAAAA,eAAe,EAAEsB,gBAAOC;AADlB,GApBuB;AAuB/Bb,EAAAA,YAAY,EAAE;AACZW,IAAAA,KAAK,EAAE;AADK,GAvBiB;AA0B/B7B,EAAAA,QAAQ,EAAE;AACRQ,IAAAA,eAAe,EAAEsB,gBAAOE;AADhB;AA1BqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, TouchableOpacity, View } from 'react-native';\r\nimport { BaseFontStyles, BaseStyles } from '../constants/BaseStyles';\r\nimport Colors from '../constants/Colors';\r\n\r\nconst XButton = ({ title, onPress, disabled = false, style, buttonColor }) => {\r\n  const customStyle = {\r\n    width: '100%',\r\n    ...style,\r\n  };\r\n  const customColor = StyleSheet.flatten({\r\n    backgroundColor: buttonColor,\r\n  });\r\n  return (\r\n    <TouchableOpacity\r\n      activeOpacity={0.4}\r\n      // underlayColor=\"#52ca75\"\r\n      style={[\r\n        BaseStyles.boxWithShadow,\r\n        styles.container,\r\n        disabled ? styles.disabled : buttonColor ? customColor : styles.active,\r\n        customStyle,\r\n      ]}\r\n      onPress={onPress ? onPress : () => {}}\r\n      disabled={disabled}>\r\n      <View style={styles.container2}>\r\n        <Text\r\n          style={[\r\n            BaseFontStyles.menuOrBody2,\r\n            styles.button,\r\n            disabled ? styles.textDisabled : styles.textActive,\r\n          ]}>\r\n          {title}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nexport default XButton;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    borderRadius: 5,\r\n    height: 36,\r\n  },\r\n  container2: {\r\n    height: 36,\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 16,\r\n    paddingBottom: 1,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    textAlign: 'center',\r\n  },\r\n  textActive: {\r\n    color: '#fff',\r\n  },\r\n  active: {\r\n    backgroundColor: Colors.tintColor,\r\n  },\r\n  textDisabled: {\r\n    color: '#fff',\r\n  },\r\n  disabled: {\r\n    backgroundColor: Colors.lightGray,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"script"}